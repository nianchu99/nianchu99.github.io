<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Python/Python—函数式子编程</title>
    <url>/2020/02/15/Python/Python%E2%80%94%E5%87%BD%E6%95%B0%E5%BC%8F%E5%AD%90%E7%BC%96%E7%A8%8B/</url>
    <content><![CDATA[<h1 id=""><a href="#" class="headerlink" title=""></a></h1>]]></content>
      <categories>
        <category>Python</category>
      </categories>
  </entry>
  <entry>
    <title>Python/sum函数</title>
    <url>/2020/02/15/Python/sum%E5%87%BD%E6%95%B0/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>Python</category>
      </categories>
  </entry>
  <entry>
    <title>Java/Java学习记录</title>
    <url>/2020/02/10/Java/Java%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/</url>
    <content><![CDATA[<h1 id="分支结构"><a href="#分支结构" class="headerlink" title="分支结构"></a>分支结构</h1><h2 id="if"><a href="#if" class="headerlink" title="if"></a>if</h2><h2 id="switch"><a href="#switch" class="headerlink" title="switch"></a>switch</h2><h3 id="语法结构"><a href="#语法结构" class="headerlink" title="语法结构"></a>语法结构</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">switch</span> (表达式) &#123; <span class="keyword">case</span> 值<span class="number">1</span>:</span><br><span class="line">语句组<span class="number">1</span> <span class="keyword">case</span> 值<span class="number">2</span>:</span><br><span class="line">语句组<span class="number">2</span> <span class="keyword">case</span> 值<span class="number">3</span>:</span><br><span class="line">语句组<span class="number">3</span> ...</span><br><span class="line"><span class="keyword">case</span> 判断值n: 语句组n</span><br><span class="line"><span class="keyword">default</span>: 语句组n+<span class="number">1</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>switch语句中“表达式”计算结果只能是int，byte，short，char类型，不能是long更不能是其他的类型。</p>
</blockquote>
<h1 id="循环结构"><a href="#循环结构" class="headerlink" title="循环结构"></a>循环结构</h1><h2 id="while"><a href="#while" class="headerlink" title="while"></a>while</h2><h2 id="do-while"><a href="#do-while" class="headerlink" title="do-while"></a>do-while</h2><h2 id="for"><a href="#for" class="headerlink" title="for"></a>for</h2><h2 id="for-each语句"><a href="#for-each语句" class="headerlink" title="for-each语句"></a>for-each语句</h2><blockquote>
<p>Java 5之后提供了一种专门用于遍历集合的for循环——for-each循环。</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span>  <span class="keyword">void</span> <span class="title">main</span> <span class="params">(String[]args)</span> </span>&#123;</span><br><span class="line">		</span><br><span class="line">		<span class="keyword">int</span>[ ]numbers = &#123;<span class="number">1</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">7</span>,<span class="number">9</span>&#125;;</span><br><span class="line">		System.out.printf(<span class="string">"for-each 语句%n"</span>);</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> number : numbers) &#123;</span><br><span class="line">			System.out.printf(<span class="string">"%d%n"</span>,number);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 输出结果：</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment">for-each 语句</span></span><br><span class="line"><span class="comment">1</span></span><br><span class="line"><span class="comment">3</span></span><br><span class="line"><span class="comment">5</span></span><br><span class="line"><span class="comment">7</span></span><br><span class="line"><span class="comment">9</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>



<h1 id="跳转语句"><a href="#跳转语句" class="headerlink" title="跳转语句"></a>跳转语句</h1><blockquote>
<p>跳转语句能够改变程序的执行顺序，可以实现程序的跳转。</p>
</blockquote>
<h2 id="break"><a href="#break" class="headerlink" title="break"></a>break</h2><h3 id="break-不带标签"><a href="#break-不带标签" class="headerlink" title="break;不带标签"></a>break;不带标签</h3><h3 id="break-label；带标签"><a href="#break-label；带标签" class="headerlink" title="break label；带标签"></a>break label；带标签</h3><blockquote>
<p>默认情况下，break只会跳出最近的内循环。如果要跳出代码第1行的外循环， 可以为外循环添加一个标签，注意在定义标签的时候后面跟一个冒号</p>
</blockquote>
<blockquote>
<p>添加标签对于多层嵌套循环是很有必要的，适 当使用可以提高程序的执行效率。</p>
</blockquote>
<h2 id="continue"><a href="#continue" class="headerlink" title="continue"></a>continue</h2><h3 id="带标签"><a href="#带标签" class="headerlink" title="带标签"></a>带标签</h3><h3 id="不带标签"><a href="#不带标签" class="headerlink" title="不带标签"></a>不带标签</h3><p><strong>例子</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> nianchu;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span>  <span class="keyword">void</span> <span class="title">main</span> <span class="params">(String[]args)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">int</span> a=<span class="number">5</span>,b=<span class="number">2</span>;</span><br><span class="line">		x1:<span class="keyword">for</span>(a=<span class="number">0</span>;a&lt;<span class="number">3</span>;a++) &#123;</span><br><span class="line">			<span class="keyword">for</span>(b=<span class="number">0</span>;b&lt;<span class="number">3</span>;b++) &#123;</span><br><span class="line">				<span class="keyword">if</span>(a==b) &#123;</span><br><span class="line">					<span class="keyword">continue</span> x1;</span><br><span class="line">				&#125;</span><br><span class="line">				System.out.printf(<span class="string">"(%d,%d)"</span>,a,b);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 输出结果：</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment">(1,0)(2,0)(2,1)</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>





<h1 id="小技巧"><a href="#小技巧" class="headerlink" title="小技巧"></a>小技巧</h1><h2 id="输出时可以用-号将要输出的两部分连在一起"><a href="#输出时可以用-号将要输出的两部分连在一起" class="headerlink" title="输出时可以用+号将要输出的两部分连在一起"></a>输出时可以用+号将要输出的两部分连在一起</h2><p>实例：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span>  <span class="keyword">void</span> <span class="title">main</span> <span class="params">(String[]args)</span> </span>&#123;</span><br><span class="line">	System.out.println(<span class="string">"C"</span> + <span class="string">"LOVE"</span> + <span class="string">"L"</span>);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="获取数组的长度"><a href="#获取数组的长度" class="headerlink" title="获取数组的长度"></a>获取数组的长度</h2><blockquote>
<p>numbers.length</p>
</blockquote>
<h2 id="print-printf-println的区别"><a href="#print-printf-println的区别" class="headerlink" title="print,printf,println的区别"></a>print,printf,println的区别</h2><p>​    </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">printf主要是继承了C语言的printf的一些特性，可以进行格式化输出</span><br></pre></td></tr></table></figure>



<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">print就是一般的标准输出，但是不换行</span><br></pre></td></tr></table></figure>



<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">println和print基本没什么差别，就是最后会换行</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Java</category>
      </categories>
  </entry>
  <entry>
    <title>Java/Java打印九九乘法表</title>
    <url>/2020/02/10/Java/Java%E6%89%93%E5%8D%B0%E4%B9%9D%E4%B9%9D%E4%B9%98%E6%B3%95%E8%A1%A8/</url>
    <content><![CDATA[<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> nianchu;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span>  <span class="keyword">void</span> <span class="title">main</span> <span class="params">(String[]args)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">int</span> i = <span class="number">0</span>,j = <span class="number">0</span>;</span><br><span class="line">		<span class="keyword">for</span>(i= <span class="number">1</span>;i  &lt;= <span class="number">9</span>;i++) &#123;</span><br><span class="line">			<span class="keyword">for</span>(j=<span class="number">1</span>;j&lt;=i;j++) &#123;</span><br><span class="line">				System.out.printf(<span class="string">"%d*%d=%d"</span>,j,i,j*i);</span><br><span class="line">				System.out.printf(<span class="string">"  "</span>);</span><br><span class="line">				<span class="keyword">if</span>(j==i) &#123;</span><br><span class="line">					System.out.printf(<span class="string">"%n"</span>);</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 输出结果：</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment">1*1=1  </span></span><br><span class="line"><span class="comment">1*2=2  2*2=4  </span></span><br><span class="line"><span class="comment">1*3=3  2*3=6  3*3=9  </span></span><br><span class="line"><span class="comment">1*4=4  2*4=8  3*4=12  4*4=16  </span></span><br><span class="line"><span class="comment">1*5=5  2*5=10  3*5=15  4*5=20  5*5=25  </span></span><br><span class="line"><span class="comment">1*6=6  2*6=12  3*6=18  4*6=24  5*6=30  6*6=36  </span></span><br><span class="line"><span class="comment">1*7=7  2*7=14  3*7=21  4*7=28  5*7=35  6*7=42  7*7=49  </span></span><br><span class="line"><span class="comment">1*8=8  2*8=16  3*8=24  4*8=32  5*8=40  6*8=48  7*8=56  8*8=64  </span></span><br><span class="line"><span class="comment">1*9=9  2*9=18  3*9=27  4*9=36  5*9=45  6*9=54  7*9=63  8*9=72  9*9=81  </span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Java</category>
      </categories>
  </entry>
  <entry>
    <title>15.全排列</title>
    <url>/2020/01/19/Lintcode%E5%88%B7%E9%A2%98/15.%E5%85%A8%E6%8E%92%E5%88%97/</url>
    <content><![CDATA[<h3 id="描述"><a href="#描述" class="headerlink" title="描述"></a><strong>描述</strong></h3><p>给定一个数字列表，返回其所有可能的排列。</p>
<h3 id="样例"><a href="#样例" class="headerlink" title="样例"></a><strong>样例</strong></h3><p><strong>样例 1：</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">输入：[1]</span><br><span class="line">输出：</span><br><span class="line">[</span><br><span class="line">  [1]</span><br><span class="line">]</span><br></pre></td></tr></table></figure>

<p><strong>样例 2：</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">输入：[1,2,3]</span><br><span class="line">输出：</span><br><span class="line">[</span><br><span class="line">  [1,2,3],</span><br><span class="line">  [1,3,2],</span><br><span class="line">  [2,1,3],</span><br><span class="line">  [2,3,1],</span><br><span class="line">  [3,1,2],</span><br><span class="line">  [3,2,1]</span><br><span class="line">]</span><br></pre></td></tr></table></figure>



<h4 id="实现"><a href="#实现" class="headerlink" title="实现"></a><em>实现</em></h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> itertools</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    @param: nums: A list of integers.</span></span><br><span class="line"><span class="string">    @return: A list of permutations.</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">permute</span><span class="params">(self, nums)</span>:</span></span><br><span class="line">        pailie = list(itertools.permutations(nums))  <span class="comment"># 要list一下，不然它只是一个对象</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> pailie</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">so = Solution()</span><br><span class="line">print(so.permute([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]))</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Lintcode刷题</category>
      </categories>
  </entry>
  <entry>
    <title>22.列表扁平化</title>
    <url>/2020/01/19/Lintcode%E5%88%B7%E9%A2%98/22.%E5%88%97%E8%A1%A8%E6%89%81%E5%B9%B3%E5%8C%96/</url>
    <content><![CDATA[<h3 id="22-列表扁平化"><a href="#22-列表扁平化" class="headerlink" title="22. 列表扁平化"></a>22. 列表扁平化</h3><p>给定一个列表，该列表中的每个元素要么是个列表，要么是整数。将其变成一个只包含整数的简单列表。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span><span class="params">(object)</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># @param nestedList a list, each element in the list</span></span><br><span class="line">    <span class="comment"># can be a list or integer, for example [1,2,[1,2]]</span></span><br><span class="line">    <span class="comment"># @return &#123;int[]&#125; a list of integer</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">flatten</span><span class="params">(self, nestedList)</span>:</span></span><br><span class="line">        a = []</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(len(nestedList)):<span class="comment">#用于判断给定列表中的元素是否含有列表（注：这一目的主要是为了结束递归的死循环）</span></span><br><span class="line">            <span class="keyword">if</span> type(nestedList[i]) == list:<span class="comment">#如果有就将列表中的列表分别取出来放到新的列表中</span></span><br><span class="line">                <span class="keyword">for</span> j <span class="keyword">in</span> range(len(nestedList)):</span><br><span class="line">                    <span class="keyword">if</span> type(nestedList[j]) != list:</span><br><span class="line">                        a.append(nestedList[j])</span><br><span class="line">                    <span class="keyword">else</span>:</span><br><span class="line">                        <span class="keyword">for</span> k <span class="keyword">in</span> range(len(nestedList[j])):</span><br><span class="line">                            a.append((nestedList[j])[k])</span><br><span class="line">                <span class="keyword">return</span> Solution.flatten(self,a)<span class="comment">#使用递归完成多次“套娃”的情况</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> nestedList<span class="comment">#如果没有就直接返回这个列表</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">nums = [<span class="number">4</span>,[<span class="number">3</span>,[<span class="number">2</span>,[<span class="number">1</span>]]]]</span><br><span class="line">so = Solution()</span><br><span class="line">print(so.flatten(nums))</span><br><span class="line"></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">输出结果：</span></span><br><span class="line"><span class="string">[4, 3, 2, 1]</span></span><br><span class="line"><span class="string">"""</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Lintcode刷题</category>
      </categories>
  </entry>
  <entry>
    <title>14.二分查找</title>
    <url>/2020/01/17/Lintcode%E5%88%B7%E9%A2%98/14.%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE/</url>
    <content><![CDATA[<h3 id="描述"><a href="#描述" class="headerlink" title="描述"></a><strong>描述</strong></h3><p>给定一个排序的整数数组（升序）和一个要查找的整数<code>target</code>，用<code>O(logn)</code>的时间查找到target第一次出现的下标（从0开始），如果target不存在于数组中，返回<code>-1</code>。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    @param nums: The integer array.</span></span><br><span class="line"><span class="string">    @param target: Target to find.</span></span><br><span class="line"><span class="string">    @return: The first position of target. Position starts from 0.</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">binarySearch</span><span class="params">(self, nums, target)</span>:</span></span><br><span class="line">            low = <span class="number">0</span></span><br><span class="line">            high = len(nums) - <span class="number">1</span></span><br><span class="line">            <span class="keyword">while</span> low &lt;= high:</span><br><span class="line">                mid = low + (high - low) // <span class="number">2</span></span><br><span class="line">                <span class="keyword">if</span>  nums[mid] == target:</span><br><span class="line">                    <span class="keyword">while</span>(mid &gt;= <span class="number">0</span>):<span class="comment">#新增加的while和if用于解决有重复数字的情况，并保证每次都输出第一次出现的target的下标</span></span><br><span class="line">                        <span class="keyword">if</span> nums[mid] != target:</span><br><span class="line">                            <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">                        mid = mid - <span class="number">1</span></span><br><span class="line">                    <span class="keyword">if</span> mid &lt;= <span class="number">-1</span>:</span><br><span class="line">                        <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">                    <span class="keyword">return</span> mid + <span class="number">1</span><span class="comment">#多减了一次，所以输出时+1</span></span><br><span class="line">                <span class="keyword">elif</span>  target &gt; nums[mid]:</span><br><span class="line">                    low = mid + <span class="number">1</span></span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    high = mid - <span class="number">1</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> <span class="number">-1</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">nums = [<span class="number">4</span>,<span class="number">5</span>,<span class="number">9</span>,<span class="number">12</span>,<span class="number">13</span>,<span class="number">14</span>,<span class="number">15</span>,<span class="number">15</span>,<span class="number">18</span>]</span><br><span class="line">so = Solution()</span><br><span class="line">print(so.binarySearch(nums,<span class="number">9</span>))</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Lintcode刷题</category>
      </categories>
  </entry>
  <entry>
    <title>Python/Python itertools模块</title>
    <url>/2020/01/14/Python/Python%20itertools%E6%A8%A1%E5%9D%97/</url>
    <content><![CDATA[<h1 id=""><a href="#" class="headerlink" title=""></a></h1><h1 id="说明："><a href="#说明：" class="headerlink" title="说明："></a>说明：</h1><p>Python内置的itertools模块中包含了一系列用来产生不同款类型迭代器的函数和类，这些函数的返回值都是一个迭代器。</p>
<h1 id="迭代器函数类型"><a href="#迭代器函数类型" class="headerlink" title="迭代器函数类型"></a>迭代器函数类型</h1><p><em>无限迭代器</em>：生成一个无限序列，比如自然序列1，2，3，4…;</p>
<p><em>有限迭代器</em>：接受一个或多个序列作为参数，进行组合、分组和过滤</p>
<p><em>组合生成器</em>：序列的排列、组合，求序列的笛卡尔积等</p>
<h2 id="无限迭代器"><a href="#无限迭代器" class="headerlink" title="无限迭代器"></a>无限迭代器</h2><h2 id="组合生成器"><a href="#组合生成器" class="headerlink" title="组合生成器"></a>组合生成器</h2><h3 id="product：-product用于求多个可迭代对象的组合，它跟嵌套的for循环等价。"><a href="#product：-product用于求多个可迭代对象的组合，它跟嵌套的for循环等价。" class="headerlink" title="product： product用于求多个可迭代对象的组合，它跟嵌套的for循环等价。"></a>product： product用于求多个可迭代对象的组合，它跟嵌套的for循环等价。</h3><p><strong>示例</strong></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">j = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> itertools.product(<span class="string">"12345"</span>,<span class="string">"ABCDE"</span>):</span><br><span class="line">    print(i,end=<span class="string">''</span>)</span><br><span class="line">    j = j+<span class="number">1</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">print(<span class="string">""</span>)</span><br><span class="line">print(<span class="string">"一共有&#123;&#125;种组合"</span>.format(j))</span><br><span class="line"></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">输出结果为:</span></span><br><span class="line"><span class="string">('1', 'A')('1', 'B')('1', 'C')('1', 'D')('1', 'E')('2', 'A')('2', 'B')('2', 'C')('2', 'D')('2', 'E')('3', 'A')('3', 'B')('3', 'C')('3', 'D')('3', 'E')('4', 'A')('4', 'B')('4', 'C')('4', 'D')('4', 'E')('5', 'A')('5', 'B')('5', 'C')('5', 'D')('5', 'E')</span></span><br><span class="line"><span class="string">一共有25种组合</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">"""</span></span><br></pre></td></tr></table></figure>



<h3 id="permutations-用于生成一个全排列"><a href="#permutations-用于生成一个全排列" class="headerlink" title="permutations: 用于生成一个全排列"></a>permutations: 用于生成一个全排列</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">nums = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>]</span><br><span class="line">print(list(itertools.permutations(nums)))</span><br><span class="line"></span><br><span class="line"><span class="string">"""输出结果：</span></span><br><span class="line"><span class="string">[(1, 2, 3, 4), (1, 2, 4, 3), (1, 3, 2, 4), (1, 3, 4, 2), (1, 4, 2, 3), (1, 4, 3, 2), (2, 1, 3, 4), (2, 1, 4, 3), (2, 3, 1, 4), (2, 3, 4, 1), (2, 4, 1, 3), (2, 4, 3, 1), (3, 1, 2, 4), (3, 1, 4, 2), (3, 2, 1, 4), (3, 2, 4, 1), (3, 4, 1, 2), (3, 4, 2, 1), (4, 1, 2, 3), (4, 1, 3, 2), (4, 2, 1, 3), (4, 2, 3, 1), (4, 3, 1, 2), (4, 3, 2, 1)]</span></span><br><span class="line"><span class="string">"""</span></span><br></pre></td></tr></table></figure>



<h3 id="combinations-用于求序列的组合"><a href="#combinations-用于求序列的组合" class="headerlink" title="combinations:用于求序列的组合"></a>combinations:用于求序列的组合</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">nums = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>]</span><br><span class="line">print(list(itertools.combinations(nums,<span class="number">2</span>)))</span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">输出结果：</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[(1, 2), (1, 3), (1, 4), (2, 3), (2, 4), (3, 4)]</span></span><br><span class="line"><span class="string">"""</span></span><br></pre></td></tr></table></figure>

<h4 id="⚠️注意区分product、permutations和combinations的区别"><a href="#⚠️注意区分product、permutations和combinations的区别" class="headerlink" title="⚠️注意区分product、permutations和combinations的区别"></a>⚠️注意区分product、permutations和combinations的区别</h4>]]></content>
      <categories>
        <category>Python</category>
      </categories>
  </entry>
  <entry>
    <title>Python/Python小技巧</title>
    <url>/2020/01/14/Python/Python%E5%B0%8F%E6%8A%80%E5%B7%A7/</url>
    <content><![CDATA[<h1 id="技巧"><a href="#技巧" class="headerlink" title="技巧"></a>技巧</h1><h2 id="sorted-方法——可用于给字符串排序，通常是按照字母表的顺序"><a href="#sorted-方法——可用于给字符串排序，通常是按照字母表的顺序" class="headerlink" title="sorted()方法——可用于给字符串排序，通常是按照字母表的顺序"></a>sorted()方法——可用于给字符串排序，通常是按照字母表的顺序</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">a = <span class="string">"fadsfga"</span></span><br><span class="line">print(sorted(a))</span><br><span class="line"></span><br><span class="line"><span class="string">"""输出结果：</span></span><br><span class="line"><span class="string">['a', 'a', 'd', 'f', 'f', 'g', 's']</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">"""</span></span><br></pre></td></tr></table></figure>

<h2 id="count-方法"><a href="#count-方法" class="headerlink" title="count()方法"></a>count()方法</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">a = <span class="string">'fnsadfgdsgsadfdsa'</span></span><br><span class="line">b = a.count(<span class="string">'f'</span>)</span><br><span class="line">print(b)</span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">输出结果：</span></span><br><span class="line"><span class="string">3</span></span><br><span class="line"><span class="string">"""</span></span><br></pre></td></tr></table></figure>



<h2 id="ord-函数"><a href="#ord-函数" class="headerlink" title="ord()函数"></a>ord()函数</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">## ord()函数# ord() 函数以一个字符作为参数，返回参数对应的 ASCII 数值，便于和后面捕捉的键位关联</span></span><br><span class="line"></span><br><span class="line">print(ord(<span class="string">'a'</span>))</span><br><span class="line">print(ord(<span class="string">'A'</span>))</span><br><span class="line"></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">输出结果：</span></span><br><span class="line"><span class="string">97</span></span><br><span class="line"><span class="string">65</span></span><br><span class="line"><span class="string">"""</span></span><br></pre></td></tr></table></figure>



<h2 id="二元、三元表达式"><a href="#二元、三元表达式" class="headerlink" title="二元、三元表达式"></a>二元、三元表达式</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">## 二元表达式</span></span><br><span class="line"></span><br><span class="line">init = <span class="number">1</span></span><br><span class="line"></span><br><span class="line">number = <span class="number">100</span> <span class="keyword">if</span> init <span class="keyword">else</span> <span class="number">0</span></span><br><span class="line"></span><br><span class="line">print(number)</span><br><span class="line"></span><br><span class="line"><span class="comment">##三元表达</span></span><br><span class="line">wide= <span class="number">-1</span></span><br><span class="line"></span><br><span class="line">new_w = <span class="number">299</span> <span class="keyword">if</span>  wide&gt;<span class="number">0</span> <span class="keyword">else</span> <span class="string">'sdf'</span> <span class="keyword">if</span> wide==<span class="number">0</span> <span class="keyword">else</span> <span class="number">28</span></span><br><span class="line">print(new_w)</span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">输出结果</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">100</span></span><br><span class="line"><span class="string">28</span></span><br><span class="line"><span class="string">"""</span></span><br></pre></td></tr></table></figure>



<h2 id="randrange——获取指定范围内的随机数"><a href="#randrange——获取指定范围内的随机数" class="headerlink" title="randrange——获取指定范围内的随机数"></a>randrange——获取指定范围内的随机数</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">## randrange---给定一个范围，获取范围之内的随机数</span></span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line">print(random.randrange(<span class="number">100</span>))</span><br></pre></td></tr></table></figure>



<h2 id="enumerate-函数"><a href="#enumerate-函数" class="headerlink" title="enumerate()函数"></a>enumerate()函数</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="string">'''enumerate() 函数用于将一个可遍历的数据对象(如列表、元组或字符串)组合为一个索引序列，同时列出数据和数据下标，</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line">names = <span class="string">'chenqiaochu'</span></span><br><span class="line"><span class="keyword">for</span> key, value <span class="keyword">in</span> enumerate(names):</span><br><span class="line">  print(key,value)</span><br><span class="line">  </span><br><span class="line"> <span class="string">'''output:</span></span><br><span class="line"><span class="string"> '''</span></span><br></pre></td></tr></table></figure>



<h2 id="小知识"><a href="#小知识" class="headerlink" title="小知识"></a>小知识</h2><p><strong><em>Python不能直接将包含小数点的字符串’1127437398.85751’ 转换为整数</em></strong></p>
<h2 id="关于字典键值对的输入"><a href="#关于字典键值对的输入" class="headerlink" title="关于字典键值对的输入"></a>关于字典键值对的输入</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">a = &#123;<span class="string">'name'</span> : <span class="string">'重庆'</span>,<span class="string">'mather'</span> : <span class="string">'China'</span> &#125;</span><br><span class="line"><span class="keyword">for</span> key <span class="keyword">in</span> a.keys():</span><br><span class="line">    print(key, a[key])</span><br><span class="line"><span class="string">'''输出结果：</span></span><br><span class="line"><span class="string">name 重庆</span></span><br><span class="line"><span class="string">mather China</span></span><br><span class="line"><span class="string">'''</span></span><br></pre></td></tr></table></figure>

<h2 id="关于字典"><a href="#关于字典" class="headerlink" title="关于字典"></a>关于字典</h2><h2 id="键必须不可变，所以可以用数字，字符串或元组充当，所以用列表就不行。"><a href="#键必须不可变，所以可以用数字，字符串或元组充当，所以用列表就不行。" class="headerlink" title="键必须不可变，所以可以用数字，字符串或元组充当，所以用列表就不行。"></a>键必须不可变，所以可以用数字，字符串或元组充当，所以用列表就不行。</h2><h2 id="字典内置函数总结："><a href="#字典内置函数总结：" class="headerlink" title="字典内置函数总结："></a>字典内置函数总结：</h2><p>1.cmp(dict1,dict2):比较两个元素</p>
<p>(比较方法见：)</p>
<blockquote>
<p> <a href="https://blog.csdn.net/b_11111/article/details/52830590" target="_blank" rel="noopener">https://blog.csdn.net/b_11111/article/details/52830590</a></p>
</blockquote>
<p>2.len()计算字典元素个数，即键的总数</p>
<p>3.str()输出字典可打印的字符串表示</p>
<p>4.type返回变量的类型，如果变量是字典就返回字典类型</p>
<h2 id="字典内置方法总结："><a href="#字典内置方法总结：" class="headerlink" title="字典内置方法总结："></a>字典内置方法总结：</h2><p>1.clear删除字典内的所有元素</p>
<p>2.copy返回一个字典的浅复制</p>
<p>3.fromkeys(sep,[,val]):创建一个新字典，以序列seq中元素做字典的键，val为字典所有键对应的初始值</p>
<p>4.get(key)返回指定键的值，如果值不在字典中就返回None</p>
<p>5.has_key(key)如果键在字典dict中返回true,否则返回flase</p>
<p>6.items：以列表返回可遍历的(键值对)元组数组</p>
<p>7.keys：以列表返回一个字典所有的键</p>
<p>8.values:以列表返回字典中的所有值</p>
<p>9.update(dice2):把字典dict2中键值对更新到dict中</p>
<p>10.pop：删除给定键key所对应的值，也一同删除了键，返回值为被删除的值</p>
<p>11.popitem:返回并删除字典中最后一对键和值</p>
<h2 id="用字典中的元素创建一个新的字典"><a href="#用字典中的元素创建一个新的字典" class="headerlink" title="用字典中的元素创建一个新的字典"></a>用字典中的元素创建一个新的字典</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">dicts = &#123;&#125;</span><br><span class="line">dicts[<span class="string">'first'</span>] = <span class="string">"china"</span></span><br><span class="line">dicts[<span class="string">'lover'</span>] = <span class="string">'chongqing'</span></span><br><span class="line"># 用列表中的元素重新创建一个新列表</span><br><span class="line">dicts1 = &#123;&#125;</span><br><span class="line">print(dicts[<span class="string">'first'</span>])</span><br><span class="line">dicts1 = &#123;<span class="string">'a'</span>:dicts[<span class="string">'first'</span>],<span class="string">'b'</span>:dicts[<span class="string">'lover'</span>]&#125;</span><br><span class="line">print(dicts1)</span><br><span class="line"><span class="string">''</span><span class="string">'</span></span><br><span class="line"><span class="string">输出结果：</span></span><br><span class="line"><span class="string">&#123;'</span>a<span class="string">': '</span>chenqiaochu<span class="string">', '</span>b<span class="string">': '</span>leibowen<span class="string">'&#125;</span></span><br><span class="line"><span class="string">'</span><span class="string">''</span></span><br></pre></td></tr></table></figure>

<h2 id="变量可以指向函数"><a href="#变量可以指向函数" class="headerlink" title="变量可以指向函数"></a>变量可以指向函数</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">f = abs</span><br><span class="line">print(f(<span class="number">-100</span>))</span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">输出结果:</span></span><br><span class="line"><span class="string">100</span></span><br><span class="line"><span class="string">"""</span></span><br></pre></td></tr></table></figure>

<h2 id="函数名其实就是指向函数的变"><a href="#函数名其实就是指向函数的变" class="headerlink" title="函数名其实就是指向函数的变"></a>函数名其实就是指向函数的变</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">abs =<span class="number">10</span></span><br><span class="line">print(abs)</span><br><span class="line">print(abs(<span class="number">-200</span>))</span><br><span class="line"></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">输出结果：</span></span><br><span class="line"><span class="string">10</span></span><br><span class="line"><span class="string">Traceback (most recent call last):</span></span><br><span class="line"><span class="string">  File "/Users/bowenkei/Desktop/Python/项目2-数据可视化/test.py", line 3, in &lt;module&gt;</span></span><br><span class="line"><span class="string">    print(abs(-200))</span></span><br><span class="line"><span class="string">TypeError: 'int' object is not callable</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="comment"># 有结果可以看出，此时abs已经失去了原有函数的意思了</span></span><br></pre></td></tr></table></figure>

<h2 id="传入函数"><a href="#传入函数" class="headerlink" title="传入函数"></a>传入函数</h2><blockquote>
<p>既然变量可以指向函数，函数的参数能接收变量，那么一个函数就可以接收另一个函数作为参数，这种函数就称之为高阶函数。</p>
</blockquote>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 最简单的高阶函数</span></span><br><span class="line"><span class="comment"># 一个最简单的高阶函数</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">add</span><span class="params">(x,y,f)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> (f(x)+f(y))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">print(add(<span class="number">500</span>,<span class="number">20</span>,abs))</span><br><span class="line"></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">输出结果：</span></span><br><span class="line"><span class="string">520</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">"""</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>编写高阶函数，就是让函数的参数能够接收别的函数。</p>
<p>把函数作为参数传入，这样的函数称为高阶函数，函数式编程就是指这种高度抽象的编程范式。</p>
</blockquote>
]]></content>
      <categories>
        <category>Python</category>
      </categories>
  </entry>
  <entry>
    <title>Lintcode刷题/55.比较字符串</title>
    <url>/2020/01/14/Lintcode%E5%88%B7%E9%A2%98/55.%E6%AF%94%E8%BE%83%E5%AD%97%E7%AC%A6%E4%B8%B2/</url>
    <content><![CDATA[<h1 id="比较字符串"><a href="#比较字符串" class="headerlink" title="比较字符串"></a>比较字符串</h1><h3 id="描述"><a href="#描述" class="headerlink" title="描述"></a><strong>描述</strong></h3><p>比较两个字符串A和B，确定A中是否包含B中所有的字符。字符串A和B中的字符都是 <strong>大写字母</strong></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    @param A: A string</span></span><br><span class="line"><span class="string">    @param B: A string</span></span><br><span class="line"><span class="string">    @return: if string A contains all of the characters in B return true else return false</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">compareStrings</span><span class="params">(self, A, B)</span>:</span></span><br><span class="line">        <span class="comment"># write your code here</span></span><br><span class="line">        <span class="comment">#此题采用了反向思维的方法，通过举出返回Flase的几种情况后，其余都是True</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> len(A) &lt; len(B):</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">        <span class="keyword">if</span> len(A) == len(B):</span><br><span class="line">            <span class="keyword">return</span>(sorted(A) == sorted(B))</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> B:</span><br><span class="line">            <span class="keyword">if</span> A.count(i) &lt; B.count(i):</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Lintcode刷题</category>
      </categories>
  </entry>
  <entry>
    <title>13.字符串查找</title>
    <url>/2020/01/14/Lintcode%E5%88%B7%E9%A2%98/13.%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%9F%A5%E6%89%BE/</url>
    <content><![CDATA[<h1 id="13-字符串查找"><a href="#13-字符串查找" class="headerlink" title="13.字符串查找"></a>13.字符串查找</h1><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    @param source:</span></span><br><span class="line"><span class="string">    @param target:</span></span><br><span class="line"><span class="string">    @return: return the index</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">strStr</span><span class="params">(self, source, target)</span>:</span></span><br><span class="line">        geshu=<span class="number">0</span></span><br><span class="line">        a = len(source)</span><br><span class="line">        b = len(target)</span><br><span class="line">        <span class="keyword">if</span> source ==<span class="string">""</span> <span class="keyword">and</span> target ==<span class="string">""</span>:<span class="comment">#排除特殊情况</span></span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">        <span class="keyword">elif</span> source !=<span class="string">""</span> <span class="keyword">and</span> target ==<span class="string">""</span>:<span class="comment">#继续排除特殊情况</span></span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">        <span class="keyword">elif</span> target <span class="keyword">not</span> <span class="keyword">in</span> source:<span class="comment">#被查找字符串不在已知字符串的情况</span></span><br><span class="line">            <span class="keyword">return</span> <span class="number">-1</span></span><br><span class="line">        <span class="keyword">else</span>:<span class="comment">#需要返回第一个出现位置的情况</span></span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> range(a):</span><br><span class="line">                <span class="keyword">if</span> target[<span class="number">0</span>] == source[i]:</span><br><span class="line">                    <span class="keyword">for</span> j <span class="keyword">in</span> range(b):</span><br><span class="line">                        <span class="keyword">if</span> (i+j) &lt; a:<span class="comment">#避免字符串索引溢出</span></span><br><span class="line">                            <span class="keyword">if</span> source[i+j] == target[j]:</span><br><span class="line">                                geshu = geshu + <span class="number">1</span></span><br><span class="line"></span><br><span class="line">                        <span class="keyword">if</span> geshu == b:</span><br><span class="line">                             <span class="keyword">return</span> i</span><br><span class="line"></span><br><span class="line">so = Solution()</span><br><span class="line">print(so.strStr(<span class="string">"tartarget"</span>,<span class="string">"target"</span>))</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Lintcode刷题</category>
      </categories>
  </entry>
  <entry>
    <title>往年期末试卷程序题</title>
    <url>/2020/01/04/C%E8%AF%AD%E8%A8%80%E4%BD%9C%E4%B8%9A/%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0%E9%A2%98/</url>
    <content><![CDATA[<h1 id="1-主函数已知，编写一个函数实现将整型数组中的偶数删除，然后输出改变后的数组。"><a href="#1-主函数已知，编写一个函数实现将整型数组中的偶数删除，然后输出改变后的数组。" class="headerlink" title="1.主函数已知，编写一个函数实现将整型数组中的偶数删除，然后输出改变后的数组。"></a>1.主函数已知，编写一个函数实现将整型数组中的偶数删除，然后输出改变后的数组。</h1><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXSIZE 1024</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span>  <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a[MAXSIZE],n,i;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"请输入元素个数：\n"</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span> ( i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    n=hs(a,n);</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d "</span>,a[i] );</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">hs</span><span class="params">(<span class="keyword">int</span> a[],<span class="keyword">int</span> n)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">hs</span><span class="params">(<span class="keyword">int</span> a[],<span class="keyword">int</span> n)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> b[MAXSIZE];<span class="keyword">int</span> i=<span class="number">0</span>,j=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> ( i=<span class="number">0</span>,j=<span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (a[i]%<span class="number">2</span>!=<span class="number">0</span>) &#123;</span><br><span class="line">            b[j]=a[i];</span><br><span class="line">            j++;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; j; ++i)</span><br><span class="line">    &#123;</span><br><span class="line">        a[i]=b[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> j;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>C语言作业</category>
      </categories>
  </entry>
  <entry>
    <title>C/1.宏编程1</title>
    <url>/2019/12/29/C/1.%E5%AE%8F%E7%BC%96%E7%A8%8B1/</url>
    <content><![CDATA[<p>#1.宏编程1</p>
<h2 id="定义一个带参数的宏MAXD，计算从键盘输入两个数值中的最大值"><a href="#定义一个带参数的宏MAXD，计算从键盘输入两个数值中的最大值" class="headerlink" title="定义一个带参数的宏MAXD，计算从键盘输入两个数值中的最大值"></a>定义一个带参数的宏MAXD，计算从键盘输入两个数值中的最大值</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdio.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXD(x,y) x&gt;y?x:y</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> x,y;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;x,&amp;y);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,MAXD(x, y));</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="2-宏编程2"><a href="#2-宏编程2" class="headerlink" title="2.宏编程2"></a>2.宏编程2</h1><h2 id="定义一个带参数的宏，用来判断整数n是否能被5和7同时整除"><a href="#定义一个带参数的宏，用来判断整数n是否能被5和7同时整除" class="headerlink" title="定义一个带参数的宏，用来判断整数n是否能被5和7同时整除"></a>定义一个带参数的宏，用来判断整数n是否能被5和7同时整除</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdio.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Zhengchu(n) n%5==0&amp;&amp;n%7==0?1:0</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,result;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    result=Zhengchu(n);</span><br><span class="line">    <span class="keyword">if</span> (n==<span class="number">0</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"不能整除\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"能被整除\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>C语言</category>
      </categories>
  </entry>
  <entry>
    <title>C/C-结构体</title>
    <url>/2019/12/19/C/C-%E7%BB%93%E6%9E%84%E4%BD%93/</url>
    <content><![CDATA[<h1 id="结构体"><a href="#结构体" class="headerlink" title="结构体"></a>结构体</h1><h2 id="访问结构体成员"><a href="#访问结构体成员" class="headerlink" title="访问结构体成员"></a>访问结构体成员</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdio.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"string.h"</span></span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Students</span>&#123;</span></span><br><span class="line">    <span class="keyword">char</span> Name[<span class="number">20</span>];</span><br><span class="line">    <span class="keyword">double</span> ID;</span><br><span class="line">&#125; sd1=&#123;<span class="string">"Python"</span>,<span class="number">1</span>&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%sID:%.0lf"</span>,sd1.Name,sd1.ID);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*输出结果为</span></span><br><span class="line"><span class="comment"> PythonID:1</span></span><br><span class="line"><span class="comment"> */</span></span><br></pre></td></tr></table></figure>

<h2 id="将结构体传给函数"><a href="#将结构体传给函数" class="headerlink" title="将结构体传给函数"></a>将结构体传给函数</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">	<span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdio.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"string.h"</span></span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Students</span>&#123;</span></span><br><span class="line">    <span class="keyword">char</span> Name[<span class="number">20</span>];</span><br><span class="line">    <span class="keyword">double</span> ID;</span><br><span class="line">&#125; ;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">happy</span><span class="params">(struct Students sd)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">Students</span> <span class="title">sd1</span>;</span><span class="comment">//声明sd1，类型为Studens</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">Students</span> <span class="title">sd2</span>;</span></span><br><span class="line">    <span class="comment">/*详述sd1*/</span></span><br><span class="line">    <span class="built_in">strcpy</span>(sd1.Name, <span class="string">"Pyhton"</span>);</span><br><span class="line">    sd1.ID=<span class="number">1</span>;</span><br><span class="line">    <span class="comment">/*详述sd2*/</span></span><br><span class="line">    <span class="built_in">strcpy</span>(sd2.Name, <span class="string">"C"</span>);</span><br><span class="line">    sd2.ID=<span class="number">2</span>;</span><br><span class="line">    <span class="comment">/*传递*/</span></span><br><span class="line">    happy(sd1);</span><br><span class="line">    happy(sd2);</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">happy</span><span class="params">(struct Students sd)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"(%s)ID:%0.lf"</span>,sd.Name,sd.ID);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*输出结果：</span></span><br><span class="line"><span class="comment"> (Pyhton)ID:1</span></span><br><span class="line"><span class="comment"> (C)ID:2</span></span><br><span class="line"><span class="comment"> */</span></span><br></pre></td></tr></table></figure>

<h2 id="指向函数的指针"><a href="#指向函数的指针" class="headerlink" title="指向函数的指针"></a>指向函数的指针</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdio.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"string.h"</span></span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Students</span>&#123;</span></span><br><span class="line">    <span class="keyword">char</span> Name[<span class="number">20</span>];</span><br><span class="line">    <span class="keyword">double</span> ID;</span><br><span class="line">&#125; ;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">happy</span><span class="params">(struct Students *sd)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">Students</span> <span class="title">sd1</span>;</span><span class="comment">//声明sd1，类型为Studens</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">Students</span> <span class="title">sd2</span>;</span></span><br><span class="line">    <span class="comment">/*详述sd1*/</span></span><br><span class="line">    <span class="built_in">strcpy</span>(sd1.Name, <span class="string">"Pyhton"</span>);</span><br><span class="line">    sd1.ID=<span class="number">1</span>;</span><br><span class="line">    <span class="comment">/*详述sd2*/</span></span><br><span class="line">    <span class="built_in">strcpy</span>(sd2.Name, <span class="string">"C"</span>);</span><br><span class="line">    sd2.ID=<span class="number">2</span>;</span><br><span class="line">    <span class="comment">/*传递*/</span></span><br><span class="line">    happy(&amp;sd1);</span><br><span class="line">    happy(&amp;sd2);</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">happy</span><span class="params">(struct Students *sd)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"(%s)ID:%0.lf"</span>,sd-&gt;Name,sd-&gt;ID);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*输出结果：</span></span><br><span class="line"><span class="comment"> (Pyhton)ID:1</span></span><br><span class="line"><span class="comment"> (C)ID:2</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">//注意和传递结构体给函数的区别</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>C语言</category>
      </categories>
  </entry>
  <entry>
    <title>指针练习题</title>
    <url>/2019/12/16/C%E8%AF%AD%E8%A8%80%E4%BD%9C%E4%B8%9A/%E6%8C%87%E9%92%88%E7%BB%83%E4%B9%A0%E9%A2%98/</url>
    <content><![CDATA[<h1 id="指针练习题-实验10"><a href="#指针练习题-实验10" class="headerlink" title="指针练习题(实验10)"></a>指针练习题(实验10)</h1><h2 id="基础"><a href="#基础" class="headerlink" title="基础"></a>基础</h2><h3 id="5-、编写一个函数，判断任意输入的字符串中，有多少个字母。建议函数原型-int-CountNumofLetter-char-string"><a href="#5-、编写一个函数，判断任意输入的字符串中，有多少个字母。建议函数原型-int-CountNumofLetter-char-string" class="headerlink" title="5 、编写一个函数，判断任意输入的字符串中，有多少个字母。建议函数原型: int CountNumofLetter(char *string) ;"></a>5 、编写一个函数，判断任意输入的字符串中，有多少个字母。建议函数原型: int CountNumofLetter(char *string) ;</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdio.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"string.h"</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">CountNumofLetter</span><span class="params">(<span class="keyword">char</span> *<span class="built_in">string</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> zfc1[]=<span class="string">"Everyday*)^&amp;(^i?a&#123;&#125;new one!"</span>;</span><br><span class="line">    <span class="keyword">char</span> zfc2[]=<span class="string">"fsiayud^&amp;(%^*$%*$"</span>;</span><br><span class="line">    <span class="keyword">char</span> *p1,*p2;</span><br><span class="line">    p1=zfc1;p2=zfc2;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\"%s\"中字母的个数为：%d\n"</span>,zfc1,CountNumofLetter(p1));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\"%s\"中字母的个数为：%d\n"</span>,zfc2,CountNumofLetter(p2));</span><br><span class="line">   </span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">CountNumofLetter</span><span class="params">(<span class="keyword">char</span> *<span class="built_in">string</span>)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> geshu=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">long</span> i=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (i=<span class="number">0</span>; i&lt;<span class="built_in">strlen</span>(<span class="built_in">string</span>)<span class="number">-1</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> ((*(<span class="built_in">string</span>+i)&gt;=<span class="string">'A'</span>&amp;&amp;*(<span class="built_in">string</span>+i)&lt;=<span class="string">'Z'</span>)||(*(<span class="built_in">string</span>+i)&gt;=<span class="string">'a'</span>&amp;&amp;*(<span class="built_in">string</span>+i)&lt;=<span class="string">'z'</span>)) &#123;</span><br><span class="line">            geshu++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> geshu;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*输出结果为：</span></span><br><span class="line"><span class="comment"> "Everyday*)^&amp;(^i?a&#123;&#125;new one!"中字母的个数为：16</span></span><br><span class="line"><span class="comment"> "fsiayud^&amp;(%^*$%*$"中字母的个数为：7</span></span><br><span class="line"><span class="comment"> */</span></span><br></pre></td></tr></table></figure>





<h2 id="进阶"><a href="#进阶" class="headerlink" title="进阶"></a>进阶</h2><h3 id="1-、如下函数-strcpy-char-to-，-char-from-将字符串from复制到字符串-to-将函数补充完整并实-现在主程序中的调用。void-strcpy-char-to-，char-from-while"><a href="#1-、如下函数-strcpy-char-to-，-char-from-将字符串from复制到字符串-to-将函数补充完整并实-现在主程序中的调用。void-strcpy-char-to-，char-from-while" class="headerlink" title="1 、如下函数: strcpy(char *to ， char *from) 将字符串from复制到字符串 to. 将函数补充完整并实 现在主程序中的调用。void strcpy(char *to ，char *from) {while (____) ; }"></a>1 、如下函数: strcpy(char *to ， char *from) 将字符串from复制到字符串 to. 将函数补充完整并实 现在主程序中的调用。void strcpy(char *to ，char *from) {while (<strong><strong>____</strong></strong>) ; }</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdio.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"string.h"</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">str_cpy</span><span class="params">(<span class="keyword">char</span> *to,<span class="keyword">char</span> *from)</span></span>&#123;<span class="comment">//因为strcpy会发生冲突，所以中间加了下划线区分</span></span><br><span class="line">    <span class="keyword">while</span> (*from!=<span class="string">'\0'</span>) &#123;<span class="comment">//执行循环知道from字符串末尾</span></span><br><span class="line">        *to=*from;</span><br><span class="line">        to++;from++;    <span class="comment">//to和from指针依次递增l；</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> yuanshi[]=<span class="string">"Today is a good day!"</span>;</span><br><span class="line">    <span class="keyword">char</span> gengxin[]=<span class="string">""</span>;</span><br><span class="line">    <span class="keyword">char</span> *p1,*p2;       <span class="comment">//定义两个字符型指针</span></span><br><span class="line">    p1=yuanshi;p2=gengxin;<span class="comment">//字符型指针分别指向两个字符数组的首地址</span></span><br><span class="line">    str_cpy(gengxin, yuanshi);<span class="comment">//调用str_cpy函数</span></span><br><span class="line">    <span class="keyword">unsigned</span> i=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (i=<span class="number">0</span>; i&lt;=<span class="built_in">strlen</span>(gengxin)<span class="number">-1</span>; i++) &#123;<span class="comment">//执行循环，输出新的字符串</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%c"</span>,*(p2+i));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*输出结果为：</span></span><br><span class="line"><span class="comment">Today is a good day!</span></span><br><span class="line"><span class="comment"> */</span></span><br></pre></td></tr></table></figure>

<h3 id="2-、如下函数-merge-int-a-，-int-n-，-int-b-，-int-m-，-int-c-是将两个从小到大有序数组，-a-和-b-复制合并出一个有序整数序列-c-，其中形参-n-和-m-分别是数组-a-和-b-的元素个数-将函数补充完整并实现在主程序中的调用。"><a href="#2-、如下函数-merge-int-a-，-int-n-，-int-b-，-int-m-，-int-c-是将两个从小到大有序数组，-a-和-b-复制合并出一个有序整数序列-c-，其中形参-n-和-m-分别是数组-a-和-b-的元素个数-将函数补充完整并实现在主程序中的调用。" class="headerlink" title="2 、如下函数: merge(int a[] ， int n ， int b[] ， int m ， int *c) 是将两个从小到大有序数组， a 和 b 复制合并出一个有序整数序列 c ，其中形参 n 和 m 分别是数组 a 和 b 的元素个数 . 将函数补充完整并实现在主程序中的调用。"></a>2 、如下函数: merge(int a[] ， int n ， int b[] ， int m ， int *c) 是将两个从小到大有序数组， a 和 b 复制合并出一个有序整数序列 c ，其中形参 n 和 m 分别是数组 a 和 b 的元素个数 . 将函数补充完整并实现在主程序中的调用。</h3><p><em>原代码:</em></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">merge</span><span class="params">(<span class="keyword">int</span> a[] ，<span class="keyword">int</span> n， <span class="keyword">int</span> b[] ， <span class="keyword">int</span> m ， <span class="keyword">int</span> *c)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> i ， j ;</span><br><span class="line"><span class="keyword">for</span> (i=j=<span class="number">0</span>; i&lt;n&amp;&amp;j&lt;m ; )   *c++=a[i]&lt;b[j]?a[i++]:b[j++];</span><br><span class="line"><span class="keyword">while</span> (____________) *c++=a[i++] ;</span><br><span class="line"><span class="keyword">while</span> (____________) *c++=b[j++] ; &#125;</span><br></pre></td></tr></table></figure>



<p><em>答案为：</em></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdio.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"string.h"</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">merge</span><span class="params">(<span class="keyword">int</span> a[],<span class="keyword">int</span> n,<span class="keyword">int</span> b[],<span class="keyword">int</span> m,<span class="keyword">int</span> *c)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i,j;</span><br><span class="line">    <span class="keyword">for</span> (i=j=<span class="number">0</span>; i&lt;n&amp;&amp;j&lt;m;)&#123;</span><br><span class="line">        *c++=a[i]&lt;b[j]?a[i++]:b[j++];&#125;</span><br><span class="line">        <span class="keyword">while</span> (i&lt;n)&#123;*c++=a[i++];&#125;</span><br><span class="line">        <span class="keyword">while</span> (j&lt;m)&#123;*c++=b[j++];&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;   <span class="keyword">int</span> n=<span class="number">5</span>,m=<span class="number">3</span>;<span class="comment">//测试1</span></span><br><span class="line">    <span class="keyword">int</span> numbers1[]=&#123;<span class="number">21</span>,<span class="number">23</span>,<span class="number">24</span>,<span class="number">25</span>,<span class="number">26</span>&#125;;</span><br><span class="line">    <span class="keyword">int</span> numbers2[]=&#123;<span class="number">12</span>,<span class="number">13</span>,<span class="number">20</span>&#125;;</span><br><span class="line">    <span class="keyword">int</span> numbers3[<span class="number">8</span>];</span><br><span class="line">    merge(numbers1, n, numbers2, m, numbers3);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;(m+n); i++) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d "</span>,numbers3[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    n=<span class="number">5</span>;m=<span class="number">5</span>;<span class="comment">//测试2</span></span><br><span class="line">    <span class="keyword">int</span> numbers4[<span class="number">5</span>]=&#123;<span class="number">1</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">8</span>,<span class="number">10</span>&#125;;</span><br><span class="line">    <span class="keyword">int</span> numbers5[<span class="number">5</span>]=&#123;<span class="number">-12</span>,<span class="number">-10</span>,<span class="number">22</span>,<span class="number">100</span>,<span class="number">10000</span>&#125;;</span><br><span class="line">    <span class="keyword">int</span> numbers6[<span class="number">10</span>],*p=numbers6;</span><br><span class="line">    merge(numbers4, n, numbers5, m, p);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;(m+n); i++) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d "</span>,p[i]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*输出结果：</span></span><br><span class="line"><span class="comment"> 12 13 20 21 23 24 25 26</span></span><br><span class="line"><span class="comment"> -12 -10 1 3 4 8 10 22 100 10000 Program ended with exit code: 0</span></span><br><span class="line"><span class="comment"> */</span></span><br></pre></td></tr></table></figure>



<h3 id="3-、有一字符串，包含n-n-lt-1024-个字符，写一函数，将此字符串中从第m个字符开始的全部字符-复制成为另一个字符串。建议函数原型-void-Mystrcpy-char-src，-char-des，-int-m"><a href="#3-、有一字符串，包含n-n-lt-1024-个字符，写一函数，将此字符串中从第m个字符开始的全部字符-复制成为另一个字符串。建议函数原型-void-Mystrcpy-char-src，-char-des，-int-m" class="headerlink" title="3 、有一字符串，包含n(n&lt;=1024)个字符，写一函数，将此字符串中从第m个字符开始的全部字符 复制成为另一个字符串。建议函数原型:void Mystrcpy(char *src， char *des， int m) ;"></a>3 、有一字符串，包含n(n&lt;=1024)个字符，写一函数，将此字符串中从第m个字符开始的全部字符 复制成为另一个字符串。建议函数原型:void Mystrcpy(char *src， char *des， int m) ;</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//实验10 进阶3/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdio.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"string.h"</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Mystrcpy</span><span class="params">(<span class="keyword">char</span> *src,<span class="keyword">char</span> *des,<span class="keyword">int</span> m)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;   <span class="comment">//测试1</span></span><br><span class="line">    <span class="keyword">char</span> yuanshi[]=<span class="string">"abcdefghijk"</span>;</span><br><span class="line">    <span class="keyword">char</span> gengxin[]=<span class="string">""</span>;</span><br><span class="line">    <span class="keyword">int</span> m=<span class="number">3</span>;</span><br><span class="line">    <span class="keyword">char</span> *p1;</span><br><span class="line">    p1=yuanshi;</span><br><span class="line">    <span class="keyword">char</span> *p2=gengxin;</span><br><span class="line">    Mystrcpy(p1,p2, m);</span><br><span class="line">    <span class="comment">//测试2</span></span><br><span class="line">    <span class="keyword">char</span> yuanshi1[]=<span class="string">"The joy of living never comes to the frivolous,the superficial,the selfish."</span>;</span><br><span class="line">    <span class="keyword">char</span> gengxin2[]=<span class="string">""</span>;</span><br><span class="line">    <span class="keyword">int</span> n=<span class="number">5</span>;</span><br><span class="line">    <span class="keyword">char</span> *p3,*p4;</span><br><span class="line">    p3=yuanshi1;p4=gengxin2;</span><br><span class="line">    Mystrcpy(p3, p4, n);</span><br><span class="line">    </span><br><span class="line">        </span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Mystrcpy</span><span class="params">(<span class="keyword">char</span> *src,<span class="keyword">char</span> *des,<span class="keyword">int</span> m)</span></span></span><br><span class="line"><span class="function"></span>&#123;   <span class="keyword">char</span> *p3;</span><br><span class="line">    p3=&amp;src[m<span class="number">-1</span>];</span><br><span class="line">    <span class="keyword">int</span> i=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (i=<span class="number">0</span>; i&lt;<span class="built_in">strlen</span>(p3)+<span class="number">1</span>; i++) &#123;</span><br><span class="line">        *(des+i)=*(p3+i);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%s\n"</span>,des);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*输出结果为：</span></span><br><span class="line"><span class="comment"> cdefghijk</span></span><br><span class="line"><span class="comment"> joy of living never comes to the frivolous,the superficial,the selfish.</span></span><br><span class="line"><span class="comment"> */</span></span><br></pre></td></tr></table></figure>

<h3 id="6-、定义一个具有n-n-lt-1024-个元素的一维整型数组，编写函数，将其中最小的数与第一个数对换。-建议函数原型-void-MinChange-int-data-int-len"><a href="#6-、定义一个具有n-n-lt-1024-个元素的一维整型数组，编写函数，将其中最小的数与第一个数对换。-建议函数原型-void-MinChange-int-data-int-len" class="headerlink" title="6 、定义一个具有n(n&lt;=1024)个元素的一维整型数组，编写函数，将其中最小的数与第一个数对换。 建议函数原型:void MinChange(int *data ,int len);"></a>6 、定义一个具有n(n&lt;=1024)个元素的一维整型数组，编写函数，将其中最小的数与第一个数对换。 建议函数原型:void MinChange(int *data ,int len);</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//实验10 进阶6/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdio.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"string.h"</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MinChange</span><span class="params">(<span class="keyword">int</span> *data ,<span class="keyword">int</span> len)</span></span>;<span class="comment">//函数声明</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;   <span class="comment">//测试1</span></span><br><span class="line">    <span class="keyword">int</span> num[]=&#123;<span class="number">1</span>,<span class="number">23</span>,<span class="number">32</span>,<span class="number">-29</span>,<span class="number">4</span>,<span class="number">4</span>&#125;;</span><br><span class="line">    <span class="keyword">int</span> len=<span class="keyword">sizeof</span>(num)/<span class="keyword">sizeof</span>(<span class="keyword">int</span>);<span class="comment">//获取整型数组的长度</span></span><br><span class="line">    MinChange(num, len);            <span class="comment">//函数调用</span></span><br><span class="line">    <span class="comment">//测试2</span></span><br><span class="line">    <span class="keyword">int</span> num1[]=&#123;<span class="number">0</span>,<span class="number">5</span>*<span class="number">2</span>,<span class="number">-1</span>*<span class="number">10</span>,<span class="number">234</span>,<span class="number">25</span>*<span class="number">25</span>&#125;;</span><br><span class="line">    len=<span class="keyword">sizeof</span>(num1)/<span class="keyword">sizeof</span>(<span class="keyword">int</span>);</span><br><span class="line">    MinChange(num1, len);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MinChange</span><span class="params">(<span class="keyword">int</span> *data ,<span class="keyword">int</span> len)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i=<span class="number">0</span>,j=<span class="number">0</span>,mix=data[<span class="number">0</span>],exchange;</span><br><span class="line">    <span class="keyword">for</span> (i=<span class="number">0</span>; i&lt;len; i++) &#123;<span class="comment">//执行循环m，找到最小数和它的下标</span></span><br><span class="line">        <span class="keyword">if</span> (mix&gt;data[i]) &#123;</span><br><span class="line">            mix=data[i];</span><br><span class="line">            j=i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    exchange=data[<span class="number">0</span>];   <span class="comment">//交换最小数和第一个数</span></span><br><span class="line">    data[<span class="number">0</span>]=mix;</span><br><span class="line">    data[j]=exchange;</span><br><span class="line">    <span class="keyword">for</span> (i=<span class="number">0</span>; i&lt;len; i++) &#123;<span class="comment">//循环输出数组</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d "</span>,data[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*输出结果是：</span></span><br><span class="line"><span class="comment"> -29 23 32 1 4 4</span></span><br><span class="line"><span class="comment"> -10 10 0 234 625</span></span><br><span class="line"><span class="comment"> */</span></span><br></pre></td></tr></table></figure>



<h3 id="14、编程实现字符串比较函数-int-MyStrcmp-char-p1，char-p2-。其中，p1和p2分别指向两个字符-串，如果这两个字符串相当则函数返回-0-，如果这两个字符串不相等则返回二者第一个不同字符的ASCII-差值。例如-“asd”和“-awe”-第二个字符不同，则返回-’s’-‘w’-115-119-4"><a href="#14、编程实现字符串比较函数-int-MyStrcmp-char-p1，char-p2-。其中，p1和p2分别指向两个字符-串，如果这两个字符串相当则函数返回-0-，如果这两个字符串不相等则返回二者第一个不同字符的ASCII-差值。例如-“asd”和“-awe”-第二个字符不同，则返回-’s’-‘w’-115-119-4" class="headerlink" title="14、编程实现字符串比较函数: int MyStrcmp(char *p1，char *p2)。其中，p1和p2分别指向两个字符 串，如果这两个字符串相当则函数返回 0 ，如果这两个字符串不相等则返回二者第一个不同字符的ASCII 差值。例如:“asd”和“ awe” 第二个字符不同，则返回:’s’-‘w’=115-119 = -4"></a>14、编程实现字符串比较函数: int MyStrcmp(char *p1，char *p2)。其中，p1和p2分别指向两个字符 串，如果这两个字符串相当则函数返回 0 ，如果这两个字符串不相等则返回二者第一个不同字符的ASCII 差值。例如:“asd”和“ awe” 第二个字符不同，则返回:’s’-‘w’=115-119 = -4</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdio.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"string.h"</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">MyStrcmp</span><span class="params">(<span class="keyword">char</span> *p1,<span class="keyword">char</span> *p2)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;   <span class="comment">//测试1</span></span><br><span class="line">    <span class="keyword">char</span> zf1[]=<span class="string">"When love beckons you,follow him,though this way are hard and steep."</span>;</span><br><span class="line">    <span class="keyword">char</span> zf2[]=<span class="string">"When love beckons you,follow him,though this way are hard and steeps."</span>;</span><br><span class="line">    <span class="keyword">char</span> *p1=zf1,*p2=zf2;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"The results is:%d\n"</span>,MyStrcmp(p1, p2));<span class="comment">//调用函数并输出返回值</span></span><br><span class="line">    <span class="comment">//测试2</span></span><br><span class="line">    <span class="keyword">char</span> zf3[]=<span class="string">"abcdefghigkl"</span>;</span><br><span class="line">    <span class="keyword">char</span> zf4[]=<span class="string">"abcdefghigkl"</span>;</span><br><span class="line">    <span class="keyword">char</span> *p3=zf3,*p4=zf4;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"The results is:%d\n"</span>,MyStrcmp(p3, p4));</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">MyStrcmp</span><span class="params">(<span class="keyword">char</span> *p1,<span class="keyword">char</span> *p2)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i=<span class="number">0</span>,jieguo=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">long</span> changdu=<span class="built_in">strlen</span>(p1);<span class="comment">//获取字符数组的长度，这里选择p1和p2都是一样的，因为若两个字符数组相同的话长度肯定是一样的</span></span><br><span class="line">    <span class="keyword">for</span> (i=<span class="number">0</span>; i&lt;changdu; i++) &#123;<span class="comment">//循环判断每一个字符是否相等</span></span><br><span class="line">        <span class="keyword">if</span> (p1[i]==p2[i]) &#123;<span class="comment">//如果相等，就让jieguo的值一直为0，这样是为了方便函数返回</span></span><br><span class="line">            jieguo=<span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            jieguo=p1[i]-p2[i];<span class="comment">//如果不相等，就让jieguo=两个zifu的ASCII码的差值</span></span><br><span class="line">            <span class="keyword">break</span>;<span class="comment">//并且r退出循环</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> jieguo;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*输出结果是：</span></span><br><span class="line"><span class="comment"> The results is:-69</span></span><br><span class="line"><span class="comment"> The results is:0</span></span><br><span class="line"><span class="comment"> */</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>C语言作业</category>
      </categories>
  </entry>
  <entry>
    <title>C/C语言指针</title>
    <url>/2019/12/06/C/C%E8%AF%AD%E8%A8%80%E6%8C%87%E9%92%88/</url>
    <content><![CDATA[<h1 id="C指针"><a href="#C指针" class="headerlink" title="C指针"></a>C指针</h1><h2 id="为什么学习指针"><a href="#为什么学习指针" class="headerlink" title="为什么学习指针"></a>为什么学习指针</h2><blockquote>
<p>通过指针，可以简化一些C编程任务的执行，还有一些任务，如动态内存的分配，没有指针是无法执行的。</p>
</blockquote>
<h2 id="什么是指针"><a href="#什么是指针" class="headerlink" title="什么是指针"></a>什么是指针</h2><blockquote>
<p>指针是一个变量，其值为另一个变量的地址，即，内存位置的直接地址。就像其他变量或常量一样，使用指针存储其他变量地址之前，需要对其进行声明，</p>
</blockquote>
<h2 id="指针的简单使用"><a href="#指针的简单使用" class="headerlink" title="指针的简单使用"></a>指针的简单使用</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//指针学习</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdio.h"</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   <span class="comment">/*指针的简单使用*/</span></span><br><span class="line">    <span class="keyword">int</span> number=<span class="number">20</span>;<span class="comment">/*实际变量的声明*/</span></span><br><span class="line">    <span class="keyword">int</span> *num;<span class="comment">/*指针变量的声明*/</span></span><br><span class="line">    num=&amp;number;<span class="comment">/*在指针变量中存储number的地址*/</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"number的地址是L：%p\n"</span>,num);<span class="comment">//两种打印number地址的方式</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"number的地址是L：%p\n"</span>,&amp;number);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"number的s值是:%d\n"</span>,*num);<span class="comment">//两种打印number值的方式。</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"number的s值是:%d\n"</span>,number);</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*输出结果为：</span></span><br><span class="line"><span class="comment"> number的地址是L：0x7ffeefbff4ec</span></span><br><span class="line"><span class="comment"> number的地址是L：0x7ffeefbff4ec</span></span><br><span class="line"><span class="comment"> number的s值是:20</span></span><br><span class="line"><span class="comment"> number的s值是:20</span></span><br><span class="line"><span class="comment"> */</span></span><br></pre></td></tr></table></figure>

<h2 id="C中的NULL指针"><a href="#C中的NULL指针" class="headerlink" title="C中的NULL指针"></a>C中的NULL指针</h2><blockquote>
<p>在变量声明的时候，如果没有确切的地址可以赋值，为指针变量赋一个 NULL 值是一个良好的编程习惯。赋为 NULL 值的指针被称为<strong>空</strong>指针。</p>
</blockquote>
<blockquote>
<p>在大多数的操作系统上，程序不允许访问地址为 0 的内存，因为该内存是操作系统保留的。然而，内存地址 0 有特别重要的意义，它表明该指针不指向一个可访问的内存位置。但按照惯例，如果指针包含空值（零值），则假定它不指向任何东西。</p>
</blockquote>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//检查一个空指针</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdio.h"</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> *Zero =<span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">if</span> (!Zero) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"这是一个空指针\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*输出结果为：</span></span><br><span class="line"><span class="comment"> 这是一个空指针</span></span><br><span class="line"><span class="comment"> */</span></span><br></pre></td></tr></table></figure>

<h2 id=""><a href="#" class="headerlink" title=""></a></h2><h2 id="指针的算术运算"><a href="#指针的算术运算" class="headerlink" title="指针的算术运算"></a>指针的算术运算</h2><h3 id="指针的递增递减"><a href="#指针的递增递减" class="headerlink" title="指针的递增递减"></a>指针的递增递减</h3><blockquote>
<p>我们喜欢在程序中使用指针代替数组，因为变量指针可以递增，而数组不能递增，数组可以看成一个指针常量。下面的程序递增变量指针，以便顺序访问数组中的每一个元素：</p>
</blockquote>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdio.h"</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//定增一个指针</span></span><br><span class="line">    <span class="keyword">int</span> number[<span class="number">4</span>]=&#123;<span class="number">5</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="number">1314</span>&#125;;</span><br><span class="line">    <span class="keyword">int</span> *num=number;</span><br><span class="line">    <span class="keyword">int</span> i=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (i&lt;=<span class="number">3</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"number存储值为：%d\n"</span>,*num);</span><br><span class="line">        i++;</span><br><span class="line">        num++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//递减一个指针</span></span><br><span class="line">    <span class="keyword">int</span> number1[<span class="number">4</span>]=&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>&#125;;</span><br><span class="line">    <span class="keyword">int</span> *num1=&amp;number1[<span class="number">3</span>];<span class="comment">//这里注意递减时指针的指向是不一样的</span></span><br><span class="line">    <span class="keyword">int</span> j=<span class="number">3</span>;</span><br><span class="line">    <span class="keyword">while</span> (j&gt;=<span class="number">0</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"number1存储值为：%d\n"</span>,*num1);</span><br><span class="line">        j--;</span><br><span class="line">        num1--;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*输出结果为：</span></span><br><span class="line"><span class="comment"> number存储值为：5</span></span><br><span class="line"><span class="comment"> number存储值为：2</span></span><br><span class="line"><span class="comment"> number存储值为：1</span></span><br><span class="line"><span class="comment"> number存储值为：1314</span></span><br><span class="line"><span class="comment"> number1存储值为：4</span></span><br><span class="line"><span class="comment"> number1存储值为：3</span></span><br><span class="line"><span class="comment"> number1存储值为：2</span></span><br><span class="line"><span class="comment"> number1存储值为：1</span></span><br><span class="line"><span class="comment"> */</span></span><br></pre></td></tr></table></figure>

<h3 id="指针的比较"><a href="#指针的比较" class="headerlink" title="指针的比较"></a>指针的比较</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdio.h"</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//通过指针的比较来输出数组中的字符</span></span><br><span class="line">    <span class="keyword">int</span> number[<span class="number">4</span>]=&#123;<span class="number">5</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="number">1314</span>&#125;;</span><br><span class="line">    <span class="keyword">int</span> *num=number;</span><br><span class="line">    <span class="keyword">int</span> i=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (num&lt;=&amp;number[<span class="number">3</span>]) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"number[%d]:%d\n"</span>,i,*num);</span><br><span class="line">        i++;</span><br><span class="line">        num++;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*输出结果为：</span></span><br><span class="line"><span class="comment"> number[0]:5</span></span><br><span class="line"><span class="comment"> number[1]:2</span></span><br><span class="line"><span class="comment"> number[2]:1</span></span><br><span class="line"><span class="comment"> number[3]:1314</span></span><br><span class="line"><span class="comment"> */</span></span><br></pre></td></tr></table></figure>



<h2 id="指针数组"><a href="#指针数组" class="headerlink" title="指针数组"></a>指针数组</h2><h3 id="-1"><a href="#-1" class="headerlink" title=""></a></h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdio.h"</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//指针数组</span></span><br><span class="line">    <span class="comment">//整数指针</span></span><br><span class="line">    <span class="keyword">int</span> number[<span class="number">4</span>]=&#123;<span class="number">5</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="number">1314</span>&#125;;</span><br><span class="line">    <span class="keyword">int</span> i=<span class="number">0</span>,*num[<span class="number">4</span>];</span><br><span class="line">    <span class="keyword">for</span> (i=<span class="number">0</span>; i&lt;=<span class="number">3</span>; i++) &#123;</span><br><span class="line">        num[i]=&amp;number[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (i=<span class="number">0</span>; i&lt;=<span class="number">3</span>; i++) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"number[%d]:%d\n"</span>,i,*num[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">" \n"</span>);</span><br><span class="line">    <span class="comment">//用一个指向字符的指针数组来存储一个字符串列表</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"这就是我想要对你说的话：\n"</span>);</span><br><span class="line">    <span class="keyword">char</span> *zifu[]=&#123;<span class="string">"I love you!"</span>,<span class="string">"I love python!"</span>,<span class="string">"But i love you best!"</span>&#125;;</span><br><span class="line">    <span class="keyword">int</span> j=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (j=<span class="number">0</span>; j&lt;<span class="number">3</span>; j++) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%s\n"</span>,zifu[j]);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*输出结果为：</span></span><br><span class="line"><span class="comment"> number[0]:5</span></span><br><span class="line"><span class="comment"> number[1]:2</span></span><br><span class="line"><span class="comment"> number[2]:1</span></span><br><span class="line"><span class="comment"> number[3]:1314</span></span><br><span class="line"><span class="comment">  </span></span><br><span class="line"><span class="comment"> 这就是我想要对你说的话：</span></span><br><span class="line"><span class="comment"> I love you!</span></span><br><span class="line"><span class="comment"> I love python!</span></span><br><span class="line"><span class="comment"> But i love you best!</span></span><br><span class="line"><span class="comment"> */</span></span><br></pre></td></tr></table></figure>

<h2 id="指向指针的指针"><a href="#指向指针的指针" class="headerlink" title="指向指针的指针"></a>指向指针的指针</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdio.h"</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;   <span class="comment">//定义指向指针的指针时，一定要使用两个*号</span></span><br><span class="line">    <span class="keyword">int</span> num=<span class="number">20</span>;</span><br><span class="line">    <span class="keyword">int</span> *zz=&amp;num;</span><br><span class="line">    <span class="keyword">int</span> **zzz=&amp;zz;</span><br><span class="line">    <span class="comment">//使用三种方法分别打印出变量num的值</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"num的值是：%d\n"</span>,num);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"num的值是：%d\n"</span>,*zz);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"num的值是：%d\n"</span>,**zzz);</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*输出结果为：</span></span><br><span class="line"><span class="comment"> num的值是：20</span></span><br><span class="line"><span class="comment"> num的值是：20</span></span><br><span class="line"><span class="comment"> num的值是：20</span></span><br><span class="line"><span class="comment"> */</span></span><br></pre></td></tr></table></figure>

<h2 id="传递指针给函数"><a href="#传递指针给函数" class="headerlink" title="传递指针给函数"></a>传递指针给函数</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdio.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"time.h"</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">sj</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">long</span> *zz)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;   <span class="comment">//通过传递指针给函数，可以直接修改原参数（实参），而不是引用实参到形参。</span></span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">long</span> shijian;</span><br><span class="line">    sj(&amp;shijian);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"当前时间参数是：%ld\n"</span>,shijian);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">sj</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">long</span> *zz)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    *zz=time(<span class="literal">NULL</span>);</span><br><span class="line">    <span class="keyword">return</span> ;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*输出结果为：</span></span><br><span class="line"><span class="comment"> 当前时间参数是：1575623559</span></span><br><span class="line"><span class="comment"> */</span></span><br></pre></td></tr></table></figure>



<h2 id="能接受指针作为参数的函数，也能接受数组作为参数"><a href="#能接受指针作为参数的函数，也能接受数组作为参数" class="headerlink" title="能接受指针作为参数的函数，也能接受数组作为参数"></a>能接受指针作为参数的函数，也能接受数组作为参数</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdio.h"</span></span></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">get</span><span class="params">(<span class="keyword">int</span>  *zz)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;   <span class="comment">//通过传递指针给函数，可以直接修改原参数（实参），而不是引用实参到形参。</span></span><br><span class="line">    <span class="keyword">int</span> number[<span class="number">6</span>]=&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>&#125;;</span><br><span class="line">    <span class="keyword">double</span> jieguo;</span><br><span class="line">    jieguo=<span class="built_in">get</span>(number);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"它们的平均数是：%lf\n"</span>,jieguo);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">get</span><span class="params">(<span class="keyword">int</span> *zz)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i=<span class="number">0</span>;<span class="keyword">int</span> sum=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (i=<span class="number">0</span>; i&lt;=<span class="number">5</span>; i++) &#123;</span><br><span class="line">        sum=sum+zz[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> (<span class="keyword">double</span>)sum/<span class="number">6</span>;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*输出结果为：</span></span><br><span class="line"><span class="comment"> 它们的平均数是：3.500000</span></span><br><span class="line"><span class="comment"> */</span></span><br></pre></td></tr></table></figure>



<h2 id="从函数返回指针"><a href="#从函数返回指针" class="headerlink" title="从函数返回指针"></a>从函数返回指针</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>C语言</category>
      </categories>
  </entry>
  <entry>
    <title>C/函数指针</title>
    <url>/2019/12/06/C/%E5%87%BD%E6%95%B0%E6%8C%87%E9%92%88/</url>
    <content><![CDATA[<h1 id="函数指针"><a href="#函数指针" class="headerlink" title="函数指针"></a>函数指针</h1><h2 id="怎么使用函数指针"><a href="#怎么使用函数指针" class="headerlink" title="怎么使用函数指针"></a>怎么使用函数指针</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdlib.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"time.h"</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">suiji</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> rand();</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> (*p)()=&amp;suiji;<span class="comment">//声明函数指针</span></span><br><span class="line">    <span class="keyword">int</span> a=p();</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,a);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> 16807</span></span><br><span class="line"><span class="comment"> */</span></span><br></pre></td></tr></table></figure>



<h2 id="回调函数"><a href="#回调函数" class="headerlink" title="回调函数"></a>回调函数</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdlib.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"time.h"</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">huidiao</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">void</span> (*<span class="built_in">print</span>)(<span class="keyword">void</span>))</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;x; i++) &#123;</span><br><span class="line">        <span class="built_in">print</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">print</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"*\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a=<span class="number">10</span>;</span><br><span class="line">    huidiao(a, <span class="built_in">print</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> </span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> </span></span><br><span class="line"><span class="comment"> */</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>C语言</category>
      </categories>
  </entry>
  <entry>
    <title>函数练习题</title>
    <url>/2019/12/05/C%E8%AF%AD%E8%A8%80%E4%BD%9C%E4%B8%9A/C%E8%AF%AD%E8%A8%80%EF%BC%9A%E5%87%BD%E6%95%B0%E7%BB%83%E4%B9%A0%E9%A2%98/</url>
    <content><![CDATA[<h1 id="实验七-函数"><a href="#实验七-函数" class="headerlink" title="实验七 函数"></a>实验七 函数</h1><h2 id="基础"><a href="#基础" class="headerlink" title="基础"></a>基础</h2><h3 id="3-编写一个函数，接收两点的坐标，计算并返回这两点之间的距离。建议函数原型-double-Distance-int-x1-，-int-y1-，-int-x2-，-int-y2"><a href="#3-编写一个函数，接收两点的坐标，计算并返回这两点之间的距离。建议函数原型-double-Distance-int-x1-，-int-y1-，-int-x2-，-int-y2" class="headerlink" title="3.编写一个函数，接收两点的坐标，计算并返回这两点之间的距离。建议函数原型:double Distance(int x1 ， int y1 ， int x2 ， int y2) ;"></a>3.编写一个函数，接收两点的坐标，计算并返回这两点之间的距离。建议函数原型:double Distance(int x1 ， int y1 ， int x2 ， int y2) ;</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//实验七 基础3</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"math.h"</span></span></span><br><span class="line"><span class="comment">/*编写一个函数，接收两点的坐标，计算并返回这两点之间的距离。建议函数原型:</span></span><br><span class="line"><span class="comment">double Distance(int x1 ， int y1 ， int x2 ， int y2) */</span></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">Distance</span><span class="params">(<span class="keyword">int</span> x1,<span class="keyword">int</span> y1,<span class="keyword">int</span> x2,<span class="keyword">int</span> y2)</span></span>;<span class="comment">//函数声明</span></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">Distance</span><span class="params">(<span class="keyword">int</span> x1,<span class="keyword">int</span> y1,<span class="keyword">int</span> x2,<span class="keyword">int</span> y2)</span></span>&#123;<span class="comment">//函数定义，包含三个形参</span></span><br><span class="line">    <span class="keyword">int</span> x_chazhi;                           <span class="comment">//函数主体</span></span><br><span class="line">    <span class="keyword">int</span> y_chazhi;</span><br><span class="line">    x_chazhi=(x1-x2);</span><br><span class="line">    y_chazhi=(y1-y2);</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">sqrt</span>(x_chazhi*x_chazhi+y_chazhi*y_chazhi);<span class="comment">//返回两点之间的距离</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span>                                  <span class="comment">//main()函数</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> jieguo;<span class="keyword">int</span> x1,y1,x2,y2;</span><br><span class="line">    x1=<span class="number">0</span>;y1=<span class="number">0</span>;x2=<span class="number">1</span>;y2=<span class="number">1</span>;</span><br><span class="line">    jieguo=Distance(x1, y1, x2, y2);            <span class="comment">//实现两次函数调用，将返回值存储在变量jieguo中，并输出结果</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"(%d,%d)到(%d,%d)的距离是：%lf\n"</span>,x1,y1,x2,y2,jieguo);</span><br><span class="line">    x1=<span class="number">2</span>;y1=<span class="number">3</span>;x2=<span class="number">5</span>;y2=<span class="number">4</span>;</span><br><span class="line">    jieguo=Distance(x1, y1, x2, y2);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"(%d,%d)到(%d,%d)的距离是：%lf\n"</span>,x1,y1,x2,y2,jieguo);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*输出结果为：</span></span><br><span class="line"><span class="comment"> (0,0)到(1,1)的距离是：1.414214</span></span><br><span class="line"><span class="comment"> (2,3)到(5,4)的距离是：3.162278</span></span><br><span class="line"><span class="comment"> */</span></span><br></pre></td></tr></table></figure>

<h2 id="进阶"><a href="#进阶" class="headerlink" title="进阶"></a>进阶</h2><h3 id="7-写一个函数-求一个实数的整数次幂。"><a href="#7-写一个函数-求一个实数的整数次幂。" class="headerlink" title="7.写一个函数:求一个实数的整数次幂。"></a>7.写一个函数:求一个实数的整数次幂。</h3><p><em>在主函数main中输入一个实数 x 和正整数m，调用该函数求这个实数 x 的m次幂。要求该函数能够正确地计算负幂。同时，该函数实现 0 的任何次幂为 0 ，并 且任何数值的 0 次幂为 1 。使用循环方法实现。建议函数原型:double Power(double dblRealNumber ， int intPositiveNumber) ;</em></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//实验七 进阶7</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"hanshu.h"</span><span class="comment">//"stdio.h"在hanshu.h中</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdlib.h"</span></span></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">Power</span><span class="params">(<span class="keyword">double</span> dblRealNumber,<span class="keyword">int</span> intPositiveNumber)</span></span>;<span class="comment">//函数声明</span></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">Power</span><span class="params">(<span class="keyword">double</span> dblRealNumber,<span class="keyword">int</span> intPositiveNumber)</span></span>&#123;<span class="comment">//函数定义</span></span><br><span class="line">    <span class="keyword">double</span> jieguo=<span class="number">0</span>,jieguo1=<span class="number">0</span>;<span class="keyword">int</span> i=<span class="number">1</span>;                  <span class="comment">//函数体</span></span><br><span class="line">    <span class="keyword">if</span> (dblRealNumber==<span class="number">0</span>) &#123;                             <span class="comment">//实现0的任何次幂为0</span></span><br><span class="line">        jieguo=<span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> ((dblRealNumber!=<span class="number">0</span>)&amp;&amp;(intPositiveNumber==<span class="number">0</span>))&#123;<span class="comment">//实现非零实数x的0次幂为1</span></span><br><span class="line">        jieguo=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (intPositiveNumber&gt;<span class="number">0</span>)&#123;                      <span class="comment">//使用循环，计算出n&gt;0时n次幂的结果</span></span><br><span class="line">        jieguo=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span> (i&lt;=intPositiveNumber) &#123;</span><br><span class="line">            jieguo=jieguo*dblRealNumber;</span><br><span class="line">            i++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        jieguo1=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span> (i&lt;=<span class="built_in">abs</span>(intPositiveNumber)) &#123;             <span class="comment">//使用循环，计算出n&lt;0时n次幂的结果</span></span><br><span class="line">            jieguo1=jieguo1*dblRealNumber;</span><br><span class="line">            i++;</span><br><span class="line">        &#125;</span><br><span class="line">        jieguo=<span class="number">1</span>/jieguo1;</span><br><span class="line">    &#125;</span><br><span class="line">        <span class="keyword">return</span> jieguo;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span>                                              <span class="comment">//调用函数，对函数的各个功能进行检测</span></span></span><br><span class="line"><span class="function"></span>&#123;   <span class="keyword">double</span> jieguo,x;<span class="keyword">int</span> n;</span><br><span class="line">    x=<span class="number">2</span>;n=<span class="number">2</span>;</span><br><span class="line">    jieguo=Power(x,n);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%.2lf的%d次方结果是：%.2lf\n"</span>,x,n,jieguo);</span><br><span class="line">    x=<span class="number">2</span>;n=<span class="number">-2</span>;</span><br><span class="line">    jieguo=Power(x,n);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%.2lf的%d次方结果是：%.2lf\n"</span>,x,n,jieguo);</span><br><span class="line">    x=<span class="number">-2</span>;n=<span class="number">-2</span>;</span><br><span class="line">    jieguo=Power(x,n);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%.2lf的%d次方结果是：%.2lf\n"</span>,x,n,jieguo);</span><br><span class="line">    x=<span class="number">0</span>;n=<span class="number">-2</span>;</span><br><span class="line">    jieguo=Power(x,n);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%.2lf的%d次方结果是：%.2lf\n"</span>,x,n,jieguo);</span><br><span class="line">    x=<span class="number">0</span>;n=<span class="number">0</span>;</span><br><span class="line">    jieguo=Power(x,n);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%.2lf的%d次方结果是：%.2lf\n"</span>,x,n,jieguo);</span><br><span class="line">    x=<span class="number">-2</span>;n=<span class="number">0</span>;</span><br><span class="line">    jieguo=Power(x,n);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%.2lf的%d次方结果是：%.2lf\n"</span>,x,n,jieguo);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*输出结果为：</span></span><br><span class="line"><span class="comment"> 2.00的2次方结果是：4.00</span></span><br><span class="line"><span class="comment"> 2.00的-2次方结果是：0.25</span></span><br><span class="line"><span class="comment"> -2.00的-2次方结果是：0.25</span></span><br><span class="line"><span class="comment"> 0.00的-2次方结果是：0.00</span></span><br><span class="line"><span class="comment"> 0.00的0次方结果是：0.00</span></span><br><span class="line"><span class="comment"> -2.00的0次方结果是：1.00</span></span><br><span class="line"><span class="comment"> */</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>C语言作业</category>
      </categories>
  </entry>
  <entry>
    <title>Python/Python字符串操作</title>
    <url>/2019/12/03/Python/Python%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%93%8D%E4%BD%9C/</url>
    <content><![CDATA[<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#字符串相加</span></span><br><span class="line">a=<span class="string">"Hello world! "</span></span><br><span class="line">b=<span class="string">"I love you !"</span></span><br><span class="line">print(a+b)</span><br><span class="line"><span class="string">'''输出结果为：Hello world! I love you !'''</span></span><br><span class="line"><span class="comment">#字符串乘法</span></span><br><span class="line">print(a*<span class="number">3</span>)</span><br><span class="line"><span class="comment">#判断特定字符是否在字符串中</span></span><br><span class="line">print(<span class="string">'o'</span> <span class="keyword">in</span> a)</span><br><span class="line">print(<span class="string">'R'</span> <span class="keyword">in</span> a)</span><br><span class="line"><span class="comment">#字符串索引</span></span><br><span class="line">print(a[<span class="number">0</span>])<span class="comment">#输出H</span></span><br><span class="line"><span class="comment">#使用索引输出部分字符串</span></span><br><span class="line">print(a[<span class="number">0</span>:<span class="number">5</span>])</span><br><span class="line"><span class="comment">#输出H,需要注意的是索引冒号后面的表示到这个数之前位置，也就是只输出到它之前的那个数字</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Python</category>
      </categories>
  </entry>
  <entry>
    <title>C/C语言exit()使用</title>
    <url>/2019/12/02/C/C%E8%AF%AD%E8%A8%80exit()%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<p>#exit()使用</p>
<p><strong>exit(1)表示异常退出.这个1是返回给操作系统的；</strong></p>
<p><strong>exit(0)表示正常退出。</strong></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"请输入一个奇数："</span>);</span><br><span class="line">  <span class="keyword">int</span> num;</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;num);</span><br><span class="line">  <span class="keyword">if</span> (num%<span class="number">2</span>==<span class="number">0</span>)&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"必须是奇数！\n"</span>);</span><br><span class="line">    <span class="built_in">exit</span>(<span class="number">1</span>);<span class="comment">//注：在main函数中exit(0)的效果等同于return 0;</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,num);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*在该程序中，如果输入的是奇数，就会执行下面的输出语句，将奇数打印出来，否则就会退出。*/</span></span><br></pre></td></tr></table></figure>











]]></content>
      <categories>
        <category>C语言</category>
      </categories>
  </entry>
  <entry>
    <title>C/C语言两个数交换的两种方法</title>
    <url>/2019/12/02/C/C%E8%AF%AD%E8%A8%80%E4%B8%A4%E4%B8%AA%E6%95%B0%E4%BA%A4%E6%8D%A2%E7%9A%84%E4%B8%A4%E7%A7%8D%E6%96%B9%E6%B3%95/</url>
    <content><![CDATA[<h1 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h1><p><em>由于函数传递时实参无法改变，所以使用了全局变量来完成</em></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="keyword">int</span> a,b;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">jiaoHUAN</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> c;</span><br><span class="line">    c=a;</span><br><span class="line">    a=b;</span><br><span class="line">    b=c;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"a:%d,b:%d\n"</span>,a,b);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    a=<span class="number">3</span>;</span><br><span class="line">    b=<span class="number">2</span>;</span><br><span class="line">    jiaoHUAN(a, b);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*输出结果为：</span></span><br><span class="line"><span class="comment">a:2,b:3</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>



<h1 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h1><p><em>使用数组，从而避免使用了全局变量</em></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">jiaoHUAN</span><span class="params">(<span class="keyword">int</span> a[<span class="number">2</span>])</span></span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">int</span> zhongjian;</span><br><span class="line">    zhongjian=a[<span class="number">0</span>];</span><br><span class="line">    a[<span class="number">0</span>]=a[<span class="number">1</span>];</span><br><span class="line">    a[<span class="number">1</span>]=zhongjian;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"a:%d,b:%d\n"</span>,a[<span class="number">0</span>],a[<span class="number">1</span>]);</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> b[<span class="number">2</span>]=&#123;<span class="number">3</span>,<span class="number">2</span>&#125;;</span><br><span class="line">    jiaoHUAN(b);</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*输出结果为：</span></span><br><span class="line"><span class="comment"> a:2,b:3</span></span><br><span class="line"><span class="comment"> */</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>C语言</category>
      </categories>
  </entry>
  <entry>
    <title>C/C语言之神奇代码</title>
    <url>/2019/12/02/C/C%E8%AF%AD%E8%A8%80%E4%B9%8B%E7%A5%9E%E5%A5%87%E4%BB%A3%E7%A0%81/</url>
    <content><![CDATA[<h1 id="C语言之神奇代码"><a href="#C语言之神奇代码" class="headerlink" title="C语言之神奇代码"></a>C语言之神奇代码</h1><p><strong>声明：这是网上看到的，还没去弄清楚是什么原理，就先放在这里吧！</strong></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">main(_)&#123;_^<span class="number">448</span>&amp;&amp;main(-~_);<span class="built_in">putchar</span>(--_%<span class="number">64</span>?<span class="number">32</span>|-~<span class="number">7</span>[__TIME__-_/<span class="number">8</span>%<span class="number">8</span>][<span class="string">"&gt;'txiZ^(~z?"</span><span class="number">-48</span>]&gt;&gt;<span class="string">";;;====~$::199"</span>[_*<span class="number">2</span>&amp;<span class="number">8</span>|_/<span class="number">64</span>]/(_&amp;<span class="number">2</span>?<span class="number">1</span>:<span class="number">8</span>)%<span class="number">8</span>&amp;<span class="number">1</span>:<span class="number">10</span>);&#125;</span><br><span class="line"><span class="comment">/*直接复制上面代码到某一编辑器，然后运行就会出现当前的时间。很神奇吧！</span></span><br><span class="line"><span class="comment">下面是效果图：*/</span></span><br></pre></td></tr></table></figure>

<p><img src="https://tva1.sinaimg.cn/large/006tNbRwly1g9icvhy003j30v60ccmy6.jpg" alt="神奇代码"></p>
]]></content>
      <categories>
        <category>C语言</category>
      </categories>
  </entry>
  <entry>
    <title>C/C语言实例：随机数生成</title>
    <url>/2019/12/02/C/C%E8%AF%AD%E8%A8%80%E5%AE%9E%E4%BE%8B%EF%BC%9A%E9%9A%8F%E6%9C%BA%E6%95%B0%E7%94%9F%E6%88%90/</url>
    <content><![CDATA[<h1 id="C语言实例之随机数生成"><a href="#C语言实例之随机数生成" class="headerlink" title="C语言实例之随机数生成"></a>C语言实例之随机数生成</h1><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*rand函数用来产生随机数，但是rand（）的内部是用线性同余法实现的，是伪随机数。在调用rand函数之前，可以使用srand函数设置随机数种子，如果没有设置随机数种子，rand函数在调用时，自动设计随机种子为1.随机种子相同，每次产生的随机数都是相同的，这就是为什么叫做伪随机数。*/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdio.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdlib.h"</span><span class="comment">//rand函数的头文件为：stdlib.h</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"time.h"</span><span class="comment">//strand()函数需要的参数为seed，通常利用time(0)的返回值作为seed。time.h是time的头文件</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    srand((<span class="keyword">int</span>)time(<span class="number">0</span>));</span><br><span class="line">    <span class="keyword">int</span> SJ[<span class="number">5</span>];<span class="keyword">int</span> i=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (i=<span class="number">0</span>; i&lt;=<span class="number">4</span>; i++) &#123;</span><br><span class="line">        SJ[i]=rand()&amp;<span class="number">101</span>; <span class="comment">//获取0到100的随机数，包括100</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (i=<span class="number">0</span>; i&lt;=<span class="number">4</span>; i++) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,SJ[i]);</span><br><span class="line"><span class="comment">/*输出结果为：</span></span><br><span class="line"><span class="comment"> 100</span></span><br><span class="line"><span class="comment"> 33</span></span><br><span class="line"><span class="comment"> 33</span></span><br><span class="line"><span class="comment"> 5</span></span><br><span class="line"><span class="comment"> 32</span></span><br><span class="line"><span class="comment"> 这样就完成了随机数的输出</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>C语言</category>
      </categories>
  </entry>
  <entry>
    <title>C/计算机二级考试临时抱佛脚</title>
    <url>/2019/12/02/C/%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%BA%8C%E7%BA%A7%E8%80%83%E8%AF%95%E4%B8%B4%E6%97%B6%E6%8A%B1%E4%BD%9B%E8%84%9A/</url>
    <content><![CDATA[<h1 id="计算机二级考试临时抱佛脚"><a href="#计算机二级考试临时抱佛脚" class="headerlink" title="计算机二级考试临时抱佛脚"></a>计算机二级考试临时抱佛脚</h1><h2 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h2><h3 id="软件危机"><a href="#软件危机" class="headerlink" title="软件危机"></a>软件危机</h3><p>软件危机的表现包括：①对软件开发的进度和费用估计不准确；②用户对已完成的软件系统不满意的现象时常发生；③软件产品的质量‘往往靠不住；④软件常常是不可维护的；⑤软件通常没有适当的文档；⑥软件成本在计算机系统总成本中所占的比例逐年上升；⑦软件开发生产率提高的速度远远跟不上计算机应用迅速普及深入的趋势。</p>
<p>地址即指针。</p>
<p>不能将一个整数直接赋给指针变量作为地址；函数的返回值可以说指针。</p>
<h3 id="sizeof函数和int，double字节问题"><a href="#sizeof函数和int，double字节问题" class="headerlink" title="sizeof函数和int，double字节问题"></a>sizeof函数和int，double字节问题</h3><p>C语言中用sizeof判断数据类型长度，在vc平台上，整型int占有4字节，double占有8个字节</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdio.h"</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> a,b,c,d;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%c%c"</span>,&amp;a,&amp;b);</span><br><span class="line">    c=getchar();d=getchar();</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%c%c%c%c\n"</span>,a,b,c,d);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*按照下列方式输入数据：</span></span><br><span class="line"><span class="comment">12&lt;CR&gt;</span></span><br><span class="line"><span class="comment">34&lt;CR&gt;</span></span><br><span class="line"><span class="comment">其中&lt;CR&gt;表示回车。</span></span><br><span class="line"><span class="comment">输出结果为：</span></span><br><span class="line"><span class="comment">12</span></span><br><span class="line"><span class="comment">3</span></span><br></pre></td></tr></table></figure>

<h3 id="case常量表达式只是起语句标号的作用，并不是该处进行条件判断。"><a href="#case常量表达式只是起语句标号的作用，并不是该处进行条件判断。" class="headerlink" title="case常量表达式只是起语句标号的作用，并不是该处进行条件判断。"></a>case常量表达式只是起语句标号的作用，并不是该处进行条件判断。</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdio.h"</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> x=<span class="number">1</span>,y=<span class="number">0</span>,a=<span class="number">0</span>,b=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">switch</span> (x) &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">            <span class="keyword">switch</span> (y) &#123;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">0</span>:a++;<span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">1</span>:b++;<span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span>:a++;b++;<span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">3</span>:a++;b++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"a=%d,b=%d\n"</span>,a,b);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*输出结果为：</span></span><br><span class="line"><span class="comment">a=2,b=1</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>



<h3 id="一个程序选择题"><a href="#一个程序选择题" class="headerlink" title="一个程序选择题"></a>一个程序选择题</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdio.h"</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i=<span class="number">0</span>,k=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (i=<span class="number">0</span>; i&lt;<span class="number">4</span>; i++,i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (k=<span class="number">1</span>; k&lt;<span class="number">3</span>; k++) &#123;</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"*\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*输出结果为：</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*解析：由于内层循环后面直接跟了空语句；所以在循环内部什么操作也不做，跳出循环后执行打印语句，所以就打印了一个“*”。</span></span><br><span class="line"><span class="comment"> */</span></span><br></pre></td></tr></table></figure>

<h3 id="程序选择题复现"><a href="#程序选择题复现" class="headerlink" title="程序选择题复现"></a>程序选择题复现</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdio.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdlib.h"</span><span class="comment">//rand函数的头文件为：stdlib.h</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"time.h"</span><span class="comment">//strand()函数需要的参数为seed，通常利用time(0)的返回值作为seed。time.h是time的头文件</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> s[]=<span class="string">"012xy\08s34f4w2"</span>;<span class="comment">//char型字符串总是自动以\0结尾.但是\0介于两个数字之间时，这种自动结尾实效。具体可以自己看看是如何失效的。</span></span><br><span class="line">    <span class="keyword">int</span> i,n=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (i=<span class="number">0</span>;s[i]!=<span class="number">0</span>;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span> (s[i]&gt;=<span class="string">'0'</span>&amp;&amp;s[i]&lt;=<span class="string">'9'</span>) &#123;</span><br><span class="line">            n++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,n);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*所以输出结果为：</span></span><br><span class="line"><span class="comment"> 3</span></span><br><span class="line"><span class="comment"> */</span></span><br></pre></td></tr></table></figure>

<h3 id="第二次函数调用时，第一次的调用已经有些参数的值改变了！"><a href="#第二次函数调用时，第一次的调用已经有些参数的值改变了！" class="headerlink" title="第二次函数调用时，第一次的调用已经有些参数的值改变了！"></a>第二次函数调用时，第一次的调用已经有些参数的值改变了！</h3><h3 id="在C语言中，只有在使用时才占用内存单元的变量，其存储类型是：auto和register。"><a href="#在C语言中，只有在使用时才占用内存单元的变量，其存储类型是：auto和register。" class="headerlink" title="在C语言中，只有在使用时才占用内存单元的变量，其存储类型是：auto和register。"></a>在C语言中，只有在使用时才占用内存单元的变量，其存储类型是：auto和register。</h3><h3 id="不能在定义结构体的同时，由用结构体类型定义变量。所以，下面结构体的定义语句是错误的。"><a href="#不能在定义结构体的同时，由用结构体类型定义变量。所以，下面结构体的定义语句是错误的。" class="headerlink" title="不能在定义结构体的同时，由用结构体类型定义变量。所以，下面结构体的定义语句是错误的。"></a>不能在定义结构体的同时，由用结构体类型定义变量。所以，下面结构体的定义语句是错误的。</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">ord</span> &#123;</span><span class="keyword">int</span> x;<span class="keyword">int</span> y;<span class="keyword">int</span> z;&#125;<span class="class"><span class="keyword">struct</span> <span class="title">ord</span> <span class="title">a</span>;</span></span><br></pre></td></tr></table></figure>





<h3 id="与处理命令是以-开头的命令，它们不是C语言的可执行命令，这些命令应该在函数之外书写，一般在源文件的最前面书写，但不是必须在起始位置书写；C语言的预处理能够实现宏定义和条件编译等功能。"><a href="#与处理命令是以-开头的命令，它们不是C语言的可执行命令，这些命令应该在函数之外书写，一般在源文件的最前面书写，但不是必须在起始位置书写；C语言的预处理能够实现宏定义和条件编译等功能。" class="headerlink" title="与处理命令是以#开头的命令，它们不是C语言的可执行命令，这些命令应该在函数之外书写，一般在源文件的最前面书写，但不是必须在起始位置书写；C语言的预处理能够实现宏定义和条件编译等功能。"></a>与处理命令是以#开头的命令，它们不是C语言的可执行命令，这些命令应该在函数之外书写，一般在源文件的最前面书写，但不是必须在起始位置书写；C语言的预处理能够实现宏定义和条件编译等功能。</h3>]]></content>
      <categories>
        <category>C语言</category>
      </categories>
  </entry>
  <entry>
    <title>Python/Python实例：冒泡排序法</title>
    <url>/2019/12/01/Python/Python%E5%AE%9E%E4%BE%8B%EF%BC%9A%E5%86%92%E6%B3%A1%E6%8E%92%E5%BA%8F%E6%B3%95/</url>
    <content><![CDATA[<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">maoPAO</span><span class="params">(sz)</span>:</span></span><br><span class="line">    n = len(sz)    <span class="comment">#用函数len获取数组的长度存储在变量n中</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range (n):             <span class="comment">#用两个循环来执行冒泡排序的步骤</span></span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> range(n-i<span class="number">-1</span>):</span><br><span class="line">            <span class="keyword">if</span> sz[j]&gt;sz[j+<span class="number">1</span>]:</span><br><span class="line">                sz[j],sz[j+<span class="number">1</span>]=sz[j+<span class="number">1</span>],sz[j]</span><br><span class="line">    <span class="keyword">for</span> k <span class="keyword">in</span> range(n):            <span class="comment">#用一个循环，按大小顺序循环输出数组中的数字</span></span><br><span class="line">        print(sz[k])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">first=[<span class="number">1</span>,<span class="number">4</span>,<span class="number">3</span>,<span class="number">54</span>,<span class="number">43</span>]</span><br><span class="line">maoPAO(first)</span><br><span class="line"><span class="string">'''输出结果为你：</span></span><br><span class="line"><span class="string">1</span></span><br><span class="line"><span class="string">3</span></span><br><span class="line"><span class="string">4</span></span><br><span class="line"><span class="string">43</span></span><br><span class="line"><span class="string">54'''</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Python</category>
      </categories>
  </entry>
  <entry>
    <title>Python/Python实例：简单计算器的实现</title>
    <url>/2019/11/30/Python/Python%E5%AE%9E%E4%BE%8B%EF%BC%9A%E7%AE%80%E5%8D%95%E8%AE%A1%E7%AE%97%E5%99%A8%E7%9A%84%E5%AE%9E%E7%8E%B0/</url>
    <content><![CDATA[<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#Pyton实现简单的计算器，满足加减乘除</span></span><br><span class="line"><span class="comment">#定义函数</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">add</span><span class="params">(x,y)</span>:</span></span><br><span class="line">	<span class="keyword">return</span> x+y</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">subtract</span><span class="params">(x,y)</span>:</span></span><br><span class="line">  <span class="keyword">return</span> x-y</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">multiply</span><span class="params">(x,y)</span>:</span></span><br><span class="line">  <span class="keyword">return</span> x*y</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">devide</span><span class="params">(x,y)</span>:</span></span><br><span class="line">  <span class="keyword">return</span> x/y</span><br><span class="line">print(<span class="string">"1-&gt;加法"</span>)                      <span class="comment">#规定选择</span></span><br><span class="line">print(<span class="string">"2-&gt;减法"</span>)</span><br><span class="line">print(<span class="string">"3-&gt;乘法"</span>)</span><br><span class="line">print(<span class="string">"4-&gt;除法"</span>)</span><br><span class="line">yours=int(input(<span class="string">"请选择运算类型："</span>))<span class="comment">#获取用户选择</span></span><br><span class="line">a=int(input(<span class="string">"first number"</span>))     <span class="comment">#获取要运算的数字</span></span><br><span class="line">b=int(input(<span class="string">"second number"</span>))</span><br><span class="line"><span class="keyword">if</span> yours==<span class="number">1</span>:                    <span class="comment">#判断用户需要的运算类型并输出结果</span></span><br><span class="line">     print(<span class="string">"&#123;&#125;+&#123;&#125;=&#123;&#125;"</span>.format(a,b,add(a,b)))</span><br><span class="line"><span class="keyword">elif</span> yours==<span class="number">2</span>:</span><br><span class="line">    print(<span class="string">'&#123;&#125;-&#123;&#125;=&#123;&#125;'</span>.format(a,b,subtract(a,b)))</span><br><span class="line"><span class="keyword">elif</span> yours==<span class="number">3</span>:</span><br><span class="line">    print(<span class="string">'&#123;&#125;-&#123;&#125;=&#123;&#125;'</span>.format(a, b, multiply(a, b)))</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">'&#123;&#125;-&#123;&#125;=&#123;&#125;'</span>.format(a, b,devide(a, b)))</span><br><span class="line"></span><br><span class="line"><span class="string">'''运行结果为：</span></span><br><span class="line"><span class="string">1-&gt;加法</span></span><br><span class="line"><span class="string">2-&gt;减法</span></span><br><span class="line"><span class="string">3-&gt;乘法</span></span><br><span class="line"><span class="string">4-&gt;除法</span></span><br><span class="line"><span class="string">请选择运算类型：4</span></span><br><span class="line"><span class="string">first number1000</span></span><br><span class="line"><span class="string">second number10</span></span><br><span class="line"><span class="string">1000-10=100.0</span></span><br><span class="line"><span class="string">'''</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Python</category>
      </categories>
  </entry>
  <entry>
    <title>字符串练习题</title>
    <url>/2019/11/29/C%E8%AF%AD%E8%A8%80%E4%BD%9C%E4%B8%9A/%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%BB%83%E4%B9%A0%E9%A2%98/</url>
    <content><![CDATA[<h1 id="字符串练习题"><a href="#字符串练习题" class="headerlink" title="字符串练习题"></a>字符串练习题</h1><h2 id="基础练习"><a href="#基础练习" class="headerlink" title="基础练习"></a>基础练习</h2><h3 id="1-编写程序，对任意输入的字符串，统计其中的大写字母和小写字母的个数。例如，-输入字符-串-AAaaBBb123CCccccd-，则应输出结果-upper-6，-lower-8。"><a href="#1-编写程序，对任意输入的字符串，统计其中的大写字母和小写字母的个数。例如，-输入字符-串-AAaaBBb123CCccccd-，则应输出结果-upper-6，-lower-8。" class="headerlink" title="1.编写程序，对任意输入的字符串，统计其中的大写字母和小写字母的个数。例如， 输入字符 串: AAaaBBb123CCccccd ，则应输出结果:upper = 6， lower = 8。"></a>1.编写程序，对任意输入的字符串，统计其中的大写字母和小写字母的个数。例如， 输入字符 串: AAaaBBb123CCccccd ，则应输出结果:upper = 6， lower = 8。</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdio.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">jc1</span><span class="params">(<span class="keyword">char</span> zifu[],<span class="keyword">int</span> i,<span class="keyword">int</span> upper,<span class="keyword">int</span> lower)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">jc1</span><span class="params">(<span class="keyword">char</span> zifu[],<span class="keyword">int</span> i,<span class="keyword">int</span> upper,<span class="keyword">int</span> lower)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span> (i&lt;=<span class="built_in">strlen</span>(zifu)) &#123;</span><br><span class="line">        <span class="keyword">if</span> (zifu[i]&gt;=<span class="number">65</span>&amp;&amp;zifu[i]&lt;=<span class="number">90</span>) &#123;</span><br><span class="line">            upper++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (zifu[i]&gt;=<span class="number">97</span>&amp;&amp;zifu[i]&lt;=<span class="number">122</span>)&#123;</span><br><span class="line">            lower++;</span><br><span class="line">        &#125;</span><br><span class="line">        i++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"upper:%d,lower:%d\n"</span>,upper,lower);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> zifu1[]=&#123;<span class="string">"Hello the world"</span>&#125;;</span><br><span class="line">    jc1(zifu1,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">char</span> zifu2[]=&#123;<span class="string">"Python is the best LANGUAGE!"</span>&#125;;</span><br><span class="line">    jc1(zifu2,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*输出结果为</span></span><br><span class="line"><span class="comment">upper:1,lower:12</span></span><br><span class="line"><span class="comment">upper:9,lower:14</span></span><br><span class="line"><span class="comment">Program ended with exit code: 0	*/</span></span><br></pre></td></tr></table></figure>



<h3 id="2-用字符数组存储任意输入的一串字符，求其最大字符。"><a href="#2-用字符数组存储任意输入的一串字符，求其最大字符。" class="headerlink" title="2. 用字符数组存储任意输入的一串字符，求其最大字符。"></a>2. 用字符数组存储任意输入的一串字符，求其最大字符。</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//基础2</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdio.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">jc2</span><span class="params">(<span class="keyword">char</span> zifu[],<span class="keyword">int</span> i,<span class="keyword">char</span> <span class="built_in">max</span>)</span></span>;<span class="comment">//声明函数</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">jc2</span><span class="params">(<span class="keyword">char</span> zifu[],<span class="keyword">int</span> i,<span class="keyword">char</span> <span class="built_in">max</span>)</span><span class="comment">//定义函数，其中定义了字符数组zifu,整型变量i，字符型变量max</span></span></span><br><span class="line"><span class="function"></span>&#123;   <span class="built_in">max</span>=zifu[<span class="number">0</span>];                    <span class="comment">//初始化字符型变量max等于字符数组中第一个字符,并认为其为最大字符</span></span><br><span class="line">    <span class="keyword">while</span> (i&lt;=<span class="built_in">strlen</span>(zifu)<span class="number">-1</span>) &#123;           <span class="comment">//限制循环次数，防止下标越界</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">max</span>&lt;zifu[i]) &#123;          <span class="comment">//判断max这个字符是否小于后一个字符</span></span><br><span class="line">            <span class="built_in">max</span>=zifu[i];            <span class="comment">//如果比后一个字符小，就让后一个字符称为max</span></span><br><span class="line">        &#125;</span><br><span class="line">        i++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"最大的字符是：%c\n"</span>,<span class="built_in">max</span>);<span class="comment">//输出max字符的值</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span>                          <span class="comment">//调用函数</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> zifu1[]=&#123;<span class="string">"Hello the world"</span>&#125;;</span><br><span class="line">    jc2(zifu1,<span class="number">1</span>,<span class="string">'\0'</span>);</span><br><span class="line">    <span class="keyword">char</span> zifu2[]=&#123;<span class="string">"Python is the best LANGUAGE!"</span>&#125;;</span><br><span class="line">    jc2(zifu2,<span class="number">1</span>,<span class="string">'\0'</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*输出结果为：</span></span><br><span class="line"><span class="comment"> 最大的字符是：w</span></span><br><span class="line"><span class="comment"> 最大的字符是：y</span></span><br><span class="line"><span class="comment"> Program ended with exit code: 0*/</span></span><br></pre></td></tr></table></figure>



<h3 id="3-编写一个程序，将字符数组s2中的全部字符复制到字符数组s1中，不用-strcpy-函数。注意，复-制时，’-0’-也要复制过去。‘-0’-后面的字符不复制。"><a href="#3-编写一个程序，将字符数组s2中的全部字符复制到字符数组s1中，不用-strcpy-函数。注意，复-制时，’-0’-也要复制过去。‘-0’-后面的字符不复制。" class="headerlink" title="3. 编写一个程序，将字符数组s2中的全部字符复制到字符数组s1中，不用 strcpy 函数。注意，复 制时，’ \0’ 也要复制过去。‘ \0’ 后面的字符不复制。"></a>3. 编写一个程序，将字符数组s2中的全部字符复制到字符数组s1中，不用 strcpy 函数。注意，复 制时，’ \0’ 也要复制过去。‘ \0’ 后面的字符不复制。</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//基础3</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdio.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"string.h"</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">copy</span><span class="params">(<span class="keyword">char</span> zifu1[],<span class="keyword">int</span> i,<span class="keyword">int</span> j)</span></span>;<span class="comment">//声明函数</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">copy</span><span class="params">(<span class="keyword">char</span> zifu1[],<span class="keyword">int</span> i,<span class="keyword">int</span> j)</span></span>&#123;<span class="comment">//定义函数，其中包括三个参数：字符数组zifu1,整型变量i，整型变量j.</span></span><br><span class="line">    <span class="keyword">char</span> zifu2[<span class="built_in">strlen</span>(zifu1)+<span class="number">1</span>];<span class="comment">//定义一个长度和zifu1相同的空字符数组</span></span><br><span class="line">    <span class="keyword">while</span> (i&lt;=<span class="built_in">strlen</span>(zifu1)) &#123;<span class="comment">//执行循环，控制次数</span></span><br><span class="line">        zifu2[i]=zifu1[i];<span class="comment">//将zufu1原样复制到zifu2</span></span><br><span class="line">        i++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (j&lt;=<span class="built_in">strlen</span>(zifu2)<span class="number">-1</span>) &#123;<span class="comment">//这里-1是为了输出不包括末尾的f'\0'</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%c"</span>,zifu2[j]);<span class="comment">//执行输出1</span></span><br><span class="line">        j++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n"</span>);            <span class="comment">//换行</span></span><br><span class="line">    j=<span class="number">0</span>;                     <span class="comment">//重新初始化j</span></span><br><span class="line">    <span class="keyword">while</span> (j&lt;=<span class="built_in">strlen</span>(zifu2)) &#123;<span class="comment">//这里没有-1，是为了和输出1做比较</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%c"</span>,zifu2[j]);<span class="comment">//执行输出2</span></span><br><span class="line">        j++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n"</span>);           <span class="comment">//换行</span></span><br><span class="line">&#125;                           <span class="comment">//输出结果1和2相同，说明zifu1末尾的'\0'也复制到了zifu2当中</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span>                  <span class="comment">//执行函数，完成任务</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> zifu1[]=&#123;<span class="string">"Hello the world"</span>&#125;;</span><br><span class="line">    copy(zifu1,<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//输出结果为：</span></span><br><span class="line"><span class="comment">//Hello the world</span></span><br><span class="line"><span class="comment">//Hello the world</span></span><br><span class="line"><span class="comment">//Program ended with exit code: 0</span></span><br></pre></td></tr></table></figure>

<h3 id="4-对字符串-a-中的字符由小到大排序。"><a href="#4-对字符串-a-中的字符由小到大排序。" class="headerlink" title="4. 对字符串 a 中的字符由小到大排序。"></a>4. 对字符串 a 中的字符由小到大排序。</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//基础4</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdio.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"string.h"</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span>  <span class="title">px</span><span class="params">(<span class="keyword">char</span> zifu[],<span class="keyword">int</span> i,<span class="keyword">int</span> j,<span class="keyword">char</span> exchange)</span></span>;        <span class="comment">//声明函数</span></span><br><span class="line"><span class="function"><span class="keyword">void</span>  <span class="title">px</span><span class="params">(<span class="keyword">char</span> zifu[],<span class="keyword">int</span> i,<span class="keyword">int</span> j,<span class="keyword">char</span> exchange)</span></span>&#123;        <span class="comment">//定义函数，其中包括四个参数</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"原来的字符串是：\n%s\n"</span>,zifu);</span><br><span class="line">    <span class="keyword">for</span> (i=<span class="number">0</span>;i&lt;=<span class="built_in">strlen</span>(zifu)<span class="number">-1</span>;i++) &#123;                   <span class="comment">//执行两个循环，使用冒泡排序法对字符串中的字符按照从小到大的顺序排列</span></span><br><span class="line">        <span class="keyword">for</span> (j=<span class="number">0</span>; j&lt;=<span class="built_in">strlen</span>(zifu)<span class="number">-1</span>-i; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (zifu[j]&gt;zifu[j+<span class="number">1</span>]) &#123;</span><br><span class="line">                exchange=zifu[j+<span class="number">1</span>];</span><br><span class="line">                zifu[j+<span class="number">1</span>]=zifu[j];</span><br><span class="line">                zifu[j]=exchange;</span><br><span class="line">            &#125;</span><br><span class="line">            exchange=<span class="string">'\0'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    i=<span class="number">0</span>;                                            <span class="comment">//让i重新等于0，避免呢过多的变量定义</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"重新排序后的字符数组是：\n"</span>);</span><br><span class="line">    <span class="keyword">while</span> (i&lt;=<span class="built_in">strlen</span>(zifu)+<span class="number">1</span>) &#123;                     <span class="comment">//执行循环，输出字符串</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%c"</span>,zifu[i]);</span><br><span class="line">        i++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n"</span>);                                   <span class="comment">//为了多个测试结果的美观，多输出两个换行</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span>                                          <span class="comment">//调用函数，实现多组测试</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> zifu1[]=<span class="string">"bcadefzrea?!#%^"</span>;</span><br><span class="line">    px(zifu1,<span class="number">0</span>,<span class="number">0</span>,<span class="string">'\0'</span>);</span><br><span class="line">    <span class="keyword">char</span> zifu2[]=<span class="string">"987654321123456789"</span>;</span><br><span class="line">       px(zifu2,<span class="number">0</span>,<span class="number">0</span>,<span class="string">'\0'</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*原来的字符串是：</span></span><br><span class="line"><span class="comment">bcadefzrea?!#%^</span></span><br><span class="line"><span class="comment">重新排序后的字符数组是：</span></span><br><span class="line"><span class="comment">!#%?^aabcdeefrz</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">原来的字符串是：</span></span><br><span class="line"><span class="comment">987654321123456789</span></span><br><span class="line"><span class="comment">重新排序后的字符数组是：</span></span><br><span class="line"><span class="comment">112233445566778899</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">Program ended with exit code: 0*/</span></span><br></pre></td></tr></table></figure>



<h3 id="6-下面程序输入一字符串，并将其中的大写字母改变成小写字母，完成程序。"><a href="#6-下面程序输入一字符串，并将其中的大写字母改变成小写字母，完成程序。" class="headerlink" title="6.下面程序输入一字符串，并将其中的大写字母改变成小写字母，完成程序。"></a>6.下面程序输入一字符串，并将其中的大写字母改变成小写字母，完成程序。</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span>                                 </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">char</span> s[<span class="number">120</span>];</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"Enter a string.\n"</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%s"</span>,s);              </span><br><span class="line">    <span class="keyword">while</span> (i&lt;=<span class="number">119</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (s[i]&gt;=<span class="string">'A'</span>&amp;&amp;s[i]&lt;=<span class="string">'Z'</span>) &#123;</span><br><span class="line">            s[i]=s[i]-<span class="string">'A'</span>+<span class="string">'a'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        i++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%s\n"</span>,s);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p>答案为：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span>                                  <span class="comment">//因为是填空题，所以只进行了一组测试</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">char</span> s[<span class="number">120</span>];</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"Enter a string.\n"</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%[^\n]%*c"</span>,s);              <span class="comment">//scanf函数获取含空格字符串不能使用%s,因此这里改为了%[^\n]%*c</span></span><br><span class="line">    <span class="keyword">while</span> (i&lt;=<span class="number">119</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (s[i]&gt;=<span class="string">'A'</span>&amp;&amp;s[i]&lt;=<span class="string">'Z'</span>) &#123;</span><br><span class="line">            s[i]=s[i]-<span class="string">'A'</span>+<span class="string">'a'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        i++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%s\n"</span>,s);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*输出结果为：</span></span><br><span class="line"><span class="comment"> Enter a string.</span></span><br><span class="line"><span class="comment"> I LOVE pyhton!</span></span><br><span class="line"><span class="comment"> i  love pyhton!</span></span><br><span class="line"><span class="comment"> */</span></span><br></pre></td></tr></table></figure>

<h2 id="进阶"><a href="#进阶" class="headerlink" title="进阶"></a>进阶</h2><h3 id="1-设计并测试一个函数，其功能是输出输入行-长度-lt-1024-里所有的单词，并丢掉该行中其-他的字符。一个单词的定义是一串字符，其中不含空格、制表符和换行符等其它字符。例如，-输入行-1234word-12number-234-输出-word-number"><a href="#1-设计并测试一个函数，其功能是输出输入行-长度-lt-1024-里所有的单词，并丢掉该行中其-他的字符。一个单词的定义是一串字符，其中不含空格、制表符和换行符等其它字符。例如，-输入行-1234word-12number-234-输出-word-number" class="headerlink" title="1.设计并测试一个函数，其功能是输出输入行(长度 &lt;=1024 )里所有的单词，并丢掉该行中其 他的字符。一个单词的定义是一串字符，其中不含空格、制表符和换行符等其它字符。例如， 输入行: 1234word?_12number +234 输出: word number"></a>1.设计并测试一个函数，其功能是输出输入行(长度 &lt;=1024 )里所有的单词，并丢掉该行中其 他的字符。一个单词的定义是一串字符，其中不含空格、制表符和换行符等其它字符。例如， 输入行: 1234word?_12number <em>+</em>234 输出: word number</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//进阶1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"string.h"</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">jj1</span><span class="params">(<span class="keyword">char</span> zifu[],<span class="keyword">int</span> i)</span></span>;                        <span class="comment">//声明函数</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">jj1</span><span class="params">(<span class="keyword">char</span> zifu[],<span class="keyword">int</span> i)</span></span>&#123;                        <span class="comment">//定义一个无返回类型且包含两个形参的函数</span></span><br><span class="line">    <span class="keyword">while</span> (i&lt;=<span class="built_in">strlen</span>(zifu)<span class="number">-1</span>) &#123;                     <span class="comment">//执行循环，控制次数，其中用strlen函数获取字符串的长度</span></span><br><span class="line">        <span class="keyword">if</span> ((zifu[i]&gt;=<span class="string">'A'</span>&amp;&amp;zifu[i]&lt;+<span class="string">'Z'</span>)||(zifu[i]&gt;=<span class="string">'a'</span>&amp;&amp;zifu[i]&lt;+<span class="string">'z'</span>)) &#123;<span class="comment">//使用if判断字符数组中的每一个字符是否在字母表中</span></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%c"</span>,zifu[i]);                                        <span class="comment">//如果是，则依次输出每个字符</span></span><br><span class="line">        &#125;</span><br><span class="line">       <span class="keyword">else</span>&#123;                                                             <span class="comment">//否则，输出一个空格，确保不同单词之间的间隔</span></span><br><span class="line">                  <span class="built_in">printf</span>(<span class="string">" "</span>);</span><br><span class="line">              &#125;</span><br><span class="line">        i++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n"</span>);                                                       <span class="comment">//函数末尾输出一个空格，确保完成一次函数后换行再执行下一次</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;                                                             <span class="comment">//在主函数中，执行自定义函数jj1</span></span><br><span class="line">    <span class="keyword">char</span> zifu1[]=&#123;<span class="string">"happy2019cqut*&amp;^%$world&#125;+)@™"</span>&#125;;</span><br><span class="line">    jj1(zifu1,<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">char</span> zifu2[]=&#123;<span class="string">"1234word?_12number _+_234"</span>&#125;;</span><br><span class="line">    jj1(zifu2,<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*输出结果为：</span></span><br><span class="line"><span class="comment"> happy    cqut     world</span></span><br><span class="line"><span class="comment">    word    number</span></span><br><span class="line"><span class="comment">Program ended with exit code: 0</span></span><br><span class="line"><span class="comment"> */</span></span><br></pre></td></tr></table></figure>

<h3 id="6-输入一个字符串，统计各字母出现的次数，并按字母出现的多少输出-先输出字母出现多的，-次数相同的按字母表顺序输出，不出现的字母不输出-。-例-输入-5b3a-4-hdeh5dh-输出-h-3-d-2-a-1-b-1-e-1"><a href="#6-输入一个字符串，统计各字母出现的次数，并按字母出现的多少输出-先输出字母出现多的，-次数相同的按字母表顺序输出，不出现的字母不输出-。-例-输入-5b3a-4-hdeh5dh-输出-h-3-d-2-a-1-b-1-e-1" class="headerlink" title="6.输入一个字符串，统计各字母出现的次数，并按字母出现的多少输出(先输出字母出现多的， 次数相同的按字母表顺序输出，不出现的字母不输出)。 例:输入: 5b3a+4-hdeh5dh? 输出: h 3 d 2 a 1 b 1 e 1"></a>6.输入一个字符串，统计各字母出现的次数，并按字母出现的多少输出(先输出字母出现多的， 次数相同的按字母表顺序输出，不出现的字母不输出)。 例:输入: 5b3a+4-hdeh5dh? 输出: h 3 d 2 a 1 b 1 e 1</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//进阶6                                     //本题没有进行多组测试，因为要计算每一个字母的个数m，这本身就是一种测试</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdio.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"string.h"</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> letter[<span class="number">26</span>];<span class="keyword">int</span> i=<span class="number">0</span>;<span class="keyword">int</span> j=<span class="number">0</span>;<span class="keyword">int</span> h=<span class="number">0</span>;;<span class="keyword">unsigned</span> <span class="keyword">long</span> m=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (h&lt;=<span class="number">25</span>) &#123;                         <span class="comment">//执行循环，初始化整型数组letter，使其每一个数s都为0</span></span><br><span class="line">        letter[h]=<span class="number">0</span>;</span><br><span class="line">        h++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">char</span> zifu[]=<span class="string">"hhhddabefgasifgagfaffgagcnmaohgvzf"</span>;<span class="comment">//初始化字符串</span></span><br><span class="line">    m=<span class="built_in">strlen</span>(zifu);</span><br><span class="line">    <span class="keyword">while</span> (i&lt;=<span class="built_in">strlen</span>(zifu)<span class="number">-1</span>) &#123;            <span class="comment">//执行循环，统计26个字母出现的次数</span></span><br><span class="line">        <span class="keyword">if</span> (zifu[i]==<span class="string">'A'</span>||zifu[i]==<span class="string">'a'</span>) &#123;</span><br><span class="line">            letter[<span class="number">0</span>]++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (zifu[i]==<span class="string">'B'</span>||zifu[i]==<span class="string">'b'</span>) &#123;</span><br><span class="line">            letter[<span class="number">1</span>]++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (zifu[i]==<span class="string">'C'</span>||zifu[i]==<span class="string">'c'</span>) &#123;</span><br><span class="line">            letter[<span class="number">2</span>]++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (zifu[i]==<span class="string">'D'</span>||zifu[i]==<span class="string">'d'</span>) &#123;</span><br><span class="line">            letter[<span class="number">3</span>]++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (zifu[i]==<span class="string">'E'</span>||zifu[i]==<span class="string">'e'</span>) &#123;</span><br><span class="line">            letter[<span class="number">4</span>]++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (zifu[i]==<span class="string">'F'</span>||zifu[i]==<span class="string">'f'</span>) &#123;</span><br><span class="line">            letter[<span class="number">5</span>]++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (zifu[i]==<span class="string">'G'</span>||zifu[i]==<span class="string">'g'</span>) &#123;</span><br><span class="line">            letter[<span class="number">6</span>]++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (zifu[i]==<span class="string">'H'</span>||zifu[i]==<span class="string">'h'</span>) &#123;</span><br><span class="line">            letter[<span class="number">7</span>]++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (zifu[i]==<span class="string">'I'</span>||zifu[i]==<span class="string">'i'</span>) &#123;</span><br><span class="line">            letter[<span class="number">8</span>]++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (zifu[i]==<span class="string">'J'</span>||zifu[i]==<span class="string">'j'</span>) &#123;</span><br><span class="line">            letter[<span class="number">9</span>]++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (zifu[i]==<span class="string">'K'</span>||zifu[i]==<span class="string">'k'</span>) &#123;</span><br><span class="line">            letter[<span class="number">10</span>]++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (zifu[i]==<span class="string">'L'</span>||zifu[i]==<span class="string">'l'</span>) &#123;</span><br><span class="line">            letter[<span class="number">11</span>]++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (zifu[i]==<span class="string">'M'</span>||zifu[i]==<span class="string">'m'</span>) &#123;</span><br><span class="line">            letter[<span class="number">12</span>]++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (zifu[i]==<span class="string">'N'</span>||zifu[i]==<span class="string">'n'</span>) &#123;</span><br><span class="line">            letter[<span class="number">13</span>]++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (zifu[i]==<span class="string">'O'</span>||zifu[i]==<span class="string">'o'</span>) &#123;</span><br><span class="line">            letter[<span class="number">14</span>]++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (zifu[i]==<span class="string">'P'</span>||zifu[i]==<span class="string">'p'</span>) &#123;</span><br><span class="line">            letter[<span class="number">15</span>]++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (zifu[i]==<span class="string">'Q'</span>||zifu[i]==<span class="string">'q'</span>) &#123;</span><br><span class="line">            letter[<span class="number">16</span>]++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (zifu[i]==<span class="string">'R'</span>||zifu[i]==<span class="string">'r'</span>) &#123;</span><br><span class="line">            letter[<span class="number">17</span>]++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (zifu[i]==<span class="string">'S'</span>||zifu[i]==<span class="string">'s'</span>) &#123;</span><br><span class="line">            letter[<span class="number">18</span>]++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (zifu[i]==<span class="string">'T'</span>||zifu[i]==<span class="string">'t'</span>) &#123;</span><br><span class="line">            letter[<span class="number">19</span>]++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (zifu[i]==<span class="string">'U'</span>||zifu[i]==<span class="string">'u'</span>) &#123;</span><br><span class="line">            letter[<span class="number">20</span>]++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (zifu[i]==<span class="string">'V'</span>||zifu[i]==<span class="string">'v'</span>) &#123;</span><br><span class="line">            letter[<span class="number">21</span>]++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (zifu[i]==<span class="string">'W'</span>||zifu[i]==<span class="string">'w'</span>) &#123;</span><br><span class="line">            letter[<span class="number">22</span>]++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (zifu[i]==<span class="string">'X'</span>||zifu[i]==<span class="string">'x'</span>) &#123;</span><br><span class="line">            letter[<span class="number">23</span>]++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (zifu[i]==<span class="string">'Y'</span>||zifu[i]==<span class="string">'y'</span>) &#123;</span><br><span class="line">            letter[<span class="number">24</span>]++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (zifu[i]==<span class="string">'Z'</span>||zifu[i]==<span class="string">'z'</span>) &#123;</span><br><span class="line">            letter[<span class="number">25</span>]++;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        i++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (m&gt;=<span class="number">1</span>) &#123;j=<span class="number">0</span>;          <span class="comment">//执行循环控制次数，以确保只输出字母个数超过1的</span></span><br><span class="line">        <span class="keyword">while</span> (j&lt;=<span class="number">25</span>) &#123;         <span class="comment">//执行熏黄，从高到低比较字母个数</span></span><br><span class="line">            <span class="keyword">if</span> (letter[j]==m) &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"%c:%d\n"</span>,j+<span class="number">97</span>,letter[j]);<span class="comment">//输出字母个数和</span></span><br><span class="line">            &#125;</span><br><span class="line">            j++;</span><br><span class="line">        &#125;</span><br><span class="line">        m=m<span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*运行结果为：:6</span></span><br><span class="line"><span class="comment">f:6</span></span><br><span class="line"><span class="comment">g:6</span></span><br><span class="line"><span class="comment">h:4</span></span><br><span class="line"><span class="comment">d:2</span></span><br><span class="line"><span class="comment">b:1</span></span><br><span class="line"><span class="comment">c:1</span></span><br><span class="line"><span class="comment">e:1</span></span><br><span class="line"><span class="comment">i:1</span></span><br><span class="line"><span class="comment">m:1</span></span><br><span class="line"><span class="comment">n:1</span></span><br><span class="line"><span class="comment">o:1</span></span><br><span class="line"><span class="comment">s:1</span></span><br><span class="line"><span class="comment">v:1</span></span><br><span class="line"><span class="comment">z:1</span></span><br><span class="line"><span class="comment">Program ended with exit code: 0*/</span></span><br></pre></td></tr></table></figure>





<h3 id="7-有一篇文章，共有-3-行文字，每行有80个字符。要求分别统计出其中英文大写字母、小写字母、-数字、空格以及其它字符的个数。"><a href="#7-有一篇文章，共有-3-行文字，每行有80个字符。要求分别统计出其中英文大写字母、小写字母、-数字、空格以及其它字符的个数。" class="headerlink" title="7. 有一篇文章，共有 3 行文字，每行有80个字符。要求分别统计出其中英文大写字母、小写字母、 数字、空格以及其它字符的个数。"></a>7. 有一篇文章，共有 3 行文字，每行有80个字符。要求分别统计出其中英文大写字母、小写字母、 数字、空格以及其它字符的个数。</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;                  //Name:雷博闻 Student ID：11923040207</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"string.h"</span>                 <span class="comment">//进阶7</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> zifu[<span class="number">3</span>][<span class="number">80</span>]=&#123;                                                                      <span class="comment">//c定义一个多维字符数组并初始化</span></span><br><span class="line">        <span class="string">"Its name might sound a little plain, but the grey-headed albatross is the most e"</span>,</span><br><span class="line">        <span class="string">"Not only a majestic bird, the grey-headed albatross is a literal a world recoreq"</span>,</span><br><span class="line">        <span class="string">"In 2003, The Guinness Book of Records gave them the title of world’s fastest h"</span></span><br><span class="line">                        &#125;;</span><br><span class="line">            <span class="keyword">int</span> i=<span class="number">0</span>,j=<span class="number">0</span>,upper=<span class="number">0</span>,lower=<span class="number">0</span>,numbers=<span class="number">0</span>,others=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (i&lt;=<span class="number">2</span>) &#123;j=<span class="number">0</span>;                                                                      <span class="comment">//外循环，控制行数。j=0是为了重新初始化k列数</span></span><br><span class="line">        <span class="keyword">while</span> (j&lt;=<span class="number">79</span>) &#123;                                                                     <span class="comment">//内循环，控制列数</span></span><br><span class="line">            <span class="keyword">if</span>((zifu[i][j]&gt;=<span class="string">'A'</span>)&amp;&amp;(zifu[i][j]&lt;=<span class="string">'Z'</span>))&#123;                                       <span class="comment">//判断该字符是否是大写字母，是则upper+1，不是则进行下一判断</span></span><br><span class="line">                upper++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> ((zifu[i][j]&gt;=<span class="string">'a'</span>)&amp;&amp;(zifu[i][j]&lt;=<span class="string">'z'</span>))&#123;                                 <span class="comment">//判断该字符是否是小写字母，是则lower+1，不是则进行下一判断</span></span><br><span class="line">                lower++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> ((zifu[i][j]&gt;=<span class="string">'0'</span>)&amp;&amp;(zifu[i][j]&lt;=<span class="string">'9'</span>))&#123;                                 <span class="comment">//判断该字符是否是数字，是则numbers+1，不是则进行下一判断</span></span><br><span class="line">                numbers++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                others++;</span><br><span class="line">                <span class="comment">//都不满足，则others+1</span></span><br><span class="line">            &#125;</span><br><span class="line">            j++;</span><br><span class="line">        &#125;</span><br><span class="line">        i++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"大写字母的个数是：%d\n小写字母的个数是：%d\n数字的个数是在：%d\n其他字符的个数是：%d\n"</span>,upper,lower,numbers,others);</span><br><span class="line">    <span class="comment">//分别输出upper，lower，numbers和others的值</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,upper+lower+numbers+others);<span class="comment">//输出upper，lower，numbers和others值的综合，总和为240，则程序正确</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*输出结果：</span></span><br><span class="line"><span class="comment"> 大写字母的个数是：7</span></span><br><span class="line"><span class="comment"> 小写字母的个数是：180</span></span><br><span class="line"><span class="comment"> 数字的个数是在：4</span></span><br><span class="line"><span class="comment"> 其他字符的个数是：49</span></span><br><span class="line"><span class="comment"> 240</span></span><br><span class="line"><span class="comment"> Program ended with exit code: 0*/</span></span><br></pre></td></tr></table></figure>





]]></content>
      <categories>
        <category>C语言作业</category>
      </categories>
  </entry>
  <entry>
    <title>C/gets,puts函数</title>
    <url>/2019/11/28/C/gets,puts%E5%87%BD%E6%95%B0/</url>
    <content><![CDATA[<h1 id="gets-puts-函数"><a href="#gets-puts-函数" class="headerlink" title="gets(),puts()函数"></a>gets(),puts()函数</h1><p>使用gets(),puts()函数实现字符串的输入和输出</p>
<h3 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">`\<span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdio.h"</span>`</span></span><br><span class="line"></span><br><span class="line">`\<span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;`</span></span></span><br><span class="line"></span><br><span class="line">`**int** main()`</span><br><span class="line"></span><br><span class="line">`&#123;  **<span class="keyword">char</span>** you[]=&#123;<span class="string">"12345"</span>&#125;;`</span><br><span class="line"></span><br><span class="line">  `**<span class="keyword">char</span>** password[<span class="number">100</span>]=&#123;&#125;;`</span><br><span class="line"></span><br><span class="line">  `gets(password);`</span><br><span class="line"></span><br><span class="line">​    `**<span class="keyword">if</span>** (<span class="built_in">strcmp</span>(password,you)==<span class="number">0</span>) &#123;`</span><br><span class="line"></span><br><span class="line">​      `<span class="built_in">printf</span>(<span class="string">"Welcome!"</span>);`</span><br><span class="line"></span><br><span class="line">  `&#125;`</span><br><span class="line"></span><br><span class="line">​    `**<span class="keyword">else</span>**&#123;`</span><br><span class="line"></span><br><span class="line">​      `<span class="built_in">printf</span>(<span class="string">"You are not right"</span>);`</span><br><span class="line"></span><br><span class="line">​    `&#125;`</span><br><span class="line"></span><br><span class="line">`&#125;</span><br></pre></td></tr></table></figure>





]]></content>
      <categories>
        <category>C语言</category>
      </categories>
  </entry>
  <entry>
    <title>C/操作字符串的函数</title>
    <url>/2019/11/28/C/%E6%93%8D%E4%BD%9C%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E5%87%BD%E6%95%B0/</url>
    <content><![CDATA[<h1 id="操作字符串的函数"><a href="#操作字符串的函数" class="headerlink" title="操作字符串的函数"></a>操作字符串的函数</h1><h2 id="strcpy"><a href="#strcpy" class="headerlink" title="strcpy()"></a>strcpy()</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">char</span> a[<span class="number">100</span>]=<span class="string">"hello"</span>;</span><br><span class="line"><span class="keyword">char</span> b[<span class="number">100</span>];</span><br><span class="line"><span class="built_in">strcpy</span>(b,a);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"b:%s\n"</span>,b);&#125;</span><br></pre></td></tr></table></figure>

<h2 id="strcat"><a href="#strcat" class="headerlink" title="strcat()"></a>strcat()</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="comment">//strcat()将后面的字符串接到前面的字符串后面</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">char</span> a[<span class="number">100</span>]=<span class="string">"I love you,"</span>;</span><br><span class="line"><span class="keyword">char</span> b[<span class="number">100</span>]=<span class="string">"999!"</span>;</span><br><span class="line"><span class="built_in">strcat</span>(a,b);<span class="comment">//注意这里是连接了b字符串到a字符串</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"a:%s\n"</span>,a);&#125;<span class="comment">//输出的a字符串即是加工后的字符串</span></span><br></pre></td></tr></table></figure>

<p><em>输出结果是:</em>  <strong>I love you,999</strong></p>
<h2 id="srtlen"><a href="#srtlen" class="headerlink" title="srtlen()"></a>srtlen()</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="comment">//strlen()用于获取字符串的长度</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">char</span> a[<span class="number">100</span>]=<span class="string">"I love you,"</span>;</span><br><span class="line"><span class="keyword">char</span> b[<span class="number">100</span>]=<span class="string">"999!"</span>;</span><br><span class="line"><span class="keyword">int</span> len1=<span class="number">0</span>,len2=<span class="number">0</span>;</span><br><span class="line">len1=<span class="built_in">strlen</span>(a);</span><br><span class="line">len2=<span class="built_in">strlen</span>(b);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"a字符串的长度是：%d,b字符串的长度是:%d\n"</span>,len1,len2);&#125;</span><br><span class="line"><span class="comment">//输出两个字符串的长度</span></span><br><span class="line"><span class="comment">//输出结果分别是：a字符串的长度是：11,b字符串的长度是:4</span></span><br></pre></td></tr></table></figure>







]]></content>
      <categories>
        <category>C语言</category>
      </categories>
  </entry>
  <entry>
    <title>Python/Python列表操作</title>
    <url>/2019/11/28/Python/Python%E5%88%97%E8%A1%A8%E6%93%8D%E4%BD%9C/</url>
    <content><![CDATA[<h1 id="list操作"><a href="#list操作" class="headerlink" title="list操作"></a>list操作</h1><h2 id="索引及负数索引"><a href="#索引及负数索引" class="headerlink" title="索引及负数索引"></a>索引及负数索引</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">a = [<span class="string">'i'</span>,<span class="string">'love'</span>,<span class="string">'you'</span>]</span><br><span class="line"><span class="comment">#执行索引输出列表</span></span><br><span class="line">print(a[<span class="number">1</span>])</span><br><span class="line">print(a[<span class="number">0</span>:<span class="number">3</span>])</span><br><span class="line">print(a[<span class="number">-1</span>])</span><br><span class="line">print(a[<span class="number">1</span>:<span class="number">-1</span>])</span><br><span class="line"><span class="comment">#输出结果为：</span></span><br><span class="line"><span class="string">'''love</span></span><br><span class="line"><span class="string">['i', 'love', 'you']</span></span><br><span class="line"><span class="string">you</span></span><br><span class="line"><span class="string">['love']'''</span></span><br></pre></td></tr></table></figure>

<h2 id="元素的增加"><a href="#元素的增加" class="headerlink" title="元素的增加"></a>元素的增加</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">a = [<span class="string">'i'</span>,<span class="string">'love'</span>,<span class="string">'you'</span>]</span><br><span class="line">a.append(<span class="string">"999"</span>)<span class="comment">#尾部➕1</span></span><br><span class="line">print(a[:])</span><br><span class="line">a.insert(<span class="number">4</span>,<span class="string">'very much!'</span>)<span class="comment">#指定位置➕</span></span><br><span class="line">print(a[:])</span><br><span class="line">a.extend([<span class="string">"do"</span>,<span class="string">'you know'</span>])<span class="comment">#尾部➕2***注意extend的使用格式***</span></span><br><span class="line">print(a[:])</span><br><span class="line"><span class="comment">#输出结果为：</span></span><br><span class="line"><span class="string">'''['i', 'love', 'you', '999']</span></span><br><span class="line"><span class="string">['i', 'love', 'you', '999', 'very much!']</span></span><br><span class="line"><span class="string">['i', 'love', 'you', '999', 'very much!', 'do', 'you know']</span></span><br><span class="line"><span class="string">'''</span></span><br></pre></td></tr></table></figure>

<h2 id="元素的搜索"><a href="#元素的搜索" class="headerlink" title="元素的搜索"></a>元素的搜索</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#使用index对列表中的元素进行搜索，返回的是搜索元素在列表中的序号</span></span><br><span class="line">a = [<span class="string">'i'</span>,<span class="string">'love'</span>,<span class="string">'you'</span>]</span><br><span class="line">print(a.index(<span class="string">'you'</span>))</span><br><span class="line"><span class="comment">#输出结果是：</span></span><br><span class="line"><span class="string">'''2</span></span><br><span class="line"><span class="string">'''</span></span><br></pre></td></tr></table></figure>

<h2 id="元素的删除"><a href="#元素的删除" class="headerlink" title="元素的删除"></a>元素的删除</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">a = [<span class="string">'i'</span>,<span class="string">'love'</span>,<span class="string">'you'</span>]</span><br><span class="line"><span class="comment">#remove方法</span></span><br><span class="line">a.remove(<span class="string">'you'</span>)<span class="comment">#如果列表中有多个"you"，则会删除第一个</span></span><br><span class="line">print(a)</span><br><span class="line"><span class="comment">#pop方法</span></span><br><span class="line">a = [<span class="string">'i'</span>,<span class="string">'love'</span>,<span class="string">'you'</span>]</span><br><span class="line">print(a.pop())<span class="comment">#执行pop方法的同时输出会输出被删掉的最后一个元素</span></span><br><span class="line">print(a)<span class="comment">#再次输出原有列表发现列表已经改变</span></span><br><span class="line"><span class="comment">#输出结果为：</span></span><br><span class="line"><span class="string">'''['i', 'love']</span></span><br><span class="line"><span class="string">you</span></span><br><span class="line"><span class="string">['i', 'love']'''</span></span><br></pre></td></tr></table></figure>

<h2 id="列表的运算"><a href="#列表的运算" class="headerlink" title="列表的运算"></a>列表的运算</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#注意只支持+和*</span></span><br><span class="line">a = [<span class="string">'i'</span>,<span class="string">'love'</span>,<span class="string">'you'</span>]</span><br><span class="line">b =[<span class="string">'you'</span>,<span class="string">'!'</span>]</span><br><span class="line">c=[<span class="number">2</span>,<span class="number">2</span>,<span class="number">2</span>]</span><br><span class="line">d = [<span class="string">'you'</span>]</span><br><span class="line">print(a+b)</span><br><span class="line">print(c*<span class="number">2</span>)</span><br><span class="line"><span class="comment">#输出结果为：</span></span><br><span class="line"><span class="string">'''['i', 'love', 'you', 'you', '!']</span></span><br><span class="line"><span class="string">[2, 2, 2, 2, 2, 2]'''</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Python</category>
      </categories>
  </entry>
  <entry>
    <title>Python/Python时间与日期</title>
    <url>/2019/11/28/Python/Python%E6%97%B6%E9%97%B4%E4%B8%8E%E6%97%A5%E6%9C%9F/</url>
    <content><![CDATA[<h1 id="Python时间与日期"><a href="#Python时间与日期" class="headerlink" title="Python时间与日期"></a>Python时间与日期</h1><h2 id="time-模块"><a href="#time-模块" class="headerlink" title="time()模块"></a>time()模块</h2><h3 id="时间戳"><a href="#时间戳" class="headerlink" title="时间戳"></a>时间戳</h3><blockquote>
<p>时间间隔是以秒为单位的浮点小数。</p>
</blockquote>
<blockquote>
<p>每个时间戳都以自从1970年1月1日午夜（历元）经过了多长时间来表示。</p>
</blockquote>
<p><strong>输出当前时间戳</strong></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> time <span class="keyword">as</span> ti</span><br><span class="line">now = ti.time()</span><br><span class="line">print(now)</span><br><span class="line"><span class="comment">#当前时间2019/11/28 23:55</span></span><br><span class="line"><span class="comment">#输出结果为</span></span><br><span class="line"><span class="comment">#1574956554.693932</span></span><br></pre></td></tr></table></figure>

<h3 id="获取当前时间"><a href="#获取当前时间" class="headerlink" title="获取当前时间"></a>获取当前时间</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> time <span class="keyword">as</span> ti<span class="comment">#导入time模块</span></span><br><span class="line">Localtime=ti.localtime(ti.time())<span class="comment">#将当前时间戳的浮点数传递给localtime函数</span></span><br><span class="line">print(Localtime)<span class="comment">#输出当前时间</span></span><br><span class="line"><span class="comment">#输出结果：</span></span><br><span class="line"><span class="comment">#time.struct_time(tm_year=2019, tm_mon=11, tm_mday=29, tm_hour=0, tm_min=33, tm_sec=7, tm_wday=4, tm_yday=333, tm_isdst=0)</span></span><br><span class="line"><span class="comment">#当前时间是以时间元组方式输出的，下面会讲到时间元组</span></span><br></pre></td></tr></table></figure>

<h4 id="时间元组"><a href="#时间元组" class="headerlink" title="时间元组"></a>时间元组</h4><table>
<thead>
<tr>
<th>序号</th>
<th>属性</th>
<th>值</th>
</tr>
</thead>
<tbody><tr>
<td>0</td>
<td>tm_year</td>
<td>2008</td>
</tr>
<tr>
<td>1</td>
<td>tm_mon</td>
<td>1到12</td>
</tr>
<tr>
<td>2</td>
<td>tm_mday</td>
<td>1到31</td>
</tr>
<tr>
<td>3</td>
<td>tm_hour</td>
<td>0到23</td>
</tr>
<tr>
<td>4</td>
<td>tm_min</td>
<td>0到59</td>
</tr>
<tr>
<td>5</td>
<td>tm_sec</td>
<td>0到61</td>
</tr>
<tr>
<td>6</td>
<td>tm_wday</td>
<td>0到6(周一是0)</td>
</tr>
<tr>
<td>7</td>
<td>tm_yday</td>
<td>1到366</td>
</tr>
<tr>
<td>8</td>
<td>tm_isdst</td>
<td>-1,0,1,-1是决定是否为夏令时的旗帜</td>
</tr>
</tbody></table>
<h3 id="获取格式化时间"><a href="#获取格式化时间" class="headerlink" title="获取格式化时间"></a>获取格式化时间</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#使用了asctime()函数</span></span><br><span class="line"><span class="keyword">import</span> time <span class="keyword">as</span> ti</span><br><span class="line">now=ti.asctime(ti.localtime(ti.time()))</span><br><span class="line">print(now)</span><br><span class="line"><span class="comment">#输出结果是：</span></span><br><span class="line"><span class="comment"># Fri Nov 29 00:37:59 2019</span></span><br></pre></td></tr></table></figure>



<h2 id="Calender-模块"><a href="#Calender-模块" class="headerlink" title="Calender()模块"></a>Calender()模块</h2><h3 id="获取某月月历"><a href="#获取某月月历" class="headerlink" title="获取某月月历"></a>获取某月月历</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> calendar <span class="keyword">as</span> ca</span><br><span class="line"><span class="comment">#使用了calenda模块</span></span><br><span class="line">yue = ca.month(<span class="number">2019</span>,<span class="number">11</span>)<span class="comment">#前面是年份，后面是月份</span></span><br><span class="line">print(<span class="string">"以下是2019年11月的月历"</span>)</span><br><span class="line">print(yue)</span><br><span class="line"><span class="comment">#输出结果是：</span></span><br><span class="line"><span class="string">'''以下是2019年11月的月历</span></span><br><span class="line"><span class="string">   November 2019</span></span><br><span class="line"><span class="string">Mo Tu We Th Fr Sa Su</span></span><br><span class="line"><span class="string">             1  2  3</span></span><br><span class="line"><span class="string"> 4  5  6  7  8  9 10</span></span><br><span class="line"><span class="string">11 12 13 14 15 16 17</span></span><br><span class="line"><span class="string">18 19 20 21 22 23 24</span></span><br><span class="line"><span class="string">25 26 27 28 29 30</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Process finished with exit code 0'''</span></span><br></pre></td></tr></table></figure>



<p>time模块具体配置请参考Python官方文档。</p>
]]></content>
      <categories>
        <category>Python</category>
      </categories>
  </entry>
  <entry>
    <title>第五章 再见了刘校长</title>
    <url>/2019/11/28/%E5%B0%8F%E8%AF%B4%EF%BC%88%E4%B8%80%EF%BC%89/%E7%AC%AC%E4%BA%94%E7%AB%A0/</url>
    <content><![CDATA[<p>第五章 见了刘校长</p>
<p>中国人的现状就是看热闹不嫌人多，可是人人又都是十分知趣的。看热闹看到一定程度之后，人人都知道要逃之夭夭，免得被当事人记恨，热闹就不再热闹了。所以当高二三班的同学们看到事情都已经这样了，所有人又一哄而散了，只剩下美丽清纯的班花夏楚，浑身淋湿的班级一霸赵虎，还有就是那个废物陈涵。哦，不，废物如今不一定是废物了，至少不能再明目张胆地叫他废物。</p>
<p>班花此时一脸震惊地看着陈涵，慢慢地走了前去，面对着白发飘逸的陈涵，问道：“刚刚是你做的吗？”</p>
<p>陈涵又是一脸花痴相，不过在那种场景下，又有谁人能够不犯花痴呢？再加上面前的夏楚真的像极了紫涵，陈涵不过是想起了前世的爱人罢了，想起了那个为了自己能过活下去连性命都能够舍弃的姑娘。</p>
<p>在剑仙的一生中，从来都不缺财富，也不缺女人。潇洒英俊的剑仙对女人似乎有着一种天然的吸引力，无论是古时天子的公主，还是名满天下的舞妓，很少有人能够抵挡住剑仙的诱惑。</p>
<p>但是她们大多数都只是剑仙的过客，来了便待在身旁，走了也从不带走，好像女人就是钱财，可是剑仙两袖清风。</p>
<p>可是紫涵不一样，她是剑仙十万余年的生命中唯一深爱过的，并下定决心要用生命去守护的女人。只可惜前世天人五劫到来时，剑仙异常虚弱，恰好他的有些亲传弟子也想获得长生不老，就设局想要杀掉剑仙，却阴差阳错杀掉了剑仙最珍视的女人——紫涵。</p>
<p>这始终是陈涵的一个心结。无人能解，只能自己默默承受。可是当陈涵遇见了眼前的女孩夏楚时，他那颗平静了许久的心瞬时炽热了起来，他甚至真的萌发出了想要照顾她一辈子的想法。不过陈涵忍住了，他决定看看情况再说，另一方面也是为了保护眼前的女孩。</p>
<p>“我哪有那么厉害啊，刚刚他们都说了这是违反了科学实际的奇迹，又怎么可能是我做的。不过要是你认为是我就是我吧。”陈涵故作平静的回答。</p>
<p>“我相信你。”夏梦红着脸说完，然后害羞地一路小跑走进了教室。</p>
<p>陈涵心里是一阵莫名其妙啊：这小妮子，我这么对你，你还如此对我。你真是什么眼光啊。</p>
<p>班花都走了，陈涵也没有必要继续留在这里和落汤鸡赵虎为伴。他慢悠悠地往校长办公室走去，好像一切都没发生似的。</p>
<p>赵虎心里此刻是有着一万个草泥马，“真会装逼，是你做的，你以为你是神仙吗？一时间赵虎也变得更加气愤了，被人侮辱了还不够，侮辱过后还被人直接无视，这种事搁谁身上谁都忍不下去。所以赵虎肯定也咽不下这口气，只见他满脸狡诈地进入了教室，计划着下一个让陈涵颜面扫地的办法。</p>
<p>此刻校长办公室里，一个年轻貌美的女老师正在为校长服务，而校长满脸享受，一看就知道他们正在进行着什么不能让人知道的交易。</p>
<p>“老刘，上次你答应人家要帮我当上团委书记的，怎么现在还没有兑现，你个老色鬼，你是不是反悔了啊。”女老师声音嗲声嗲气，让人听了直想吐。</p>
<p>“哪能呢，我既然答应你了，就一定会做到的啊不是。你怎么能怀疑我的能力呢？”刘校长为了准确传达自己的意思，还故意将“能力”二字说得很重。他一只手摸着女老师的胸口，一手摸着女老师的翘臀。整个场面简直是不堪入目。</p>
<p>突然一阵巨响，校长办公室的门从外面被人踢开了，把里面正在进行不正常交易的二人吓得不轻。</p>
<p>“谁啊，混蛋，进我的办公室居然敢不敲门。”刘校长咒骂道。</p>
<p>他们一边骂着还一边收拾起衣服，可是再怎么掩饰，满屋子里面弥漫着的特殊的异味也能让人知道里面到底是在干什么勾当。</p>
<p>陈涵慢慢走了进来。</p>
<p>见到了陈涵，年轻女老师为之一惊，因为陈涵的满头白发真的是太惹眼了，简直不应该出现在高中生这个年纪呀。不过的确是很酷，酷得连女老师也忍不住多看了几眼。只不过她马上就反应了过来。</p>
<p>“你不是高二三班那个废物陈涵吗？怎么，你还嫌你的名气不够大，想私闯校长办公室涨涨名气？”年轻女老师呵斥道。</p>
<p>“你知道我？”陈涵眼神凛冽，看着似乎要杀人。不过他是看着的校长，话确实对女老师说的。</p>
<p>“你个废物那么出名，全校还有谁不知道呢。不过这不是你能来的地方，快点给我滚出去。”女老师继续逼迫。</p>
<p>“你确定要我滚？”陈涵这次是对校长说的。</p>
<p>看着眼前这个熟悉的面孔，刘校长早就失神了，因为他不相信，一个人能够活这么多久。不然他也不会纵容陌生的学生对自己“心爱”的女老师这么出言不逊。但事实就摆在眼前，容不得他不去相信。</p>
<p>或许是对眼前的人过于惶恐，又或许是不愿去相信如今摆在眼前的事实。刘校长一直愣着，完全没有注意到现在究竟是个什么状况。</p>
<p>“当然，不是你滚，难道还是我滚吗？快滚，不然我就叫保安了。”女老师看到校长默不作声，还以为是陈涵也惹怒了校长，而校长已经默认了自己的行为。</p>
<p>一会刘校长才反应了过来，转手就给了女老师一个响亮的耳光，“滚！”</p>
<p>“你，你居然叫我滚，你个忘恩负义的家伙。”女老师感到一阵莫名其妙。</p>
<p>“话我不会再说第二遍。”刘校长没有向女老师解释原因，而是继续呵斥道。毕竟原因一旦解释起来就会很复杂了，不光是解释起来头疼费力，更关键的是事实太过骇人，想必说出来也不会有人相信。</p>
<p>女老师哭了，哭着走向了办公室门口，一边哭，还一边暗骂着男人都是用下半身思考的动物。</p>
<p>当女老师刚出了办公室门的时候，刘校长又发话了，弄得女老师还以为校长刚刚是说错了，现在要反悔，不让她离开而是让那个废物陈涵滚出去。<br>然而，校长却说：“出去之后，把门带上。另外，今天的事情，一个字也不要向外人说起，否则，你也不要再待在学校了。”</p>
<p>女老师听完，哭得更厉害了，感觉自己受到了巨大的欺骗似的，即被人骗了色，自己想要的也没有拿到，反倒是自己的铁饭碗都要弄丢了，心里不觉得对陈涵更加厌恶了起来，但同样也很是困惑，不就是一个连校长都不知道的废物陈涵吗？为什么校长的态度转变得也如此之快。</p>
<p>女老师就这样走了，带着她的委屈和疑惑离开了。可是校长办公室里的故事才刚刚上演。</p>
<p>办公室门关上以后，刘校长扑通一声直接跪在了陈涵面前，虽然很疼，可是也不敢吱一声。</p>
<p>“先生，您还活着。”刘校长胆怯地问道。</p>
<p>“怎么，你还巴不信我死了。”</p>
<p>“不不不，我怎么敢。我只是许久没见到先生了，甚是想念而已。”</p>
<p>“几十年没见，拍马屁的功夫你倒是精进了不少。”</p>
<p>“要是先生喜欢听，我以后天天给先生拍马屁。”</p>
<p>“你少给我贫。说吧，刚刚和那个女老师在干什么呢。”</p>
<p>“这个……，我那个……”</p>
<p>“呵。你也别说了。你在干什么我还能不知道。不过既然是你情我愿的交易，我倒是难得管。不过，这几十年，你应该没有干什么违背良心的事吧。”</p>
<p>“当然没有先生，您的教诲我可是都铭记于心呢。绝对没有干违背良心的龌蹉事。请您放心。”</p>
<p>“那就好。现在我在高二三班上学。知道该怎么做了吗？”</p>
<p>“知道知道。我定不会让人知道您的真实身份，不过……”</p>
<p>“不过什么？”</p>
<p>“先生既然一直在高二三班，为什么现在才来找我？”</p>
<p>“哈。你现在不光学会了拍马屁，胆子也大了不少。不该问的别问，做好你的分内之事就行了。”</p>
<p>“好的好的，先生，我知道了。”</p>
<p>“那行，我就先走了。记住你到底该怎么做，别一天到晚只知道男欢女爱之事。都老大不小了还一天私生活糜烂，刘校长。”</p>
<p>听到陈涵还喊他校长，刘校长害怕得出了一声冷汗，只好一直跪着，不再说一句话了。</p>
<p>陈涵见了昔日的门徒之后，也就潇洒地离开了校长办公室，可是余留下来的震撼却让刘校长平静了几天才冷静下来。</p>
<p>“先生不愧是先生，还越活越年轻啊。先生。”之后的几天，刘校长的嘴里不时就哼着这句话，似乎是那件事给留下了很深刻的阴影。</p>
<p>陈涵离开办公室后，就去了教室。一路上听到的都是同学们的谈论，说什么陈涵私闯校长办公室，被校长当场抓住，然后命令陈涵今后再也不能去教师办公区域，如果去了就直接勒令退学。毕竟高中不是义务教育，哪个高中没有因为犯事而被开除的学生呢。</p>
<p>不过陈涵听到这些议论以后，反倒是轻松了不少，“嗯，看来小刘的办事效率还是挺高的，这样一传，既轻易地掩饰了他身为剑仙而又长生不老的真相，又解除了今后会因为犯事而被班主任叫到办公室的隐患，不错，不错，真不错啊”</p>
]]></content>
      <categories>
        <category>小说（一）</category>
      </categories>
  </entry>
  <entry>
    <title>第四章 上学第一天</title>
    <url>/2019/11/27/%E5%B0%8F%E8%AF%B4%EF%BC%88%E4%B8%80%EF%BC%89/%E7%AC%AC%E5%9B%9B%E7%AB%A0/</url>
    <content><![CDATA[<p>第四章 上学第一天</p>
<p>陈涵就这样面无表情地走进了校园，却让围观的人一度以为他是因为真的是个废物，即使是面对着这样不堪入耳的侮辱仍然不敢反驳，所以只好灰溜溜地溜进学校。可又有谁会知道，此时的陈涵已经不再是曾经那个愣头青了，因为他们根本就不是同一个人。而陈涵现在的表情和做法仅仅是因为他不在乎而已。那些趁着机会想嘲笑和侮辱陈涵的人想来也是无比幸运，因为至少他们还没有触碰到白发少年的底线，否则，任凭如何不在乎，陈涵也会将那些不知天高地厚的人碎尸万段。</p>
<p>看到这里，或许你会以为这是一句玩笑话。其实不然，剑仙的名号岂是空穴来风。只不过，此世的剑仙有着一个更为重要的任务，即是探寻自己的长身之谜，再加上已隐居多年，剑仙的暴脾气也收敛了很多。</p>
<p>就这样，陈涵一路走着，一路吸引了越来越多的围观群众。他们之中几乎所有人都是持着一种鄙夷和不屑的眼神，陈涵也装作没看见，其实只是见怪不怪而已。</p>
<p>当陈涵来到了高二三班的教室门口时，想不到整个班上的人都出来了。他们分别站在教室外走廊两边。这样的场景让陈涵感到丝丝惊喜，竟以为他们是真的出来迎接这位许久不见的同班同学，顿时还浮想联翩起来。</p>
<p>他又想起了初识项籍的时候。<br>那时候项羽在得知剑仙先生要亲自来看望他，便命令手下的将士整齐地站在军帐外，诚恳而真诚地等待先生的到来。而在白发少年来了以后，项羽亲自迎接，还奏响迎接座上宾时专用的音乐，一切都是最最隆重而尊贵的礼仪。</p>
<p>也正是项羽的诚恳待人打动了白发少年，于是剑仙也真心对待他。不光教会了项羽陈氏剑法，还帮助他建立了盛极一时的项羽政权。</p>
<p>只可是如今已经物是人非。项羽自刎而死，项羽政权被刘邦击败，而刘邦的汉朝也早已被唐朝推翻。几世辗转，终于迎来了共产主义的世界。</p>
<p>“哈哈哈，你们看他那样子，还真以为我们是来迎接他的，他以为自己搞了个李白的cosplay，自己就真的成李白了！”</p>
<p>陈涵正在追溯着往昔，却被一阵阵的笑声打断。这时他才醒悟，哪里是欢迎同学，只是换了个法子嘲讽而已。</p>
<p>此时陈涵抬起了头，看见的是同学们几个几个地聚在一起，一边用手指着他自己，嘴里不时发出粗鲁的咒骂和不懈的嘲讽。</p>
<p>但在人群中间，却有一个长相清纯的女孩子静默不语，只是呆呆地望着满头白发的陈涵。她既没有和同学一起嘲讽陈涵，眼中的神色和脸上表情也看不到一丁点的鄙夷和不屑，从中反而散发出的是一种真诚的关心。</p>
<p>“这还真的是一个与众不同的小姑娘，不过为什么她长得那么像紫涵呢”陈涵感到不解。</p>
<p>要知道，紫涵是陈涵前一世心爱的女人，却因为在陈涵百年一度的天人五劫时为了救陈涵性命而被陈涵自己的亲传弟子无情地杀害。</p>
<p>这件事一直是陈涵最记恨的事情，在那件事过后，陈涵也发誓，一定要让那些忘恩负义之辈付出惨痛的代价。因为，在剑仙的眼中，背叛就是底线之一，绝对不可以触碰，否则就算是天王老子，他也一定会让他坠入地狱。</p>
<p>而白发少年重返凡世时选择陈涵这个名字，原因之一就是因为紫涵的缘故。</p>
<p>不过为何面前的这个姑娘和紫涵如此相像，她又与紫涵究竟有何种关联呢？</p>
<p>当然陈涵想不明白，刚刚重返凡世，自己的一切力量都还没有恢复，又因为紫涵与自己千丝万缕的关系，陈涵即使是百年剑仙也是占卜不了自己的事情的。</p>
<p>恍惚中，陈涵看见面前的姑娘真的就是紫涵，她正用含情脉脉的眼神望着他，好像是在诉说着千年的思念。</p>
<p>但陈涵马上也就反应过来，她只是极像极像而已。</p>
<p>面前的女孩也正一直看着陈涵，突然间，她张开了她美丽的朱唇，用婉转的声音说道：“你还好吗？欢迎你回来。”</p>
<p>顿时，吵闹的人群也安静了下来，因为平时都缄默不语的班花夏楚居然向废物陈凡开口讲话了，一时间，人人都感到不可思议，但更多的还是嫉妒。</p>
<p>能和班花开口讲话是多么一件荣幸的事情，尤其这次还是班花主动的，这是多少人梦寐以求的啊。所以高二三班的同学们，望向陈涵的眼中除了以往的鄙夷外，现在更是多了一种无形的怒火，似乎这个世界上只要没有陈涵，班花就会是他们的了。</p>
<p>而眼见美女的姑娘对自己亲切的问候，陈涵也入迷了。停顿了几秒后，陈涵才稳定了自己的情绪，用一种以往的声音不紧不慢地回答到：“我很好，谢谢！”</p>
<p>看到这一幕，班上的男生们变得更加愤怒了，都认为陈涵的回答是对班花的忽视，亵渎了班花的美。以致于他们望向陈涵的眼睛变得更加凌厉了起来。</p>
<p>陈涵对此也是一阵无语。心想：我这样不就是为了你们着想吗？我要是不冷淡点，你们还不要把我杀了啊。</p>
<p>但是陈涵并没有这样说，因为既然用着陈涵的身份，就要满足他曾经对尊严的向往和期望。所以，陈涵对着那些很是愤怒的男生说：“有本事是你们自己找她说话去，对我凶有劲没劲。”</p>
<p>话已说完，原本以为会让男同学们冷静冷静，没想到却让他们更加闹腾了起来，这次，甚至是女生也都感到一阵不可思议。</p>
<p>“这还是那个废物陈涵吗？”<br>“对呀，他居然学会顶撞了。”<br>“我都快要不认识他了。”<br>同学们的议论声渐渐大了起来。不知情的人还以为是在进行一场高层次的学术辩论呢。</p>
<p>而那位班花眼看着失控的局面，脸上却慢慢浮现出了难得的笑容，还一脸深情地望着眼前的白发少年，“真的是你吗？陈涵。”班花心里也一阵困惑。</p>
<p>“陈涵，你好大的胆子。连班花你也敢调戏。”<br>这时候，从教室里冲出来一位气焰嚣张的学生，看起来穷凶极恶。更让人奇怪的是他的手里居然端着一盆冰水，也不知道是从哪里弄来的。</p>
<p>不过看众人的眼色就知道这一切都是他们商量好的，他们计划等著名的废物在教室外面被嘲讽得一无是处之后，由班上“德高望重”的“前辈”赵虎出马，让废物陈涵也尝尝“冰桶挑战”的厉害。</p>
<p>虽然现在的情况和计划的不太一样，但是他们依然想看看陈涵变成落汤鸡是什么样子。</p>
<p>此时班花的脸色却是不太好看，想必是因为班花为自己明明知情却没有提前告知陈涵而感到内疚。不过剑仙陈涵是何许人也，这样的雕虫小技又能对他有什么影响呢。而陈涵也瞬间知晓了班花失态的原因，于是他轻声对班花夏楚说：“没事，这不怪你。我能应付的。”</p>
<p>这样，班花阴沉的脸色才有所缓解，不过依然忧心忡忡的，担心陈涵会出什么问题。</p>
<p>看着废物陈涵居然和班花眉来眼去，赵虎再也沉不住气了，在一众同学的欢呼声中，他端着冰水从教室门口冲了出来，迅速来到了陈涵的身旁，将冰水往陈涵身上倒去，期待看到预计中陈涵成为落汤鸡的样子。</p>
<p>不过事情并没有像赵虎和其他同学预计的那样去发展。当冰水刚从盆子里倒出来的时候，冰水的确是往陈涵的头上飞去，不过当一大盆冰水都快要淋到陈涵头上时，所有冰水却突然反向，反而向赵虎飞去。</p>
<p>几秒钟之后，也的的确确出现了一只落汤鸡，不过那个人却不是大家以为的废物陈涵，反而是整件事情的始作俑者——赵虎本人。</p>
<p>看到头发还有全身都已经湿透身体还不断打抖的赵虎，众人都疑惑不解，因为刚刚的情况确实超出了科学能够解释的范畴。不过大家都没有疑惑很久，都齐刷刷笑了出来，毕竟只要有人出丑，是谁出丑不是一样看笑话。</p>
<p>这次连班花夏梦也笑了，笑得很是开心。</p>
<p>但越是这样，赵虎就越没面子。他一边哆嗦，还一边用手指着陈涵说：“你小子，给我等着，敢这样羞辱我，我定要你好看。”</p>
<p>“好啊。我叫陈涵，我随时奉陪到底。”</p>
<p>又是令人不敢置信的回答，以前的那个陈涵去哪了呢？这还是那个废物陈涵吗？此时，高二三班的所有同学心中都装着一个个的疑问无法解决。但是毫无疑问，那个毫无尊严、任人宰割的废物陈涵似乎真的不见了。</p>
]]></content>
      <categories>
        <category>小说（一）</category>
      </categories>
  </entry>
  <entry>
    <title>简单代码证明tensorflow安装且配置成功</title>
    <url>/2019/11/26/Tensorflow/tensorflow/</url>
    <content><![CDATA[<p>为了验证Tensorflow是否正确安装，我躺了很多的坑，因为下载了最新版本的tensorflow—<br>2.0，导致很多之前版本的方法都用不了，而网上那些代码大多是老版本的，所以一直报错。最后找到了2.0的教程，终于证实了自己已经正确安装。</p>
<p>如果有时间，我可以考虑写一篇教程，帮助大家少走弯路。</p>
<p>#这是第一个成功实现的tensorflow-2.0;</p>
<p>i</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> tensorflow <span class="keyword">as</span> tf</span><br><span class="line"><span class="keyword">from</span> tensorflow.keras <span class="keyword">import</span> layers</span><br><span class="line">print(tf.__version__)</span><br><span class="line">print(tf.keras.__version__)</span><br></pre></td></tr></table></figure>


]]></content>
      <categories>
        <category>Tensorflow</category>
      </categories>
  </entry>
  <entry>
    <title>Tensorflow之自动求导实现</title>
    <url>/2019/11/26/Tensorflow/Tensorflow%E4%B9%8B%E8%87%AA%E5%8A%A8%E6%B1%82%E5%AF%BC%E5%AE%9E%E7%8E%B0/</url>
    <content><![CDATA[<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#自动求导机制</span></span><br><span class="line"><span class="keyword">import</span> tensorflow <span class="keyword">as</span> tf </span><br><span class="line"><span class="comment">#tf.Variable()用于声明一个变量，它需要一个初始值将其存储在initial_value中。</span></span><br><span class="line">x = tf.Variable(initial_value=<span class="number">3.</span>)<span class="comment">#Pyhon中可以使用整数后加小数点表示将该整数定义为浮点数类型。例如3.表示3.0</span></span><br><span class="line"><span class="keyword">with</span> tf.GradientTape() <span class="keyword">as</span> tape: </span><br><span class="line">    y = tf.math.log(x)<span class="comment">#这里math.log()表示的是底数为e(只是默认为e，可以修改)的对数函数，类似的，如果要计算y=x的平方的导数，将math.log()改为square即可</span></span><br><span class="line">y_grad = tape.gradient(y,x)</span><br><span class="line">print([y,y_grad])</span><br><span class="line"><span class="string">'''输出结果为：</span></span><br><span class="line"><span class="string">[&lt;tf.Tensor: id=93, shape=(), dtype=float32, numpy=1.0986123&gt;, &lt;tf.Tensor: id=96, shape=(), dtype=float32, numpy=0.33333334&gt;]</span></span><br><span class="line"><span class="string">'''</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Tensorflow</category>
      </categories>
  </entry>
  <entry>
    <title>第三章 重返校园</title>
    <url>/2019/11/26/%E5%B0%8F%E8%AF%B4%EF%BC%88%E4%B8%80%EF%BC%89/%E7%AC%AC%E4%B8%89%E7%AB%A0%20%E9%87%8D%E8%BF%94%E6%A0%A1%E5%9B%AD/</url>
    <content><![CDATA[<p>第五章 重返校园<br>白发少年离开项羽陵墓以后，便来到了翘楚市。<br>翘楚市作为浙省的省会，繁华异常，恰逢计算机包括人工智能在内的互联网产业的兴起，翘楚市已经在全国打出名声，从一个名不经传的地级市一跃成为了一座名副其实的现代化大都市。</p>
<p>不过，白发少年选择翘楚市作为重返凡世的地点，并非是看中了翘楚市的繁华，毕竟他和项羽一样，天生喜欢清净，况且已经活了十万余年，试问这个世界上还有怎样的繁华是白发少年所没有见过的呢，又有什么东西是白发少年所痴迷的呢。繁华如帝王的宫殿都吸引不了他，珍贵如一座座金山银山都无法让他感兴趣，区区一个正在发展中的现代化都市，又能怎么样呢。就像网络上爆红的某首富一亿的小目标于世界首富而言不过是个笑话，但普通人却是惊讶不已一样，不同的人对财富和珍贵有着不同的定义，而这仅仅是因为身份不同，见识不同，仅此而已。<br>至于选择翘楚市只不过是刚好他发现在翘楚中学有一个各项特征都符合他期望的的高中生前不久却意外死亡，所以他决定冒名顶替，替代死亡学生走完本该走完的路，也为了自己寻求长生之谜答案准备一个合理的身份。</p>
<p>来到翘楚市时，正好是周末，于是白发少年在一处不起眼的地方租了房子，这为的是不被外界人打扰到自己的清净，也为了避免前几世那些不知死活的仇家找上门来报仇。就这样，剑仙陈紫阳慢慢开启了这一世的新生活。</p>
<p>第二周星期一，白发少年徒步来到了翘楚中学，他并没有坐车，因为车能有御剑快吗？21世纪的所有高科技出行工具，在剑仙的眼中不过就是一个天大的笑话。非但车比不上御剑，就算是飞机比之御剑又如何？白发少年选择走路，只不过是为了更好地了解这个世界而已，但还别说，世界的发展还真的挺快的，现在的一切比起前几世的真的是一个在天上，一个在地下。</p>
<p>不过由于不了解21世纪中国学校的规定，白发少年来得很晚，迟到了，所以，在白发少年刚刚要进入学校之时便被学校门口的保安拦住了。</p>
<p>“做什么的？”门口的保安厉声问道<br>“我来上学。”白发少年不紧不慢地回答。<br>“那你为什么现在才来。”保安继续追问。<br>“不好意思，我生病了，所以迟到了。”白发少年看都没有看保安一眼，心里只是暗自想到：看来真的是离开凡世太久了，现在连上个学都有这么多的规矩啊，还不由得想起了很久很久以前听夫子讲课的时候。<br>那时候夫子座下弟子三千，各个都是博学多识的有识之士，但是他们都心甘情愿的居于夫子之下，总是耐心地倾听夫子的教诲，静静学习着夫子的精神财富。<br>但世人只知道夫子有弟子三千，却从不了解三千弟子中有一个人不但是夫子的得意门生，更是夫子的手足兄弟。那就是白发少年，那时他叫陈紫阳，而他有一个更为人熟悉的名号：剑仙。</p>
<p>在夫子座下学习不得不说是一件特别幸运的事情，因为夫子懂得如何为人师，明白如何因材施教，知道怎样才能最大地调动学生们学习的兴趣，而不是像今天的教育一样，在中高考的压力下，即使出了几个学习异常优异的学生，但内心对知识的渴求和欲望却已经消失得无影无踪。而夫子不一样，夫子教育学生，并不是要求他的学生今后一定能多有出息，或者是能够当上什么大官或是赚多少钱，而是让他们明白知识的重要性，明白学到老活到老这句至理名言。所以作为夫子的学生并没有什么规矩，也从不存在迟到了会不准继续学习的要求，只要你心里向往着知识，什么时候来听夫子讲课都可以，只要不影响正在听课的其他同学。</p>
<p>想着想着，白发少年眼角竟有些湿润了，没想到过去了这么多年，“我还是会不时地想起你，夫子，学生真的想你了。”</p>
<p>“那我怎么看你都不像是一个正经学生啊，留着满头白发，看着倒是很显眼，但是一点学生该有的朝气都看不到啊。”眼见着眼前的白发小子并不拿自己当回事，保安心里很是气愤，不由得说话声音更大了起来。<br>“哈哈，那不是陈涵嘛，保安叔叔，你就让他进来吧，他真的是我们学校的，你知道高二3班那个废物学生嘛，就是他。”保安刚说完话，就迎面走过来一个全身穿着名牌，一看就知道是一个富家纨绔子弟的男生。<br>走到陈涵面前，男生又转而对着陈涵大声地说，“你以为你染了一头白发，我就认不出来是你了吗？废物永远都是废物，变成什么样子都是一样。”说完，他还戏谑的大笑了起来，也让围观的学生越来越多，他们都想看看学校大名鼎鼎的废物陈涵究竟是谁，也准备趁机嘲笑陈涵一番。<br>见到这样的状况，保安也就让白发少年进去了，虽说之前确实不知道这个叫陈涵的男生，但此刻眼里表现出的尽是对陈涵的鄙夷。直到保安回门卫室的时候，心里都还早嘲讽那个被称作废物的白发少年，心里也暗自窃喜：想不到，这个世界上真的还有比我这样的废物还废物的人，哈哈哈哈。<br>不过陈涵都没看在眼里，因为在剑仙的眼中，这些人只不是一群跳梁小丑，想要废掉他们，随时都可以，问题只是没有必要，毕竟凡人皆如蝼蚁，蝼蚁的牢骚之语去那么计较干什么呢。但同时白发少年的心中也闪过一丝愤怒，他没有想到，那个意外死亡的男孩居然受到了如此巨大的侮辱，心中顿时也是愤愤不平。<br>本来活了十万余年剑仙不应该有这些凡人该有的情绪，但既然他已经代替了意外死亡的男孩，便有责任将男孩的尊严全部拿回来，这也是白发少年在被人叫做陈涵废物时没有发作的原因。</p>
<p>前几世的白发少年，是万众瞩目的剑仙，他有一剑，可以斩日月，他有一决，可以问苍天。<br>一剑在手，问人能敌。<br>但在白发少年的心中，却有一个困惑了他很久很久的问题：他为何能长生，或者说长生的命为何选择了他？<br>为了解答这个问题，他询问过同为修炼者的夸父，可夸父在劈开天地之后便因耗尽精气而死，而困惑依然无解；他也曾请教过夫子，夫子却只告诉他，你会因长生而流芳百世，而我虽只有一世的寿命却会因精神的光辉而永垂不朽，这即是‘缘’。<br>后来，他又向很多很多的名人圣师追寻过答案，但终归是没有答案。<br>而长生就像是一个无法突破的囚牢困住了他，“长生之谜”又像是一扇没有钥匙的门挡住了他思索的方向和前进的道路。<br>因此，表面光鲜的长生少年饱受了长生的折磨，在疑惑和不解中生活了十万余年之后，最终他决定在地球灵气还未完全耗尽之时，再来尘世走一遭，希望此世可以解开长生之谜，然后安然飞升，以免地球灵力耗尽。那时候再想飞升也是来不及了，万年剑仙最终成为了蓝星和凡人的陪葬。</p>
<p>就这样，白发少年接受了陈涵这个名字，也既而接受了这个名字背后背负的屈辱和痛苦。他面容平静，面对围观人员的嘲讽心如止水，一路无视人们的鄙夷和嘲讽，径直走入了翘楚中学的大门。</p>
<p>一出好戏即将上演。</p>
]]></content>
      <categories>
        <category>小说（一）</category>
      </categories>
  </entry>
  <entry>
    <title>问题实现2</title>
    <url>/2019/11/26/C%E8%AF%AD%E8%A8%80%E4%BD%9C%E4%B8%9A/%E9%97%AE%E9%A2%98%E5%AE%9E%E7%8E%B02/</url>
    <content><![CDATA[<p>//程序功能是:在 n 行 n 列的矩阵中，每行都有最大的数，程序求这 n 个最大数中<br>的最小值，完成程序并调试。</p>
<p>#include&lt;stdio.h&gt;</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">#<span class="meta">#<span class="meta-keyword">define</span> N 5`</span></span><br><span class="line"></span><br><span class="line">`**<span class="function"><span class="keyword">void</span>** <span class="title">mins</span><span class="params">(**<span class="keyword">int</span>** a[N][N])</span></span>;`</span><br><span class="line"></span><br><span class="line">`**void** mins(**int** a[N][N])`</span><br><span class="line"></span><br><span class="line">`&#123;`</span><br><span class="line"></span><br><span class="line">  `**<span class="keyword">int</span>** row,col,<span class="built_in">max</span>=<span class="number">0</span>,<span class="built_in">min</span>=<span class="number">0</span>;`</span><br><span class="line"></span><br><span class="line">  `**<span class="keyword">for</span>** (row=<span class="number">0</span>; row&lt;N; row++) &#123;`</span><br><span class="line"></span><br><span class="line">​    `**<span class="keyword">for</span>** (<span class="built_in">max</span>=a[row][<span class="number">0</span>],col=<span class="number">1</span>;col&lt;N; col++) &#123;`</span><br><span class="line"></span><br><span class="line">​      `**<span class="keyword">if</span>** (<span class="built_in">max</span>&lt;a[row][col])&#123;`</span><br><span class="line"></span><br><span class="line">​        `<span class="built_in">max</span>=a[row][col];`</span><br><span class="line"></span><br><span class="line">​      `&#125;&#125;`</span><br><span class="line"></span><br><span class="line">​    `**<span class="keyword">if</span>** (row==<span class="number">0</span>)&#123;`</span><br><span class="line"></span><br><span class="line">​        `<span class="built_in">min</span>=<span class="built_in">max</span>;`</span><br><span class="line"></span><br><span class="line">​      `&#125;`</span><br><span class="line"></span><br><span class="line">​    `**<span class="keyword">else</span>** **<span class="keyword">if</span>** (<span class="built_in">max</span>&lt;<span class="built_in">min</span>)&#123;`</span><br><span class="line"></span><br><span class="line">​        `<span class="built_in">min</span>=<span class="built_in">max</span>;`</span><br><span class="line"></span><br><span class="line">​      `&#125;`</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  `&#125;`</span><br><span class="line"></span><br><span class="line">  `<span class="built_in">printf</span>(<span class="string">"最小值是:%d\n"</span>,<span class="built_in">min</span>);`</span><br><span class="line"></span><br><span class="line">`&#125;`</span><br><span class="line"></span><br><span class="line">`**int** main()`</span><br><span class="line"></span><br><span class="line">`&#123;`</span><br><span class="line"></span><br><span class="line">  `**<span class="keyword">int</span>** a1[N][N]=&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">40</span>,<span class="number">11</span>,<span class="number">12</span>,<span class="number">13</span>,<span class="number">14</span>,<span class="number">15</span>,<span class="number">21</span>,<span class="number">22</span>,<span class="number">23</span>,<span class="number">24</span>,<span class="number">25</span>,<span class="number">31</span>,<span class="number">32</span>,<span class="number">33</span>,<span class="number">34</span>,<span class="number">35</span>,<span class="number">41</span>,<span class="number">42</span>,<span class="number">43</span>,<span class="number">44</span>,<span class="number">500</span>&#125;;`</span><br><span class="line"></span><br><span class="line">  `mins(a1);`</span><br><span class="line"></span><br><span class="line">  `**<span class="keyword">int</span>** a2[N][N]=&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">10000</span>,<span class="number">11</span>,<span class="number">12</span>,<span class="number">13</span>,<span class="number">14</span>,<span class="number">923</span>,<span class="number">21</span>,<span class="number">22</span>,<span class="number">23</span>,<span class="number">24</span>,<span class="number">25</span>,<span class="number">31</span>,<span class="number">32</span>,<span class="number">33</span>,<span class="number">34</span>,<span class="number">35</span>,<span class="number">41</span>,<span class="number">42</span>,<span class="number">43</span>,<span class="number">44</span>,<span class="number">500</span>&#125;;`</span><br><span class="line"></span><br><span class="line">  `mins(a2);`</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>C语言作业</category>
      </categories>
  </entry>
  <entry>
    <title>第二章 再见西楚霸王</title>
    <url>/2019/11/25/%E5%B0%8F%E8%AF%B4%EF%BC%88%E4%B8%80%EF%BC%89/%E7%AC%AC%E4%BA%8C%E7%AB%A0%20%E5%86%8D%E8%A7%81%E8%A5%BF%E6%A5%9A%E9%9C%B8%E7%8E%8B/</url>
    <content><![CDATA[<p>公元前二零二年，楚汉双方在垓下进行了一场震动中外的战略决战，最后以项羽自刎，楚军战败而告终，史称“垓下之战”。</p>
<p>“先生，您真的要走吗？”</p>
<p>“嗯…。”</p>
<p>“先生，那我今后还能见到您吗？”</p>
<p>“籍，若是有缘，我们定会相见。”</p>
<p>“先生，多亏你的倾囊相助，我才得以和刘邦平分天下。我如今正在筹备兵力，以便不久以后能和刘邦决一死战。可刘邦太狡猾了，稍有不慎恐怕就会浑身碎骨啊。所以这可能是我最后一次和您喝酒了。要是我真的败了，还请先生能够回来看看我，岁月漫长，我怕我一个人在地底下会很清冷孤独啊。”</p>
<p>“可。”</p>
<p>说完，白发少年踏着青铜宝剑，向虚空飞去，很快便消失不见。</p>
<p>“项籍恭祝先生仙去。”项羽双手作揖，恭敬地跪在地上，直到白发少年离去。</p>
<p>两年后，垓下。</p>
<p>平静已久的战神项羽重返战场，仅是以一人之力就打得汉军连连败退，但敌我悬殊，加上刘邦阴险狡诈，战神项羽也终究是不敌，只好带着仅剩的八百余壮士冲破汉军层层包围，一路快跑，来到了乌江岸边。</p>
<p>此刻，项羽正在在乌江岸边，面对着乌江边停留的一艘小船，目光坚定，眼神远望着虚空一角。</p>
<p>“霸王，快走吧，再不走就要来不及了。”等候的渔夫见项羽迟迟没做决定，便焦急地询问道。</p>
<p>“是啊，霸王，快走，这里有我们顶着，我们就算是死，也定要护霸王周全。”为首的壮士扶刀而跪，声音嘶声力竭。接着，所有壮士都跪了下来。</p>
<p>“我们就算是死，也定护霸王周全。”众壮士异口同声，吼声响破天际。</p>
<p>“霸王，快走吧。留得青山在不怕没柴烧啊。等我们回到江东，我们定能招募更多的士兵，那时候我们一定能够卷土重来，回来报仇啊！”船夫着急得提醒道。</p>
<p>“霸王，是啊。我们等您回来为我们保仇。快走吧，再不走就真的来不及了。”众壮士应和道。</p>
<p>此时，项羽紧闭双眼，双手紧握着天龙破城戟。思考了片刻后，项羽睁开双眼，变得杀气腾腾。</p>
<p>而当看着这些为自己忠心耿耿的将士时，项羽又很是欣慰，他平静了心中的怒火和不甘，缓缓说道：“当年我于江东起兵，想为天下苍生的福祉奉献出我的微薄之力。承蒙乡亲父老的信任，我项羽才能于江东起兵，并在各位乡亲的帮助和扶持下最终得以达成今天这样的的成就。可如今，追随我出来拼命打拼的江东人已所剩无几，他们之中死的死，伤的伤。这都是我犯的过错啊，我怎么还有脸回江东，去见江东的父老乡亲呢。抱歉各位，我是真的做不到。今天纵然是死，我项羽也要挫败刘邦的锐气，灭灭他那不可一世的威风。所以我决定了，我是不回江东的，我要在这里和汉军决一死战。”</p>
<p>“霸王不可啊。我们都是您教出来的兵，我们的命微不足道，能为您而死，是我们今生莫大的荣耀。可是霸王您是有帝王之气的啊，您只要今日不死，来日一定能做帝王啊。霸王！”为首的壮士再一次声嘶力竭地吼叫。</p>
<p>“是啊，霸王！请王三思，请王三思啊！”众壮士不停地吼着，直到最后声音听着就像是在乞求。</p>
<p>“我心意已决。尔等休要再说。不过你们要是有人想走，直接走了便是，今日我不当你们是逃兵。”项羽说完，轻声叹了口气，叹息声中既有失败的无可奈何，也有败给刘邦的内心不甘。</p>
<p>“能与霸王同生死，我们怎么能离开呢！“为首的壮士最终知道了霸王的最后决定，所以他也做好了和项羽并肩作战，战死沙场的准备。</p>
<p>”众将士听令，和汉军决一死战！”于是为首的壮士站了起来，用自己的行动默默支持着这个走投无路的男人，也表现出了他对项羽的赤胆忠心。</p>
<p>“杀无赦！杀无赦！杀无赦！”众壮士齐声吼着，竟无一人离开。</p>
<p>不过很快，汉军追来，千军万马围住了项羽等人。</p>
<p>项羽望着眼前的来犯之敌，突然间杀气腾腾。</p>
<p>“杀！”他不等手下壮士一起，而是一个人冲入了千军万马的敌军之中。</p>
<p>随后，八百壮士扑向汉军，两军正式交战。</p>
<p>战神项羽外加八百死士，战斗力都异常惊人，人人都能以一定抵俩，项羽更是以一当十，一时间，汉军节节败退。</p>
<p>可无奈，两军人数悬殊太多，再加上刘邦的要挟刺激，汉军士兵竟是愈战愈勇。</p>
<p>几个小时过后，楚军这边就只剩下楚霸王项羽一个人了。</p>
<p>此时，众多汉军围着项羽，但无一人敢上前。在亲眼见证了战神的恐怖以后，汉军士兵人人提心吊胆，生怕自己就是项羽戟下的下一个亡魂。</p>
<p>而项羽，此刻正立于汉军中央，虽被敌军紧紧包围，但他不惧，是啊，又有什么好惧怕的，对于现在的项羽，唯一亏欠的，就是前不久为了自己能够安心应敌而自杀的虞姬了。</p>
<p>项羽思索了片刻，手里用着更大的力握着陪伴自己征战无数战场的兵器握天龙破城戟，而眼神凝望着虚空一角。</p>
<p>“先生。项籍今天怕是难逃一死了。死我是不怕的，我怕的是，我再也见不到先生了，再也不能为先生倒酒了。”</p>
<p>“先生，永别了。”项羽将天龙破城戟扔向空中，待到天龙破城戟落下之时，项羽移到了天龙破城戟正下方。</p>
<p>“先生，记得回来看看籍啊！”</p>
<p>“先生，我好不甘心！”</p>
<p>“先生…”</p>
<p>毫无意外地天龙破城戟直接刺入了项羽喉咙，一代战神就此落幕。</p>
<p>而此时，正在九天云霄吐息的白发少年眉头一紧，暗道：籍，想不到连你都败了啊，或许这就是凡人的命吧，可我一个仙人又能几何呢。于我而言，宇宙万千都只不过是沧海一粟，又何况只是一个小小的蔚蓝星球的帝王之争。所以我是不能够最后祝你一臂之力的啊。不过，我却不忍见你的尸体被人糟蹋。就让我再帮你最后一次！</p>
<p>白发少年踩着祥云，从九天云霄直奔垓下而来。</p>
<p>白发少年速度极快，到达垓下之时，离项羽自刎不过过了几分钟，这就是仙的速度。白发少年速度之快，早已超越了时间和空间的束缚，或许只有天命才能束缚住白发少年。</p>
<p>不过于百姓而言，帝王便是天命，于王侯将相而言，天命即是天命，而对于白发少年，他便是天。作为宇宙中首屈一指的修行之人，白发少年睥睨一切，视苍生为蝼蚁，却偶尔也萌发出绵延的怜惜之心。项羽作为其十万年长生之路的一个过客，虽说不太重要，但却也占据了一席之地，这便是白发少年愿意费精力跑一趟的原因。</p>
<p>白发少年到时，恰好碰见刚刚分完项羽尸体的汉军，正要割掉项羽头颅的耳朵，挖掉眼睛拿回去向刘邦分别领赏。</p>
<p>白衣少年突然从天而降，落在了汉军身旁。</p>
<p>“什么人？报上名来！”见到突如其来的天降之人，领头的汉军胆战地问道。</p>
<p>“取尔等性命之人！”白发少年淡淡地说道，然后便目望虚空，俨然一副放空一切的姿态。</p>
<p>“找死，兄弟们，给我上！”刚沉浸在刘邦封赏意淫中的汉军将士真的被激怒了。话一说完，一群汉军士兵已经冲着白衣少年而来。一时间气势冲冲，杀气腾腾。</p>
<p>而白衣少年平静而沉默，面对众多敌人，没有丝毫慌乱，默念到：我堂堂剑仙，活了数十万年，本已对凡世间一切无所顾忌，却也不想滥杀无辜。可若是有人胆敢冒犯我，我定会灭尔等九族。</p>
<p>话一刚完，白发少年轻念一声：“斩”。只见一枚青铜古剑突然出现在空中，在众多士兵还未觉察之际，古剑横空一扫，所有刚刚还气焰嚣张的汉军士兵，此刻却规规整整地躺在了地上，毫无生气，死得不能再死了。</p>
<p>白衣少年慢慢前移，走到了项羽头颅面前，俯下身用手捧起了项羽头颅。</p>
<p>“籍。我来晚了。休要怪先生啊。”</p>
<p>“在长白山下有一块风水宝地，你就在那里安息吧。我知道你累了，你终于可以休息了。”</p>
<p>说完，白发少年将头颅抛向空中，头颅在未知力量的指引下径直飞向长白山山底。</p>
<p>突然，一束金光闪耀天际，长白山山底一阵巨动。</p>
<p>长白山项羽之墓就此形成。</p>
<p>陵墓大门前，几个大字苍劲有力：剑仙之仆项羽。</p>
]]></content>
      <categories>
        <category>小说（一）</category>
      </categories>
  </entry>
  <entry>
    <title>第一章 横空出世</title>
    <url>/2019/11/25/%E5%B0%8F%E8%AF%B4%EF%BC%88%E4%B8%80%EF%BC%89/%E7%AC%AC%E4%B8%80%E5%BC%A0%20%E6%A8%AA%E7%A9%BA%E5%87%BA%E4%B8%96/</url>
    <content><![CDATA[<p>长白山是欧亚大陆东缘的最高山系，地处白山市东南部，位临中国与朝国边界，一直以来都是游客们乐意造访的风景名胜。<br>　　作为一座休眠已久的巨型复式火山，长白山拥有的丰富自然资源也为不同的生物提供了活下去和繁衍的可能，这些使长白山俨然已经成为了一个天然的绿色生态公园。<br>　　然而除了风景优美以外，长白山闻名全国还有一个不为人知的秘密：作为一个景色优美风水又好的山脉，长白山下埋葬了许许多多不同身份的贵人，也保留了众多可研究价值极高的陵墓。<br>　　长白山山脚。<br>　　“报告雷教授，长白山下发现大型墓葬，疑似项羽陵墓，沈教授叫我来通知您下去。”小王急匆匆地跑到队伍驻扎点，满脸都是汗水却又洋溢着兴奋和激动。<br>　　“是真的吗？快快快，带我去看。杨然，你快去报告郝队长，说我们这里有重大发现，我先下去看看，记住，叫他把考古队其他人都带过来。”<br>　　说完这话，雷教授赶忙跟着小王前往挖掘现场。<br>　　挖掘现场。<br>　　四周都是茂密的森林，远远看起来，那些高大的树木奇形怪状，就像是笔直站立的僵尸。<br>　　这样的景致让雷教授一行人都目瞪口呆，尤其是考古队伍中的一些新队员，因为本就是第一次外出实地侦查，见到如此怪异的景象难免心头一震。<br>　　不过不同于考古队的其他人，雷教授感到惊讶是因为他在思考一个问题，这里看着根本不像是有墓穴，为何老沈会一口笃定这就是项羽之墓？要知道，当年垓下之围时项羽因为不肯渡乌江最后被汉军围攻而死。<br>　　而在项羽死后，刘邦因为对项羽还有所感念，又为了收拢那些忠于项羽而又一直躲在暗处的人，于是命令手下将项羽厚葬，但令人奇怪的是，当汉军收集齐已经四分五裂的项羽尸体并准备按照要求厚葬项羽时，士兵们发现项羽的头颅不见了。<br>　　所以千百年来人们一直祭拜的项羽之墓只是一个躯体墓，最最重要的头颅之墓人们一直都在寻找，却始终是一个谜。这也是雷教授一听到项羽墓就急冲冲赶来的原因。<br>　　“该不会是老沈弄错了吧？”雷教授轻声自言自语道。<br>　　“教授，你在做什么？”秦嫣然突然冲到教授跟前，大声问道。<br>　　“啊！你干什么！你个死丫头，吓死我了，真是没大没小的。注意跟着我，别走丢了。”<br>　　“是，教授。”说完秦嫣然就挽着教授的手，不再大声嬉笑了。<br>　　秦嫣然，是西京大学校花，也是考古队里面的明星人物。<br>　　因为其美丽的外表，性感的身体曲线，再加上极其聪明的脑袋，所以她一直都是考古队里的宝贝。无论考古队其他队员，还是里面德高望重的教授前辈，都很宠爱她，说她是考古队里的女王也不为过。<br>　　秦嫣然就这样和教授并排走着，突然，前面带路的小王停了下来，还指着前面的一个巨大的树洞对雷教授对说：“教授，这个树洞就是我们的目的地。”<br>　　听到这话，所有人都一愣，都有点丈二和尚摸不到头脑。不过雷教授却是恍然大悟。<br>　　“哈哈哈哈。我还以为是老沈搞错了呢。楚霸王之墓怎么会在长白山这样风景优美的地方却又修得如此隐蔽。原来，墓穴安在这里是有意为之，目的就是掩人耳目，毕竟当时已经是刘邦的天下了，就算是刘邦下令厚葬，可要是有一天他反悔了呢，所以项羽的死众为了保全项羽头颅便将墓穴安排在此处。不出意外的话，虞姬的墓恐怕也在下面。”雷教授看大家都神情疑惑，便慢慢向大家解释。<br>　　听完雷教授的一席话后，大家也都明白了。<br>　　于是一行人顺着树洞，慢慢滑下，不一会就便到了底。<br>　　树洞下面，就是墓穴的正门。<br>　　高耸的墓门直破天际，很是壮观。而见到这一番景象，考古队众人顿时目瞪口呆。队员中不时有人嘀咕：“这次一定算得上是考古界最劲爆的消息。”“谁说不是呢，这么雄伟的墓门，里面一定有很多宝藏，要是…。”<br>　　“小李，你说什么呢，我们可都是考古学者，怎么能打这些文物的主意，你说话给我注意点。”本来雷教授听见了队员的谈话也很骄傲，虽说不是自己单独发现的这个墓葬，但至少说明自己眼光也很不错。不过在听到手下人觉悟这么低，还打文物的主意，雷教授的气就不打一出来。<br>　　“是，教授，我们知错。”<br>　　然后考古队一行人逐渐往墓穴面前的沈教授靠过去。<br>　　“老沈，有什么发现吗？”雷教授的亲切地问候道。<br>　　“嗯。有点小发现。刚刚我和手下，在这附近听到了巨大的震动，根据仪器检测结果，震动的原因是由于墓穴下面的板块剧烈运动。”<br>　　“看来里面真的有大宝贝啊。”雷教授接着沈教授的话继续说道。<br>　　突然，一阵更为剧烈的震动响起，使得考古队一行人都胆战心惊。<br>　　而此时，在墓门的东南方，走出来了一位白发及腰的俊俏少年，直接无视了墓门前的众多考古队员。<br>　　“站住，你什么人？”<br>　　随着一声质问声响起，墓门前人们的目光都看向了白发少年。<br>　　“不好意思，我家在附近的村落，前几天在这里迷路，刚刚才走出来。”白发少年回答道。<br>　　“原来是迷路的，让他走吧。”见状，秦嫣然说道。<br>　　话刚说完话，白发少年便瞬间消失在了众人眼中。<br>　　“人呢？怎么一晃眼就不见了。”一个考古队员发问。<br>　　“是啊，怎么回事，是人是鬼啊。”<br>　　“我就想说怎么那么年轻就全是白发，还是长头发，难不成真是鬼？”一连串的议论，让众人都毛骨悚然。<br>　　“大家快看，震动仪显示地下震动已经停止了，而刚刚那个白发少年出现之时却是震动得最明显的时候。”雷教授一直密切注视着震动的变化，虽有奇怪但也想不通缘由，直到觉察到众人的反应，才意识到了问题的严重性。<br>　　“容我说一句。据上古传言，绝世陵墓中存在着护陵人，而这类护陵人不同于一般守墓人，因为他们是长生不老之身。我想，无论这是不是项羽的墓，我们都不应该去打扰他。刚刚的白发人或许只是警告。若要是我们继续进入陵墓，恐怕后果就不是警告这么严重了。”沈教授突然说道。<br>　　听到沈教授的解释，众人开始觉得有些天方夜谭，但转念一想，大家又深信不疑。于是，众人分别收拾起了自己的行李，准备打道回府。<br>　　雷教授则在一旁亲自拨通了郝队长的电话，向他说明了情况，并让他也不要过来了，立即返回。<br>　　可郝队长本来就不是一个善茬，虽然身为考古队队长，却三番五次将考古寻来的宝贝悄悄倒卖到黑货市场。你说遇到这样的好事，他能随便放弃吗？<br>　　于是在雷教授一行人离开以后，郝队长便带着几个他的心腹来到了墓门前。<br>　　郝队长在墓门前东看西看，而每一次观察都会加深他内心的兴奋，因为从各种迹象来看，这都是一座陪葬品异常丰富的绝世陵墓。<br>　　紧接着郝队长几个人准备动手了。<br>　　可毕竟他们不是专业的盗墓者，所以没有专业盗墓的工具和能力，最好的方法就是引爆墓门，但这样的话就会产生较大动静，带来不必要的麻烦，这也是郝队长等雷教授他们离开才动手的原因。<br>　　郝队长吩咐手下将炸药分别放置在长方形墓门的四个顶角，而他自己则一手拿着点燃的烟，一手握着引爆器，俨然一副胜券在握的样子。<br>　　一切都安置好后，郝队长异常兴奋，或许干完这次大买卖后以后就可以金盆洗手了，拿着巨额的钱财当着考古队队长养老是极好极好的。<br>　　郝队长一声令下，炸药像预料的那样也像前几次郝队长几个人干过的那样，引爆了，然而墓门却纹丝不动，没有倒塌，甚至没有一点被破坏的痕迹。<br>　　而就在此时，一个清脆的声音却苍劲有力，响彻云端，不容任何人质疑：“闯项羽陵墓者，死。”<br>　　听到这个声音以后，即使是偷盗过很多次古墓的郝队长也支持不住了，扑通一声跪在地上，不停地磕头，还不停地叫着：“大人，你放了我吧，我下次再也不敢了。”<br>　　见到他们的头儿都被吓成这样，郝队长手下的人也是害怕得不行，便连忙学着郝队长的样子磕了几个响头，不停地乞求着神秘人的原谅。<br>　　等了一小会，也不见有任何事情发生，郝队长他们便也放松了警惕，可就在此时，那个睥睨苍穹的声音又响了起来，“滚！”<br>　　郝队长他们再也坚持不住了，赶忙起身向墓门外跑去，边跑还一边发誓，决定在自己的有生之年，不，还要告诫自己的子子孙孙，都千万不要去打扰那座神秘的陵墓。<br>　　虚空中，白发少年站在云端，用他那远胜顺风耳的听力始终关注着古墓前的情况，眼见考古队一行人慢慢离开，他在心中默念道：“籍，你好大的面子啊，他们居然会认为我是你的守陵人，不过就这样吧，你追随了我那么久，这次就让你占我一个便宜好了，不过这恐怕是我在离开你之前为你做的最后一件事了，我知道虽然你平时大大咧咧的，但终究是喜欢清静之人，我是不会让外人打扰你的。我已经陪同你，沉睡了两百余年，是时候该苏醒了，也该离开了。毕竟这天下没有不散的筵席，更何况你已经永眠了。籍，我不在的日子，你好生安息。今后若是有缘，我定回来陪你喝酒，说不定还提着刘邦的人头，为你助兴。哈哈哈。一切都还没有成为定数，一切都未可知啊。”<br>　　白发少年默念完后，便在虚空中随手一抓，踩在了一只仙鹤身上，背着沉重的青铜宝剑飘然离去。</p>
]]></content>
      <categories>
        <category>小说（一）</category>
      </categories>
  </entry>
  <entry>
    <title>除了文艺，我一无所有</title>
    <url>/2019/11/25/%E6%96%87%E8%89%BA/%E6%96%87%E8%89%BA%E8%AF%97/</url>
    <content><![CDATA[<a id="more"></a>

<p>除了文艺，我一无所有</p>
<p>（nianchu）</p>
<p>月光柔和</p>
<p>我在阴冷的窗前独酌</p>
<p>那婀娜的身影</p>
<p>是在等待谁的思念？</p>
<p>眼神迷离</p>
<p>年少的人儿在心中哭泣</p>
<p>这样的宿命</p>
<p>何时是个尽头？</p>
<p>翻开泛黄的书卷</p>
<p>走进心灵的旅程</p>
<p>灵魂深处本不该有孤寂的烟火</p>
<p>这条熟悉的路上</p>
<p>开着鲜艳的花朵</p>
<p>我心中念叨着的那</p>
<p>些荣耀的时刻</p>
<p>可怜如今的我</p>
<p>除了文艺</p>
<p>不剩什么</p>
]]></content>
      <categories>
        <category>文艺</category>
      </categories>
  </entry>
  <entry>
    <title>问题实现1</title>
    <url>/2019/11/25/C%E8%AF%AD%E8%A8%80%E4%BD%9C%E4%B8%9A/%E9%97%AE%E9%A2%98%E5%AE%9E%E7%8E%B01/</url>
    <content><![CDATA[<p>// Created by 博闻 Kei on 2019/10/2.<br>// Copyright © 2019 博闻 Kei. All rights reserved.<br>//在一个数组中存放20个整数，统计并输出该数组中素数的个数。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdio.h"</span></span></span><br><span class="line"></span><br><span class="line">**<span class="function"><span class="keyword">void</span>** <span class="title">ss</span><span class="params">(**<span class="keyword">int</span>** sz[<span class="number">20</span>],**<span class="keyword">int</span>** j,**<span class="keyword">int</span>** geshu,**<span class="keyword">int</span>** i)</span></span>;<span class="comment">//声明函数</span></span><br><span class="line"></span><br><span class="line">**<span class="function"><span class="keyword">void</span>** <span class="title">ss</span><span class="params">(**<span class="keyword">int</span>** sz[<span class="number">20</span>],**<span class="keyword">int</span>** j,**<span class="keyword">int</span>** geshu,**<span class="keyword">int</span>** i)</span><span class="comment">//实现输出素数个数的函数</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">  **<span class="keyword">while</span>** (i&lt;=<span class="number">19</span>) &#123;j=<span class="number">2</span>;<span class="comment">//执行循环，控制次数</span></span><br><span class="line"></span><br><span class="line">​    **<span class="keyword">if</span>** (sz[i]!=<span class="number">1</span>) &#123;<span class="comment">//认为规定1不是素数</span></span><br><span class="line"></span><br><span class="line">​      **<span class="keyword">while</span>** (j&lt;=sz[i]) &#123;<span class="comment">//执行循环</span></span><br><span class="line"></span><br><span class="line">​        **<span class="keyword">if</span>** (sz[i]%j==<span class="number">0</span>) &#123;<span class="comment">//判断整数能否被j整除，如果可以执行下一步</span></span><br><span class="line"></span><br><span class="line">​          **<span class="keyword">if</span>** (sz[i]==j) &#123;<span class="comment">//判断这个整数是否是它本身</span></span><br><span class="line"></span><br><span class="line">​            geshu++;<span class="comment">//如果是，个数➕1</span></span><br><span class="line"></span><br><span class="line">​          &#125;</span><br><span class="line"></span><br><span class="line">​          **<span class="keyword">else</span>**&#123;**<span class="keyword">break</span>**;&#125;<span class="comment">//否则，跳过</span></span><br><span class="line"></span><br><span class="line">​        &#125;</span><br><span class="line"></span><br><span class="line">​        j++;</span><br><span class="line"></span><br><span class="line">​      &#125;</span><br><span class="line"></span><br><span class="line">​    &#125;</span><br><span class="line"></span><br><span class="line">​    i++;</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"素数的个数为：%d\n"</span>,geshu);<span class="comment">//输出素数个数</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">**<span class="function"><span class="keyword">int</span>** <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">  **<span class="keyword">int</span>** sz1[<span class="number">20</span>]=&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span>,<span class="number">11</span>,<span class="number">12</span>,<span class="number">13</span>,<span class="number">14</span>,<span class="number">15</span>,<span class="number">16</span>,<span class="number">17</span>,<span class="number">18</span>,<span class="number">19</span>,<span class="number">20</span>&#125;;</span><br><span class="line"></span><br><span class="line">  ss(sz1, <span class="number">2</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">  **<span class="keyword">int</span>** sz2[<span class="number">20</span>]=&#123;<span class="number">100</span>,<span class="number">43</span>,<span class="number">33</span>,<span class="number">123</span>,<span class="number">41234</span>,<span class="number">33</span>,<span class="number">44</span>,<span class="number">24</span>,<span class="number">67</span>,<span class="number">12</span>,<span class="number">13</span>,<span class="number">14</span>,<span class="number">45</span>,<span class="number">46</span>,<span class="number">7</span>,<span class="number">89</span>,<span class="number">99</span>,<span class="number">39</span>,<span class="number">23</span>,<span class="number">40</span>&#125;;</span><br><span class="line"></span><br><span class="line">  ss(sz2, <span class="number">2</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


]]></content>
      <categories>
        <category>C语言作业</category>
      </categories>
  </entry>
  <entry>
    <title>起航</title>
    <url>/2019/11/24/%E8%B5%B7%E8%88%AA/%E9%A9%AC%E4%B8%81%C2%B7%E8%B7%AF%E5%BE%B7%E9%87%91%E8%AF%B4%EF%BC%9A%E2%80%9C%E6%AF%8F%E4%B8%AA%E4%BA%BA%E9%83%BD%E6%9C%89%E8%87%AA%E5%B7%B1%E7%9A%84%E6%A2%A6%E6%83%B3%EF%BC%8C%E6%88%91%E4%B9%9F%E4%B8%80%E6%A0%B7%E3%80%82%E2%80%9D/</url>
    <content><![CDATA[<p>马丁·路德金说：“每个人都有自己的梦想，我也一样。”<br>AI之路崎岖异常，我用努力做武器。</p>
]]></content>
      <categories>
        <category>AI</category>
      </categories>
  </entry>
</search>
